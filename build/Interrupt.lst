ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Interrupt.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_d2f
  22              		.global	__aeabi_ddiv
  23              		.section	.text.Explore_IT,"ax",%progbits
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	Explore_IT:
  30              	.LFB241:
  31              		.file 1 "Core/Src/Main/Interrupt.c"
   1:Core/Src/Main/Interrupt.c **** /*
   2:Core/Src/Main/Interrupt.c ****  * Interrupt.c
   3:Core/Src/Main/Interrupt.c ****  *
   4:Core/Src/Main/Interrupt.c ****  *  Created on: 2022/02/15
   5:Core/Src/Main/Interrupt.c ****  *      Author: leopi
   6:Core/Src/Main/Interrupt.c ****  */
   7:Core/Src/Main/Interrupt.c **** #include "Interrupt.h"
   8:Core/Src/Main/Interrupt.c **** 
   9:Core/Src/Main/Interrupt.c **** #include "Action.h"
  10:Core/Src/Main/Interrupt.c **** #include "MicroMouse.h"
  11:Core/Src/Main/Interrupt.c **** 
  12:Core/Src/Main/Interrupt.c **** #include <math.h>
  13:Core/Src/Main/Interrupt.c **** // #include "Convert.h"
  14:Core/Src/Main/Interrupt.c **** #include "UI.h"
  15:Core/Src/Main/Interrupt.c **** #include "PID_Control.h"
  16:Core/Src/Main/Interrupt.c **** 
  17:Core/Src/Main/Interrupt.c **** #include "mouse_ADC.h"
  18:Core/Src/Main/Interrupt.c **** //#include "LED_Driver.h"
  19:Core/Src/Main/Interrupt.c **** #include "IR_Emitter.h"
  20:Core/Src/Main/Interrupt.c **** #include "Motor_Driver.h"
  21:Core/Src/Main/Interrupt.c **** #include "ICM_20648.h"
  22:Core/Src/Main/Interrupt.c **** #include "Mode.h"
  23:Core/Src/Main/Interrupt.c **** // #include "Sampling.h"
  24:Core/Src/Main/Interrupt.c **** 
  25:Core/Src/Main/Interrupt.c **** int timer1,timer8, t;
  26:Core/Src/Main/Interrupt.c **** int IT_mode;
  27:Core/Src/Main/Interrupt.c **** int velodebug_flag=0;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 2


  28:Core/Src/Main/Interrupt.c **** int dbc = 0;
  29:Core/Src/Main/Interrupt.c **** logger_f identify[2];
  30:Core/Src/Main/Interrupt.c **** 
  31:Core/Src/Main/Interrupt.c **** const float convert_to_velocity = MM_PER_PULSE/T1;
  32:Core/Src/Main/Interrupt.c **** const float convert_to_angularv = 1/TREAD_WIDTH;
  33:Core/Src/Main/Interrupt.c **** //const float convert_to_imu_angv = M_PI/(16.4f*180.0f);
  34:Core/Src/Main/Interrupt.c **** const float convert_to_imu_yaccel = 1000*9.80392157f / 2048.0f; //1000*„Å™„Çì„Å°„ÇÉ„Çâg√ó9.80392157
  35:Core/Src/Main/Interrupt.c **** // const float maintain_output_valtage = 1/(BATTERY_MAX;
  36:Core/Src/Main/Interrupt.c **** // PID„ÅßË®àÁÆó„Åó„ÅüÂÄ§ = ÈõªÂúßÂÄ§„ÄÅ„Çí„ÄÅ„Ç´„Ç¶„É≥„ÇøÂÄ§„Å´Â§âÊèõ„Åô„ÇãÂá¶ÁêÜ„ÅåË¶Å„Çã
  37:Core/Src/Main/Interrupt.c **** 
  38:Core/Src/Main/Interrupt.c **** logger_f log_velocity;
  39:Core/Src/Main/Interrupt.c **** inline void calcVelocity(){
  40:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
  41:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  42:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
  43:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  44:Core/Src/Main/Interrupt.c **** 
  45:Core/Src/Main/Interrupt.c **** 	//ÈÄüÂ∫¶ mm/s
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[LEFT] =  (float)PulseDisplacement[LEFT] * convert_to_velocity;
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  48:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  49:Core/Src/Main/Interrupt.c **** 
  50:Core/Src/Main/Interrupt.c **** 	//ÁßªÂãïÈáè mm/ms„ÇíÁ©çÁÆó
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
  54:Core/Src/Main/Interrupt.c **** }
  55:Core/Src/Main/Interrupt.c **** 
  56:Core/Src/Main/Interrupt.c **** static void SystemIdentify_IT(){
  57:Core/Src/Main/Interrupt.c **** 	
  58:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  59:Core/Src/Main/Interrupt.c **** 
  60:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle);
  61:Core/Src/Main/Interrupt.c **** 
  62:Core/Src/Main/Interrupt.c **** 	static int identify_count=0;
  63:Core/Src/Main/Interrupt.c **** 	static int count=0;
  64:Core/Src/Main/Interrupt.c **** 	float output[2] ={
  65:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
  66:Core/Src/Main/Interrupt.c **** 		AngularV
  67:Core/Src/Main/Interrupt.c **** 	};
  68:Core/Src/Main/Interrupt.c **** 	float input[2]={0};
  69:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
  70:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
  71:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
  72:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
  73:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
  74:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
  75:Core/Src/Main/Interrupt.c **** 		}
  76:Core/Src/Main/Interrupt.c **** 		if( (count%40) == 0 ){ //15„Çí„ÅÑ„Åò„Çå„Çã„Çà„ÅÜ„Å´„Åô„Çã
  77:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
  78:Core/Src/Main/Interrupt.c **** 			input[0] *= convert_to_reg_counter;
  79:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
  80:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
  81:Core/Src/Main/Interrupt.c **** 			identify_count++;
  82:Core/Src/Main/Interrupt.c **** 			
  83:Core/Src/Main/Interrupt.c **** 		}
  84:Core/Src/Main/Interrupt.c **** 		count++;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 3


  85:Core/Src/Main/Interrupt.c **** 	}
  86:Core/Src/Main/Interrupt.c **** 	else{
  87:Core/Src/Main/Interrupt.c **** 		Motor_Switch(0,0);
  88:Core/Src/Main/Interrupt.c **** 		count = 0;
  89:Core/Src/Main/Interrupt.c **** 	}
  90:Core/Src/Main/Interrupt.c **** 	
  91:Core/Src/Main/Interrupt.c **** }
  92:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
  93:Core/Src/Main/Interrupt.c **** 
  94:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  95:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
  96:Core/Src/Main/Interrupt.c **** 	
  97:Core/Src/Main/Interrupt.c **** 	
  98:Core/Src/Main/Interrupt.c **** 	//ËßíÈÄüÂ∫¶ rad/s
  99:Core/Src/Main/Interrupt.c **** 
 100:Core/Src/Main/Interrupt.c **** #if 0
 101:Core/Src/Main/Interrupt.c **** 	//static float angle=0;
 102:Core/Src/Main/Interrupt.c **** 	volatile static float zg_last=0;
 103:Core/Src/Main/Interrupt.c **** 	volatile float zg_law;
 104:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 105:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 106:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 107:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 108:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 109:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 110:Core/Src/Main/Interrupt.c **** 
 111:Core/Src/Main/Interrupt.c **** #else
 112:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle); //„É°„Éá„Ç£„Ç¢„É≥„Éï„Ç£„É´„Çø„Å®„Ç™„Éï„Çª„ÉÉ„Éà„Å†„Åë„Åß‰Ωï„Å®„Åã„Å
 113:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 114:Core/Src/Main/Interrupt.c **** //	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 115:Core/Src/Main/Interrupt.c **** //	Angle += AngularV * T1;
 116:Core/Src/Main/Interrupt.c **** 
 117:Core/Src/Main/Interrupt.c **** #endif
 118:Core/Src/Main/Interrupt.c **** 	int wall_d =0,wall_l =0,wall_r =0, wall_f=0;
 119:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 120:Core/Src/Main/Interrupt.c **** 
 121:Core/Src/Main/Interrupt.c **** 
 122:Core/Src/Main/Interrupt.c **** 	// if( PIDGetFlag(A_VELO_PID) == true )
 123:Core/Src/Main/Interrupt.c **** 	// {
 124:Core/Src/Main/Interrupt.c **** 		// ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 125:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 126:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngularV, AngularV); //ÈõªÂúßÂÄ§
 127:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 128:Core/Src/Main/Interrupt.c **** 	// }
 129:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[BODY] += Acceleration;
 130:Core/Src/Main/Interrupt.c **** 	// TargetAngularV += AngularAcceleration;
 131:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 132:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 133:Core/Src/Main/Interrupt.c **** 
 134:Core/Src/Main/Interrupt.c **** 	#if 0
 135:Core/Src/Main/Interrupt.c **** 			// VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[BODY], CurrentVelocity[LEFT]);
 136:Core/Src/Main/Interrupt.c **** 			// VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 137:Core/Src/Main/Interrupt.c **** 
 138:Core/Src/Main/Interrupt.c **** 			float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 139:Core/Src/Main/Interrupt.c **** 			float duty = 1/ battery_voltage;
 140:Core/Src/Main/Interrupt.c **** 
 141:Core/Src/Main/Interrupt.c **** 			VelocityLeftOut = (((float)ang_out)) * 840*duty;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 4


 142:Core/Src/Main/Interrupt.c **** 			VelocityRightOut = (((float)ang_out))* 840 *duty * (-1);
 143:Core/Src/Main/Interrupt.c **** 	#else
 144:Core/Src/Main/Interrupt.c **** 		VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[BODY], CurrentVelocity[LEFT]);
 145:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 146:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 147:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 148:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 149:Core/Src/Main/Interrupt.c **** 		// VelocityRightOut = voltage_maintainer * PIDControl( R_VELO_PID, TargetVelocity[RIGHT], Current
 150:Core/Src/Main/Interrupt.c **** 		VelocityLeftOut = ((float)(VelocityLeftOut + ang_out)) * 840 * duty;
 151:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 152:Core/Src/Main/Interrupt.c **** 
 153:Core/Src/Main/Interrupt.c **** 	#endif
 154:Core/Src/Main/Interrupt.c **** 	//„É¢„Éº„Çø„Å´Âá∫Âäõ
 155:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 156:Core/Src/Main/Interrupt.c **** }
 157:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 158:Core/Src/Main/Interrupt.c **** {
  32              		.loc 1 158 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43 0002 2DED028B 		vpush.64	{d8}
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 24
  46              		.cfi_offset 80, -24
  47              		.cfi_offset 81, -20
 159:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  48              		.loc 1 159 2 view .LVU1
  49              	.LBB4:
  50              	.LBI4:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
  51              		.loc 1 39 13 view .LVU2
  52              	.LBB5:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  53              		.loc 1 40 2 view .LVU3
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  54              		.loc 1 40 35 is_stmt 0 view .LVU4
  55 0006 B44A     		ldr	r2, .L13+16
  56 0008 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  57              		.loc 1 40 28 view .LVU5
  58 000a 47F22F53 		movw	r3, #29999
  59 000e 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  60              		.loc 1 40 26 view .LVU6
  61 0010 B24C     		ldr	r4, .L13+20
  62 0012 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
  63              		.loc 1 41 2 is_stmt 1 view .LVU7
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 5


  64              		.loc 1 41 12 is_stmt 0 view .LVU8
  65 0014 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  66              		.loc 1 42 2 is_stmt 1 view .LVU9
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  67              		.loc 1 42 36 is_stmt 0 view .LVU10
  68 0016 B248     		ldr	r0, .L13+24
  69 0018 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  70              		.loc 1 42 29 view .LVU11
  71 001a 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  72              		.loc 1 42 27 view .LVU12
  73 001c 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
  74              		.loc 1 43 2 is_stmt 1 view .LVU13
  43:Core/Src/Main/Interrupt.c **** 
  75              		.loc 1 43 12 is_stmt 0 view .LVU14
  76 001e 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  77              		.loc 1 46 2 is_stmt 1 view .LVU15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  78              		.loc 1 46 27 is_stmt 0 view .LVU16
  79 0020 07EE901A 		vmov	s15, r1	@ int
  80 0024 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  81              		.loc 1 46 58 view .LVU17
  82 0028 DFEDAE6A 		vldr.32	s13, .L13+28
  83 002c 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  84              		.loc 1 46 24 view .LVU18
  85 0030 AD4B     		ldr	r3, .L13+32
  86 0032 83ED007A 		vstr.32	s14, [r3]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  87              		.loc 1 47 2 is_stmt 1 view .LVU19
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  88              		.loc 1 47 28 is_stmt 0 view .LVU20
  89 0036 07EE902A 		vmov	s15, r2	@ int
  90 003a F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  91              		.loc 1 47 60 view .LVU21
  92 003e 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  93              		.loc 1 47 25 view .LVU22
  94 0042 C3ED017A 		vstr.32	s15, [r3, #4]
  48:Core/Src/Main/Interrupt.c **** 
  95              		.loc 1 48 2 is_stmt 1 view .LVU23
  48:Core/Src/Main/Interrupt.c **** 
  96              		.loc 1 48 42 is_stmt 0 view .LVU24
  97 0046 D3ED007A 		vldr.32	s15, [r3]
  48:Core/Src/Main/Interrupt.c **** 
  98              		.loc 1 48 66 view .LVU25
  99 004a 93ED017A 		vldr.32	s14, [r3, #4]
  48:Core/Src/Main/Interrupt.c **** 
 100              		.loc 1 48 49 view .LVU26
 101 004e 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 6


 102              		.loc 1 48 75 view .LVU27
 103 0052 B6EE007A 		vmov.f32	s14, #5.0e-1
 104 0056 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 105              		.loc 1 48 24 view .LVU28
 106 005a C3ED027A 		vstr.32	s15, [r3, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 107              		.loc 1 51 2 is_stmt 1 view .LVU29
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 108              		.loc 1 51 19 is_stmt 0 view .LVU30
 109 005e A34B     		ldr	r3, .L13+36
 110 0060 1868     		ldr	r0, [r3]
 111 0062 0144     		add	r1, r1, r0
 112 0064 1960     		str	r1, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 113              		.loc 1 52 2 is_stmt 1 view .LVU31
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 114              		.loc 1 52 20 is_stmt 0 view .LVU32
 115 0066 5968     		ldr	r1, [r3, #4]
 116 0068 0A44     		add	r2, r2, r1
 117 006a 5A60     		str	r2, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 118              		.loc 1 53 2 is_stmt 1 view .LVU33
  53:Core/Src/Main/Interrupt.c **** }
 119              		.loc 1 53 31 is_stmt 0 view .LVU34
 120 006c 1A68     		ldr	r2, [r3]
  53:Core/Src/Main/Interrupt.c **** }
 121              		.loc 1 53 48 view .LVU35
 122 006e 5968     		ldr	r1, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 123              		.loc 1 53 37 view .LVU36
 124 0070 0A44     		add	r2, r2, r1
  53:Core/Src/Main/Interrupt.c **** }
 125              		.loc 1 53 19 view .LVU37
 126 0072 9A60     		str	r2, [r3, #8]
 127              	.LBE5:
 128              	.LBE4:
 160:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
 161:Core/Src/Main/Interrupt.c **** 	
 162:Core/Src/Main/Interrupt.c **** 	//ÁßªÂãïÈáè mm/ms„ÇíÁ©çÁÆó
 163:Core/Src/Main/Interrupt.c **** 
 164:Core/Src/Main/Interrupt.c **** 
 165:Core/Src/Main/Interrupt.c **** 	//ËßíÈÄüÂ∫¶ rad/s
 166:Core/Src/Main/Interrupt.c **** 
 167:Core/Src/Main/Interrupt.c **** #if 0
 168:Core/Src/Main/Interrupt.c **** 	//static float angle=0;
 169:Core/Src/Main/Interrupt.c **** 	volatile static float zg_last=0;
 170:Core/Src/Main/Interrupt.c **** 	volatile float zg_law;
 171:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 172:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 173:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 174:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 175:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 176:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 177:Core/Src/Main/Interrupt.c **** 
 178:Core/Src/Main/Interrupt.c **** #else
 179:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle); //„É°„Éá„Ç£„Ç¢„É≥„Éï„Ç£„É´„Çø„Å®„Ç™„Éï„Çª„ÉÉ„Éà„Å†„Åë„Åß‰Ωï„Å®„Åã„Å
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 7


 129              		.loc 1 179 2 is_stmt 1 view .LVU38
 130 0074 9E49     		ldr	r1, .L13+40
 131 0076 9F48     		ldr	r0, .L13+44
 132 0078 FFF7FEFF 		bl	Update_IMU
 133              	.LVL0:
 180:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 181:Core/Src/Main/Interrupt.c **** //	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 182:Core/Src/Main/Interrupt.c **** //	Angle += AngularV * T1;
 183:Core/Src/Main/Interrupt.c **** 
 184:Core/Src/Main/Interrupt.c **** #endif
 185:Core/Src/Main/Interrupt.c **** 	int wall_d =0,wall_l =0,wall_r =0, wall_f=0;
 134              		.loc 1 185 2 view .LVU39
 186:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 135              		.loc 1 186 3 view .LVU40
 187:Core/Src/Main/Interrupt.c **** #if 1
 188:Core/Src/Main/Interrupt.c **** 
 189:Core/Src/Main/Interrupt.c **** 	if( Pid[A_VELO_PID].flag == 1 )
 136              		.loc 1 189 2 view .LVU41
 137              		.loc 1 189 21 is_stmt 0 view .LVU42
 138 007c 9E4B     		ldr	r3, .L13+48
 139 007e 9B6A     		ldr	r3, [r3, #40]
 140              		.loc 1 189 4 view .LVU43
 141 0080 012B     		cmp	r3, #1
 142 0082 00F08B80 		beq	.L8
 190:Core/Src/Main/Interrupt.c **** 	{
 191:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 192:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 193:Core/Src/Main/Interrupt.c **** 	}
 194:Core/Src/Main/Interrupt.c **** 	else if( Pid[D_WALL_PID].flag == 1 )
 143              		.loc 1 194 7 is_stmt 1 view .LVU44
 144              		.loc 1 194 26 is_stmt 0 view .LVU45
 145 0086 9C4B     		ldr	r3, .L13+48
 146 0088 5B6D     		ldr	r3, [r3, #84]
 147              		.loc 1 194 9 view .LVU46
 148 008a 012B     		cmp	r3, #1
 149 008c 00F09780 		beq	.L9
 195:Core/Src/Main/Interrupt.c **** 	{
 196:Core/Src/Main/Interrupt.c **** 		wall_d = PIDControl( D_WALL_PID, Photo[SL], Photo[SIDE_R]+PhotoDiff);
 197:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 198:Core/Src/Main/Interrupt.c **** 	}
 199:Core/Src/Main/Interrupt.c **** 	else if( Pid[L_WALL_PID].flag == 1 )
 150              		.loc 1 199 7 is_stmt 1 view .LVU47
 151              		.loc 1 199 26 is_stmt 0 view .LVU48
 152 0090 994B     		ldr	r3, .L13+48
 153 0092 D3F88030 		ldr	r3, [r3, #128]
 154              		.loc 1 199 9 view .LVU49
 155 0096 012B     		cmp	r3, #1
 156 0098 00F0B080 		beq	.L10
 200:Core/Src/Main/Interrupt.c **** 	{
 201:Core/Src/Main/Interrupt.c **** 		wall_l = PIDControl( L_WALL_PID,  Photo[SL], TargetPhoto[SL]);
 202:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 203:Core/Src/Main/Interrupt.c **** 	}
 204:Core/Src/Main/Interrupt.c **** 	else if( Pid[R_WALL_PID].flag == 1 )
 157              		.loc 1 204 7 is_stmt 1 view .LVU50
 158              		.loc 1 204 26 is_stmt 0 view .LVU51
 159 009c 964B     		ldr	r3, .L13+48
 160 009e D3F8AC30 		ldr	r3, [r3, #172]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 8


 161              		.loc 1 204 9 view .LVU52
 162 00a2 012B     		cmp	r3, #1
 163 00a4 00F0C580 		beq	.L11
 205:Core/Src/Main/Interrupt.c **** 	{
 206:Core/Src/Main/Interrupt.c **** 		wall_r = PIDControl( R_WALL_PID,  TargetPhoto[SIDE_R], Photo[SIDE_R]);
 207:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 208:Core/Src/Main/Interrupt.c **** 	}
 209:Core/Src/Main/Interrupt.c **** 	else if( Pid[F_WALL_PID].flag == 1)
 164              		.loc 1 209 7 is_stmt 1 view .LVU53
 165              		.loc 1 209 26 is_stmt 0 view .LVU54
 166 00a8 934B     		ldr	r3, .L13+48
 167 00aa D3F88831 		ldr	r3, [r3, #392]
 168              		.loc 1 209 9 view .LVU55
 169 00ae 012B     		cmp	r3, #1
 170 00b0 00F0DA80 		beq	.L12
 171              	.LVL1:
 172              	.L3:
 210:Core/Src/Main/Interrupt.c **** 	{
 211:Core/Src/Main/Interrupt.c **** 		wall_f = PIDControl( F_WALL_PID,   3800, (	(Photo[FR]+Photo[FL])));
 212:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 213:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 214:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 215:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 216:Core/Src/Main/Interrupt.c **** 	}
 217:Core/Src/Main/Interrupt.c **** #else
 218:Core/Src/Main/Interrupt.c **** 	switch(Control_Mode)
 219:Core/Src/Main/Interrupt.c **** 	{
 220:Core/Src/Main/Interrupt.c **** 	case A_VELO_PID:
 221:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( Control_Mode,  TargetAngle, Angle);
 222:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;	//„Å≤„Å®„Åæ„Åö„Åì„ÅÆËæ∫„ÅÆÂÄ§„ÅÆÂæÆË™øÊï¥„ÅØÁΩÆ„ÅÑ„Å¶„Åä„Åè„ÄÇÂà
 223:Core/Src/Main/Interrupt.c **** 		ChangeLED(7);
 224:Core/Src/Main/Interrupt.c **** 		break;
 225:Core/Src/Main/Interrupt.c **** 	case D_WALL_PID:
 226:Core/Src/Main/Interrupt.c **** 		wall_d = PIDControl( Control_Mode, Photo[SL], Photo[SIDE_R]+PhotoDiff);	//Â∑¶„Å´ÂØÑ„Å£„Å¶„Åü„Çâ+‚
 227:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 228:Core/Src/Main/Interrupt.c **** 		ChangeLED(5);
 229:Core/Src/Main/Interrupt.c **** 		break;
 230:Core/Src/Main/Interrupt.c **** 	case L_WALL_PID:
 231:Core/Src/Main/Interrupt.c **** 		wall_l = PIDControl( Control_Mode,  Photo[SL], TargetPhoto[SL]);
 232:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 233:Core/Src/Main/Interrupt.c **** 		ChangeLED(4);
 234:Core/Src/Main/Interrupt.c **** 		break;
 235:Core/Src/Main/Interrupt.c **** 	case R_WALL_PID :
 236:Core/Src/Main/Interrupt.c **** 		wall_r = PIDControl( Control_Mode,  TargetPhoto[SIDE_R], Photo[SIDE_R]);			//Âè≥„Å´ÂØÑ„Å£„Å¶„Åü„Ç
 237:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 238:Core/Src/Main/Interrupt.c **** 		ChangeLED(1);
 239:Core/Src/Main/Interrupt.c **** 		break;
 240:Core/Src/Main/Interrupt.c **** 	case F_WALL_PID : //ÂâçÂ£ÅË£úÊ≠£„ÅÆ„Åü„ÇÅ„ÅÆÂà∂Âæ°. „Éü„ÉÉ„ÇØ„Çπ„ÅØ„Çà„Åè„Å™„ÅÑ.
 241:Core/Src/Main/Interrupt.c **** 		wall_f = PIDControl( Control_Mode,   3500, (	(Photo[FR]+Photo[FL])));
 242:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 243:Core/Src/Main/Interrupt.c **** 		ChangeLED(2);
 244:Core/Src/Main/Interrupt.c **** 
 245:Core/Src/Main/Interrupt.c **** 		break;
 246:Core/Src/Main/Interrupt.c **** 	case NOT_CTRL_PID:
 247:Core/Src/Main/Interrupt.c **** 		break;
 248:Core/Src/Main/Interrupt.c **** 	default :
 249:Core/Src/Main/Interrupt.c **** 		break;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 9


 250:Core/Src/Main/Interrupt.c **** 	}
 251:Core/Src/Main/Interrupt.c **** #endif
 252:Core/Src/Main/Interrupt.c **** 	TargetVelocity[BODY] += Acceleration;
 173              		.loc 1 252 2 is_stmt 1 view .LVU56
 174 00b4 914B     		ldr	r3, .L13+52
 175 00b6 93ED007A 		vldr.32	s14, [r3]
 176              		.loc 1 252 23 is_stmt 0 view .LVU57
 177 00ba 914C     		ldr	r4, .L13+56
 178 00bc D4ED027A 		vldr.32	s15, [r4, #8]
 179 00c0 77EE877A 		vadd.f32	s15, s15, s14
 180 00c4 C4ED027A 		vstr.32	s15, [r4, #8]
 253:Core/Src/Main/Interrupt.c **** 	//AngularAcceleration += AngularLeapsity;
 254:Core/Src/Main/Interrupt.c **** 	TargetAngularV += AngularAcceleration;
 181              		.loc 1 254 2 is_stmt 1 view .LVU58
 182 00c8 8E4B     		ldr	r3, .L13+60
 183 00ca 93ED007A 		vldr.32	s14, [r3]
 184              		.loc 1 254 17 is_stmt 0 view .LVU59
 185 00ce 8E4B     		ldr	r3, .L13+64
 186 00d0 D3ED007A 		vldr.32	s15, [r3]
 187 00d4 77EE877A 		vadd.f32	s15, s15, s14
 188 00d8 C3ED007A 		vstr.32	s15, [r3]
 255:Core/Src/Main/Interrupt.c **** 	//TargetAngularV += AngularAcceleration;
 256:Core/Src/Main/Interrupt.c **** 	TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 189              		.loc 1 256 2 is_stmt 1 view .LVU60
 190              		.loc 1 256 42 is_stmt 0 view .LVU61
 191 00dc D4ED026A 		vldr.32	s13, [r4, #8]
 192              		.loc 1 256 66 view .LVU62
 193 00e0 93ED007A 		vldr.32	s14, [r3]
 194 00e4 9FED896A 		vldr.32	s12, .L13+68
 195 00e8 27EE067A 		vmul.f32	s14, s14, s12
 196              		.loc 1 256 80 view .LVU63
 197 00ec F6EE007A 		vmov.f32	s15, #5.0e-1
 198 00f0 27EE277A 		vmul.f32	s14, s14, s15
 199              		.loc 1 256 49 view .LVU64
 200 00f4 36EEC77A 		vsub.f32	s14, s13, s14
 201              		.loc 1 256 24 view .LVU65
 202 00f8 84ED017A 		vstr.32	s14, [r4, #4]
 257:Core/Src/Main/Interrupt.c **** 	TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 203              		.loc 1 257 2 is_stmt 1 view .LVU66
 204              		.loc 1 257 42 is_stmt 0 view .LVU67
 205 00fc D3ED007A 		vldr.32	s15, [r3]
 206 0100 67EE867A 		vmul.f32	s15, s15, s12
 207              		.loc 1 257 73 view .LVU68
 208 0104 94ED017A 		vldr.32	s14, [r4, #4]
 209              		.loc 1 257 57 view .LVU69
 210 0108 77EE877A 		vadd.f32	s15, s15, s14
 211              		.loc 1 257 23 view .LVU70
 212 010c C4ED007A 		vstr.32	s15, [r4]
 258:Core/Src/Main/Interrupt.c **** 
 259:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 213              		.loc 1 259 2 is_stmt 1 view .LVU71
 214              		.loc 1 259 26 is_stmt 0 view .LVU72
 215 0110 9FED7F1A 		vldr.32	s2, .L13+72
 216 0114 DFED7F0A 		vldr.32	s1, .L13+76
 217 0118 B0EE080A 		vmov.f32	s0, #3.0e+0
 218 011c 7E4B     		ldr	r3, .L13+80
 219 011e 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 10


 220 0120 FFF7FEFF 		bl	ADCToBatteryVoltage
 221              	.LVL2:
 222 0124 10EE100A 		vmov	r0, s0
 223              	.LVL3:
 260:Core/Src/Main/Interrupt.c **** 	float voltage_maintainer = BATTERY_MAX/battery_voltage;
 224              		.loc 1 260 2 is_stmt 1 view .LVU73
 225              		.loc 1 260 40 is_stmt 0 view .LVU74
 226 0128 FFF7FEFF 		bl	__aeabi_f2d
 227              	.LVL4:
 228              		.loc 1 260 40 view .LVU75
 229 012c 0246     		mov	r2, r0
 230 012e 0B46     		mov	r3, r1
 231 0130 65A1     		adr	r1, .L13
 232 0132 D1E90001 		ldrd	r0, [r1]
 233 0136 FFF7FEFF 		bl	__aeabi_ddiv
 234              	.LVL5:
 235              		.loc 1 260 8 view .LVU76
 236 013a FFF7FEFF 		bl	__aeabi_d2f
 237              	.LVL6:
 238 013e 08EE100A 		vmov	s16, r0
 239              	.LVL7:
 261:Core/Src/Main/Interrupt.c **** 	
 262:Core/Src/Main/Interrupt.c **** 	VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVeloci
 240              		.loc 1 262 2 is_stmt 1 view .LVU77
 241              		.loc 1 262 41 is_stmt 0 view .LVU78
 242 0142 94ED000A 		vldr.32	s0, [r4]
 243 0146 684E     		ldr	r6, .L13+32
 244 0148 D6ED000A 		vldr.32	s1, [r6]
 245 014c 0420     		movs	r0, #4
 246              	.LVL8:
 247              		.loc 1 262 41 view .LVU79
 248 014e FFF7FEFF 		bl	PIDControl
 249              	.LVL9:
 250 0152 07EE900A 		vmov	s15, r0	@ int
 251              		.loc 1 262 39 view .LVU80
 252 0156 F8EEE77A 		vcvt.f32.s32	s15, s15
 253 015a 67EE887A 		vmul.f32	s15, s15, s16
 254              		.loc 1 262 18 view .LVU81
 255 015e 6F4D     		ldr	r5, .L13+84
 256 0160 FDEEE77A 		vcvt.s32.f32	s15, s15
 257 0164 C5ED007A 		vstr.32	s15, [r5]	@ int
 263:Core/Src/Main/Interrupt.c **** 	VelocityRightOut = voltage_maintainer * PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelo
 258              		.loc 1 263 2 is_stmt 1 view .LVU82
 259              		.loc 1 263 42 is_stmt 0 view .LVU83
 260 0168 94ED010A 		vldr.32	s0, [r4, #4]
 261 016c D6ED010A 		vldr.32	s1, [r6, #4]
 262 0170 0520     		movs	r0, #5
 263 0172 FFF7FEFF 		bl	PIDControl
 264              	.LVL10:
 265 0176 07EE900A 		vmov	s15, r0	@ int
 266              		.loc 1 263 40 view .LVU84
 267 017a F8EEE77A 		vcvt.f32.s32	s15, s15
 268 017e 67EE887A 		vmul.f32	s15, s15, s16
 269              		.loc 1 263 19 view .LVU85
 270 0182 FDEEE77A 		vcvt.s32.f32	s15, s15
 271 0186 17EE901A 		vmov	r1, s15	@ int
 272 018a 654B     		ldr	r3, .L13+88
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 11


 273 018c C3ED007A 		vstr.32	s15, [r3]	@ int
 264:Core/Src/Main/Interrupt.c **** 	// VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVelocity[LEFT]);
 265:Core/Src/Main/Interrupt.c **** 	// VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelocity[RIGHT]);
 266:Core/Src/Main/Interrupt.c **** 
 267:Core/Src/Main/Interrupt.c **** 	
 268:Core/Src/Main/Interrupt.c **** 	//„É¢„Éº„Çø„Å´Âá∫Âäõ
 269:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 274              		.loc 1 269 2 is_stmt 1 view .LVU86
 275 0190 2868     		ldr	r0, [r5]
 276 0192 FFF7FEFF 		bl	Motor_Switch
 277              	.LVL11:
 270:Core/Src/Main/Interrupt.c **** }
 278              		.loc 1 270 1 is_stmt 0 view .LVU87
 279 0196 BDEC028B 		vldm	sp!, {d8}
 280              	.LCFI2:
 281              		.cfi_remember_state
 282              		.cfi_restore 80
 283              		.cfi_restore 81
 284              		.cfi_def_cfa_offset 16
 285              	.LVL12:
 286              		.loc 1 270 1 view .LVU88
 287 019a 70BD     		pop	{r4, r5, r6, pc}
 288              	.LVL13:
 289              	.L8:
 290              	.LCFI3:
 291              		.cfi_restore_state
 191:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 292              		.loc 1 191 3 is_stmt 1 view .LVU89
 191:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 293              		.loc 1 191 13 is_stmt 0 view .LVU90
 294 019c 614B     		ldr	r3, .L13+92
 295 019e 93ED000A 		vldr.32	s0, [r3]
 296 01a2 534B     		ldr	r3, .L13+40
 297 01a4 D3ED000A 		vldr.32	s1, [r3]
 298 01a8 0020     		movs	r0, #0
 299 01aa FFF7FEFF 		bl	PIDControl
 300              	.LVL14:
 301 01ae 07EE900A 		vmov	s15, r0	@ int
 302              	.LVL15:
 192:Core/Src/Main/Interrupt.c **** 	}
 303              		.loc 1 192 3 is_stmt 1 view .LVU91
 192:Core/Src/Main/Interrupt.c **** 	}
 304              		.loc 1 192 20 is_stmt 0 view .LVU92
 305 01b2 F8EEE77A 		vcvt.f32.s32	s15, s15
 192:Core/Src/Main/Interrupt.c **** 	}
 306              		.loc 1 192 18 view .LVU93
 307 01b6 544B     		ldr	r3, .L13+64
 308 01b8 C3ED007A 		vstr.32	s15, [r3]
 309 01bc 7AE7     		b	.L3
 310              	.LVL16:
 311              	.L9:
 196:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 312              		.loc 1 196 3 is_stmt 1 view .LVU94
 196:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 313              		.loc 1 196 52 is_stmt 0 view .LVU95
 314 01be 5A4B     		ldr	r3, .L13+96
 315 01c0 D3ED010A 		vldr.32	s1, [r3, #4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 12


 196:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 316              		.loc 1 196 12 view .LVU96
 317 01c4 594A     		ldr	r2, .L13+100
 318 01c6 D2ED007A 		vldr.32	s15, [r2]
 319 01ca 70EEA70A 		vadd.f32	s1, s1, s15
 320 01ce 93ED020A 		vldr.32	s0, [r3, #8]
 321 01d2 0120     		movs	r0, #1
 322 01d4 FFF7FEFF 		bl	PIDControl
 323              	.LVL17:
 324 01d8 07EE900A 		vmov	s15, r0	@ int
 325              	.LVL18:
 197:Core/Src/Main/Interrupt.c **** 	}
 326              		.loc 1 197 3 is_stmt 1 view .LVU97
 197:Core/Src/Main/Interrupt.c **** 	}
 327              		.loc 1 197 20 is_stmt 0 view .LVU98
 328 01dc F8EEE77A 		vcvt.f32.s32	s15, s15
 329 01e0 17EE900A 		vmov	r0, s15
 330              	.LVL19:
 197:Core/Src/Main/Interrupt.c **** 	}
 331              		.loc 1 197 20 view .LVU99
 332 01e4 FFF7FEFF 		bl	__aeabi_f2d
 333              	.LVL20:
 197:Core/Src/Main/Interrupt.c **** 	}
 334              		.loc 1 197 33 view .LVU100
 335 01e8 39A3     		adr	r3, .L13+8
 336 01ea D3E90023 		ldrd	r2, [r3]
 337 01ee FFF7FEFF 		bl	__aeabi_dmul
 338              	.LVL21:
 339 01f2 FFF7FEFF 		bl	__aeabi_d2f
 340              	.LVL22:
 197:Core/Src/Main/Interrupt.c **** 	}
 341              		.loc 1 197 18 view .LVU101
 342 01f6 444B     		ldr	r3, .L13+64
 343 01f8 1860     		str	r0, [r3]	@ float
 344 01fa 5BE7     		b	.L3
 345              	.LVL23:
 346              	.L10:
 201:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 347              		.loc 1 201 3 is_stmt 1 view .LVU102
 201:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 348              		.loc 1 201 12 is_stmt 0 view .LVU103
 349 01fc 4C4B     		ldr	r3, .L13+104
 350 01fe D3ED020A 		vldr.32	s1, [r3, #8]
 351 0202 494B     		ldr	r3, .L13+96
 352 0204 93ED020A 		vldr.32	s0, [r3, #8]
 353 0208 0220     		movs	r0, #2
 354 020a FFF7FEFF 		bl	PIDControl
 355              	.LVL24:
 356 020e 07EE900A 		vmov	s15, r0	@ int
 357              	.LVL25:
 202:Core/Src/Main/Interrupt.c **** 	}
 358              		.loc 1 202 3 is_stmt 1 view .LVU104
 202:Core/Src/Main/Interrupt.c **** 	}
 359              		.loc 1 202 20 is_stmt 0 view .LVU105
 360 0212 F8EEE77A 		vcvt.f32.s32	s15, s15
 361 0216 17EE900A 		vmov	r0, s15
 362              	.LVL26:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 13


 202:Core/Src/Main/Interrupt.c **** 	}
 363              		.loc 1 202 20 view .LVU106
 364 021a FFF7FEFF 		bl	__aeabi_f2d
 365              	.LVL27:
 202:Core/Src/Main/Interrupt.c **** 	}
 366              		.loc 1 202 33 view .LVU107
 367 021e 2CA3     		adr	r3, .L13+8
 368 0220 D3E90023 		ldrd	r2, [r3]
 369 0224 FFF7FEFF 		bl	__aeabi_dmul
 370              	.LVL28:
 371 0228 FFF7FEFF 		bl	__aeabi_d2f
 372              	.LVL29:
 202:Core/Src/Main/Interrupt.c **** 	}
 373              		.loc 1 202 18 view .LVU108
 374 022c 364B     		ldr	r3, .L13+64
 375 022e 1860     		str	r0, [r3]	@ float
 376 0230 40E7     		b	.L3
 377              	.LVL30:
 378              	.L11:
 206:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 379              		.loc 1 206 3 is_stmt 1 view .LVU109
 206:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 380              		.loc 1 206 12 is_stmt 0 view .LVU110
 381 0232 3F4B     		ldr	r3, .L13+104
 382 0234 93ED010A 		vldr.32	s0, [r3, #4]
 383 0238 3B4B     		ldr	r3, .L13+96
 384 023a D3ED010A 		vldr.32	s1, [r3, #4]
 385 023e 0320     		movs	r0, #3
 386 0240 FFF7FEFF 		bl	PIDControl
 387              	.LVL31:
 388 0244 07EE900A 		vmov	s15, r0	@ int
 389              	.LVL32:
 207:Core/Src/Main/Interrupt.c **** 	}
 390              		.loc 1 207 3 is_stmt 1 view .LVU111
 207:Core/Src/Main/Interrupt.c **** 	}
 391              		.loc 1 207 20 is_stmt 0 view .LVU112
 392 0248 F8EEE77A 		vcvt.f32.s32	s15, s15
 393 024c 17EE900A 		vmov	r0, s15
 394              	.LVL33:
 207:Core/Src/Main/Interrupt.c **** 	}
 395              		.loc 1 207 20 view .LVU113
 396 0250 FFF7FEFF 		bl	__aeabi_f2d
 397              	.LVL34:
 207:Core/Src/Main/Interrupt.c **** 	}
 398              		.loc 1 207 33 view .LVU114
 399 0254 1EA3     		adr	r3, .L13+8
 400 0256 D3E90023 		ldrd	r2, [r3]
 401 025a FFF7FEFF 		bl	__aeabi_dmul
 402              	.LVL35:
 403 025e FFF7FEFF 		bl	__aeabi_d2f
 404              	.LVL36:
 207:Core/Src/Main/Interrupt.c **** 	}
 405              		.loc 1 207 18 view .LVU115
 406 0262 294B     		ldr	r3, .L13+64
 407 0264 1860     		str	r0, [r3]	@ float
 408 0266 25E7     		b	.L3
 409              	.LVL37:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 14


 410              	.L12:
 211:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 411              		.loc 1 211 3 is_stmt 1 view .LVU116
 211:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 412              		.loc 1 211 52 is_stmt 0 view .LVU117
 413 0268 2F4B     		ldr	r3, .L13+96
 414 026a D3ED030A 		vldr.32	s1, [r3, #12]
 211:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 415              		.loc 1 211 62 view .LVU118
 416 026e D3ED007A 		vldr.32	s15, [r3]
 211:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 417              		.loc 1 211 12 view .LVU119
 418 0272 70EEA70A 		vadd.f32	s1, s1, s15
 419 0276 9FED2F0A 		vldr.32	s0, .L13+108
 420 027a 0820     		movs	r0, #8
 421 027c FFF7FEFF 		bl	PIDControl
 422              	.LVL38:
 423 0280 07EE900A 		vmov	s15, r0	@ int
 424              	.LVL39:
 212:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 425              		.loc 1 212 3 is_stmt 1 view .LVU120
 212:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 426              		.loc 1 212 26 is_stmt 0 view .LVU121
 427 0284 F8EEE77A 		vcvt.f32.s32	s15, s15
 428 0288 17EE900A 		vmov	r0, s15
 429              	.LVL40:
 212:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 430              		.loc 1 212 26 view .LVU122
 431 028c FFF7FEFF 		bl	__aeabi_f2d
 432              	.LVL41:
 212:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 433              		.loc 1 212 39 view .LVU123
 434 0290 0FA3     		adr	r3, .L13+8
 435 0292 D3E90023 		ldrd	r2, [r3]
 436 0296 FFF7FEFF 		bl	__aeabi_dmul
 437              	.LVL42:
 438 029a FFF7FEFF 		bl	__aeabi_d2f
 439              	.LVL43:
 212:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 440              		.loc 1 212 24 view .LVU124
 441 029e 184B     		ldr	r3, .L13+56
 442 02a0 9860     		str	r0, [r3, #8]	@ float
 213:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 443              		.loc 1 213 3 is_stmt 1 view .LVU125
 213:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 444              		.loc 1 213 13 is_stmt 0 view .LVU126
 445 02a2 204B     		ldr	r3, .L13+92
 446 02a4 93ED000A 		vldr.32	s0, [r3]
 447 02a8 114B     		ldr	r3, .L13+40
 448 02aa D3ED000A 		vldr.32	s1, [r3]
 449 02ae 0020     		movs	r0, #0
 450 02b0 FFF7FEFF 		bl	PIDControl
 451              	.LVL44:
 452 02b4 07EE900A 		vmov	s15, r0	@ int
 453              	.LVL45:
 214:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 454              		.loc 1 214 3 is_stmt 1 view .LVU127
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 15


 214:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 455              		.loc 1 214 20 is_stmt 0 view .LVU128
 456 02b8 F8EEE77A 		vcvt.f32.s32	s15, s15
 214:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 457              		.loc 1 214 18 view .LVU129
 458 02bc 124B     		ldr	r3, .L13+64
 459 02be C3ED007A 		vstr.32	s15, [r3]
 460 02c2 F7E6     		b	.L3
 461              	.L14:
 462 02c4 AFF30080 		.align	3
 463              	.L13:
 464 02c8 CDCCCCCC 		.word	-858993459
 465 02cc CCCC2040 		.word	1075891404
 466 02d0 FCA9F1D2 		.word	-755914244
 467 02d4 4D62503F 		.word	1062232653
 468 02d8 00040040 		.word	1073742848
 469 02dc 00000000 		.word	PulseDisplacement
 470 02e0 00080040 		.word	1073743872
 471 02e4 CD77813F 		.word	1065449421
 472 02e8 00000000 		.word	CurrentVelocity
 473 02ec 00000000 		.word	TotalPulse
 474 02f0 00000000 		.word	Angle
 475 02f4 00000000 		.word	AngularV
 476 02f8 00000000 		.word	Pid
 477 02fc 00000000 		.word	Acceleration
 478 0300 00000000 		.word	TargetVelocity
 479 0304 00000000 		.word	AngularAcceleration
 480 0308 00000000 		.word	TargetAngularV
 481 030c 9A990942 		.word	1107925402
 482 0310 00008045 		.word	1166016512
 483 0314 33335340 		.word	1079194419
 484 0318 00000000 		.word	adc1
 485 031c 00000000 		.word	VelocityLeftOut
 486 0320 00000000 		.word	VelocityRightOut
 487 0324 00000000 		.word	TargetAngle
 488 0328 00000000 		.word	Photo
 489 032c 00000000 		.word	PhotoDiff
 490 0330 00000000 		.word	TargetPhoto
 491 0334 00806D45 		.word	1164804096
 492              		.cfi_endproc
 493              	.LFE241:
 495              		.section	.text.ControlTest_IT,"ax",%progbits
 496              		.align	1
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 501              	ControlTest_IT:
 502              	.LFB240:
  92:Core/Src/Main/Interrupt.c **** 
 503              		.loc 1 92 29 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 508              	.LCFI4:
 509              		.cfi_def_cfa_offset 24
 510              		.cfi_offset 3, -24
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 16


 511              		.cfi_offset 4, -20
 512              		.cfi_offset 5, -16
 513              		.cfi_offset 6, -12
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
  94:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
 516              		.loc 1 94 2 view .LVU131
 517              	.LBB8:
 518              	.LBI8:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 519              		.loc 1 39 13 view .LVU132
 520              	.LBB9:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 521              		.loc 1 40 2 view .LVU133
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 522              		.loc 1 40 35 is_stmt 0 view .LVU134
 523 0002 454A     		ldr	r2, .L17
 524 0004 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 525              		.loc 1 40 28 view .LVU135
 526 0006 47F22F53 		movw	r3, #29999
 527 000a 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 528              		.loc 1 40 26 view .LVU136
 529 000c 434C     		ldr	r4, .L17+4
 530 000e 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 531              		.loc 1 41 2 is_stmt 1 view .LVU137
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 532              		.loc 1 41 12 is_stmt 0 view .LVU138
 533 0010 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 534              		.loc 1 42 2 is_stmt 1 view .LVU139
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 535              		.loc 1 42 36 is_stmt 0 view .LVU140
 536 0012 4348     		ldr	r0, .L17+8
 537 0014 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 538              		.loc 1 42 29 view .LVU141
 539 0016 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 540              		.loc 1 42 27 view .LVU142
 541 0018 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 542              		.loc 1 43 2 is_stmt 1 view .LVU143
  43:Core/Src/Main/Interrupt.c **** 
 543              		.loc 1 43 12 is_stmt 0 view .LVU144
 544 001a 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 545              		.loc 1 46 2 is_stmt 1 view .LVU145
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 546              		.loc 1 46 27 is_stmt 0 view .LVU146
 547 001c 07EE901A 		vmov	s15, r1	@ int
 548 0020 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 549              		.loc 1 46 58 view .LVU147
 550 0024 DFED3F6A 		vldr.32	s13, .L17+12
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 17


 551 0028 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 552              		.loc 1 46 24 view .LVU148
 553 002c 3E4C     		ldr	r4, .L17+16
 554 002e 84ED007A 		vstr.32	s14, [r4]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 555              		.loc 1 47 2 is_stmt 1 view .LVU149
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 556              		.loc 1 47 28 is_stmt 0 view .LVU150
 557 0032 07EE902A 		vmov	s15, r2	@ int
 558 0036 F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 559              		.loc 1 47 60 view .LVU151
 560 003a 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 561              		.loc 1 47 25 view .LVU152
 562 003e C4ED017A 		vstr.32	s15, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 563              		.loc 1 48 2 is_stmt 1 view .LVU153
  48:Core/Src/Main/Interrupt.c **** 
 564              		.loc 1 48 42 is_stmt 0 view .LVU154
 565 0042 D4ED007A 		vldr.32	s15, [r4]
  48:Core/Src/Main/Interrupt.c **** 
 566              		.loc 1 48 66 view .LVU155
 567 0046 94ED017A 		vldr.32	s14, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 568              		.loc 1 48 49 view .LVU156
 569 004a 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 570              		.loc 1 48 75 view .LVU157
 571 004e B6EE007A 		vmov.f32	s14, #5.0e-1
 572 0052 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 573              		.loc 1 48 24 view .LVU158
 574 0056 C4ED027A 		vstr.32	s15, [r4, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 575              		.loc 1 51 2 is_stmt 1 view .LVU159
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 576              		.loc 1 51 19 is_stmt 0 view .LVU160
 577 005a 344B     		ldr	r3, .L17+20
 578 005c 1868     		ldr	r0, [r3]
 579 005e 0144     		add	r1, r1, r0
 580 0060 1960     		str	r1, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 581              		.loc 1 52 2 is_stmt 1 view .LVU161
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 582              		.loc 1 52 20 is_stmt 0 view .LVU162
 583 0062 5968     		ldr	r1, [r3, #4]
 584 0064 0A44     		add	r2, r2, r1
 585 0066 5A60     		str	r2, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 586              		.loc 1 53 2 is_stmt 1 view .LVU163
  53:Core/Src/Main/Interrupt.c **** }
 587              		.loc 1 53 31 is_stmt 0 view .LVU164
 588 0068 1A68     		ldr	r2, [r3]
  53:Core/Src/Main/Interrupt.c **** }
 589              		.loc 1 53 48 view .LVU165
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 18


 590 006a 5968     		ldr	r1, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 591              		.loc 1 53 37 view .LVU166
 592 006c 0A44     		add	r2, r2, r1
  53:Core/Src/Main/Interrupt.c **** }
 593              		.loc 1 53 19 view .LVU167
 594 006e 9A60     		str	r2, [r3, #8]
 595              	.LBE9:
 596              	.LBE8:
 112:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 597              		.loc 1 112 2 is_stmt 1 view .LVU168
 598 0070 2F4D     		ldr	r5, .L17+24
 599 0072 3049     		ldr	r1, .L17+28
 600 0074 2846     		mov	r0, r5
 601 0076 FFF7FEFF 		bl	Update_IMU
 602              	.LVL46:
 118:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 603              		.loc 1 118 2 view .LVU169
 119:Core/Src/Main/Interrupt.c **** 
 604              		.loc 1 119 3 view .LVU170
 126:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 605              		.loc 1 126 3 view .LVU171
 126:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 606              		.loc 1 126 13 is_stmt 0 view .LVU172
 607 007a 2F4B     		ldr	r3, .L17+32
 608 007c 93ED000A 		vldr.32	s0, [r3]
 609 0080 D5ED000A 		vldr.32	s1, [r5]
 610 0084 0020     		movs	r0, #0
 611 0086 FFF7FEFF 		bl	PIDControl
 612              	.LVL47:
 613 008a 0546     		mov	r5, r0
 614              	.LVL48:
 144:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 615              		.loc 1 144 3 is_stmt 1 view .LVU173
 144:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 616              		.loc 1 144 21 is_stmt 0 view .LVU174
 617 008c 2B4F     		ldr	r7, .L17+36
 618 008e 97ED020A 		vldr.32	s0, [r7, #8]
 619 0092 D4ED000A 		vldr.32	s1, [r4]
 620 0096 0420     		movs	r0, #4
 621              	.LVL49:
 144:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 622              		.loc 1 144 21 view .LVU175
 623 0098 FFF7FEFF 		bl	PIDControl
 624              	.LVL50:
 144:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 625              		.loc 1 144 19 view .LVU176
 626 009c 284E     		ldr	r6, .L17+40
 627 009e 3060     		str	r0, [r6]
 145:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 628              		.loc 1 145 3 is_stmt 1 view .LVU177
 145:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 629              		.loc 1 145 22 is_stmt 0 view .LVU178
 630 00a0 97ED020A 		vldr.32	s0, [r7, #8]
 631 00a4 D4ED010A 		vldr.32	s1, [r4, #4]
 632 00a8 0520     		movs	r0, #5
 633 00aa FFF7FEFF 		bl	PIDControl
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 19


 634              	.LVL51:
 145:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 635              		.loc 1 145 20 view .LVU179
 636 00ae 254C     		ldr	r4, .L17+44
 637 00b0 2060     		str	r0, [r4]
 146:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 638              		.loc 1 146 3 is_stmt 1 view .LVU180
 146:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 639              		.loc 1 146 27 is_stmt 0 view .LVU181
 640 00b2 9FED251A 		vldr.32	s2, .L17+48
 641 00b6 DFED250A 		vldr.32	s1, .L17+52
 642 00ba B0EE080A 		vmov.f32	s0, #3.0e+0
 643 00be 244B     		ldr	r3, .L17+56
 644 00c0 9868     		ldr	r0, [r3, #8]
 645 00c2 FFF7FEFF 		bl	ADCToBatteryVoltage
 646              	.LVL52:
 147:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 647              		.loc 1 147 3 is_stmt 1 view .LVU182
 147:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 648              		.loc 1 147 9 is_stmt 0 view .LVU183
 649 00c6 F7EE007A 		vmov.f32	s15, #1.0e+0
 650 00ca 87EE807A 		vdiv.f32	s14, s15, s0
 651              	.LVL53:
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 652              		.loc 1 150 3 is_stmt 1 view .LVU184
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 653              		.loc 1 150 46 is_stmt 0 view .LVU185
 654 00ce 3368     		ldr	r3, [r6]
 655 00d0 EB18     		adds	r3, r5, r3
 656 00d2 07EE903A 		vmov	s15, r3	@ int
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 657              		.loc 1 150 22 view .LVU186
 658 00d6 F8EEE77A 		vcvt.f32.s32	s15, s15
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 659              		.loc 1 150 58 view .LVU187
 660 00da DFED1E6A 		vldr.32	s13, .L17+60
 661 00de 67EEA67A 		vmul.f32	s15, s15, s13
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 662              		.loc 1 150 64 view .LVU188
 663 00e2 67EE877A 		vmul.f32	s15, s15, s14
 150:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 664              		.loc 1 150 19 view .LVU189
 665 00e6 FDEEE77A 		vcvt.s32.f32	s15, s15
 666 00ea 17EE900A 		vmov	r0, s15	@ int
 667 00ee C6ED007A 		vstr.32	s15, [r6]	@ int
 151:Core/Src/Main/Interrupt.c **** 
 668              		.loc 1 151 3 is_stmt 1 view .LVU190
 151:Core/Src/Main/Interrupt.c **** 
 669              		.loc 1 151 47 is_stmt 0 view .LVU191
 670 00f2 2368     		ldr	r3, [r4]
 671 00f4 5B1B     		subs	r3, r3, r5
 672 00f6 07EE903A 		vmov	s15, r3	@ int
 151:Core/Src/Main/Interrupt.c **** 
 673              		.loc 1 151 23 view .LVU192
 674 00fa F8EEE77A 		vcvt.f32.s32	s15, s15
 151:Core/Src/Main/Interrupt.c **** 
 675              		.loc 1 151 67 view .LVU193
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 20


 676 00fe 67EEA67A 		vmul.f32	s15, s15, s13
 151:Core/Src/Main/Interrupt.c **** 
 677              		.loc 1 151 73 view .LVU194
 678 0102 67EE877A 		vmul.f32	s15, s15, s14
 151:Core/Src/Main/Interrupt.c **** 
 679              		.loc 1 151 20 view .LVU195
 680 0106 FDEEE77A 		vcvt.s32.f32	s15, s15
 681 010a 17EE901A 		vmov	r1, s15	@ int
 682 010e C4ED007A 		vstr.32	s15, [r4]	@ int
 155:Core/Src/Main/Interrupt.c **** }
 683              		.loc 1 155 2 is_stmt 1 view .LVU196
 684 0112 FFF7FEFF 		bl	Motor_Switch
 685              	.LVL54:
 156:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 686              		.loc 1 156 1 is_stmt 0 view .LVU197
 687 0116 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 688              	.LVL55:
 689              	.L18:
 156:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 690              		.loc 1 156 1 view .LVU198
 691              		.align	2
 692              	.L17:
 693 0118 00040040 		.word	1073742848
 694 011c 00000000 		.word	PulseDisplacement
 695 0120 00080040 		.word	1073743872
 696 0124 CD77813F 		.word	1065449421
 697 0128 00000000 		.word	CurrentVelocity
 698 012c 00000000 		.word	TotalPulse
 699 0130 00000000 		.word	AngularV
 700 0134 00000000 		.word	Angle
 701 0138 00000000 		.word	TargetAngularV
 702 013c 00000000 		.word	TargetVelocity
 703 0140 00000000 		.word	VelocityLeftOut
 704 0144 00000000 		.word	VelocityRightOut
 705 0148 00008045 		.word	1166016512
 706 014c 33335340 		.word	1079194419
 707 0150 00000000 		.word	adc1
 708 0154 00005244 		.word	1146224640
 709              		.cfi_endproc
 710              	.LFE240:
 712              		.section	.text.SystemIdentify_IT,"ax",%progbits
 713              		.align	1
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	SystemIdentify_IT:
 719              	.LFB239:
  56:Core/Src/Main/Interrupt.c **** 	
 720              		.loc 1 56 32 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 16
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 30B5     		push	{r4, r5, lr}
 725              	.LCFI5:
 726              		.cfi_def_cfa_offset 12
 727              		.cfi_offset 4, -12
 728              		.cfi_offset 5, -8
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 21


 729              		.cfi_offset 14, -4
 730 0002 2DED028B 		vpush.64	{d8}
 731              	.LCFI6:
 732              		.cfi_def_cfa_offset 20
 733              		.cfi_offset 80, -20
 734              		.cfi_offset 81, -16
 735 0006 85B0     		sub	sp, sp, #20
 736              	.LCFI7:
 737              		.cfi_def_cfa_offset 40
  58:Core/Src/Main/Interrupt.c **** 
 738              		.loc 1 58 2 view .LVU200
 739              	.LBB12:
 740              	.LBI12:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 741              		.loc 1 39 13 view .LVU201
 742              	.LBB13:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 743              		.loc 1 40 2 view .LVU202
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 744              		.loc 1 40 35 is_stmt 0 view .LVU203
 745 0008 574A     		ldr	r2, .L27
 746 000a 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 747              		.loc 1 40 28 view .LVU204
 748 000c 47F22F53 		movw	r3, #29999
 749 0010 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 750              		.loc 1 40 26 view .LVU205
 751 0012 564C     		ldr	r4, .L27+4
 752 0014 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 753              		.loc 1 41 2 is_stmt 1 view .LVU206
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 754              		.loc 1 41 12 is_stmt 0 view .LVU207
 755 0016 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 756              		.loc 1 42 2 is_stmt 1 view .LVU208
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 757              		.loc 1 42 36 is_stmt 0 view .LVU209
 758 0018 5548     		ldr	r0, .L27+8
 759 001a 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 760              		.loc 1 42 29 view .LVU210
 761 001c 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 762              		.loc 1 42 27 view .LVU211
 763 001e 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 764              		.loc 1 43 2 is_stmt 1 view .LVU212
  43:Core/Src/Main/Interrupt.c **** 
 765              		.loc 1 43 12 is_stmt 0 view .LVU213
 766 0020 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 767              		.loc 1 46 2 is_stmt 1 view .LVU214
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 768              		.loc 1 46 27 is_stmt 0 view .LVU215
 769 0022 07EE901A 		vmov	s15, r1	@ int
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 22


 770 0026 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 771              		.loc 1 46 58 view .LVU216
 772 002a DFED526A 		vldr.32	s13, .L27+12
 773 002e 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 774              		.loc 1 46 24 view .LVU217
 775 0032 514C     		ldr	r4, .L27+16
 776 0034 84ED007A 		vstr.32	s14, [r4]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 777              		.loc 1 47 2 is_stmt 1 view .LVU218
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 778              		.loc 1 47 28 is_stmt 0 view .LVU219
 779 0038 07EE902A 		vmov	s15, r2	@ int
 780 003c F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 781              		.loc 1 47 60 view .LVU220
 782 0040 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 783              		.loc 1 47 25 view .LVU221
 784 0044 C4ED017A 		vstr.32	s15, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 785              		.loc 1 48 2 is_stmt 1 view .LVU222
  48:Core/Src/Main/Interrupt.c **** 
 786              		.loc 1 48 42 is_stmt 0 view .LVU223
 787 0048 D4ED007A 		vldr.32	s15, [r4]
  48:Core/Src/Main/Interrupt.c **** 
 788              		.loc 1 48 66 view .LVU224
 789 004c 94ED017A 		vldr.32	s14, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 790              		.loc 1 48 49 view .LVU225
 791 0050 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 792              		.loc 1 48 75 view .LVU226
 793 0054 B6EE007A 		vmov.f32	s14, #5.0e-1
 794 0058 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 795              		.loc 1 48 24 view .LVU227
 796 005c C4ED027A 		vstr.32	s15, [r4, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 797              		.loc 1 51 2 is_stmt 1 view .LVU228
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 798              		.loc 1 51 19 is_stmt 0 view .LVU229
 799 0060 464B     		ldr	r3, .L27+20
 800 0062 1868     		ldr	r0, [r3]
 801 0064 0144     		add	r1, r1, r0
 802 0066 1960     		str	r1, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 803              		.loc 1 52 2 is_stmt 1 view .LVU230
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 804              		.loc 1 52 20 is_stmt 0 view .LVU231
 805 0068 5968     		ldr	r1, [r3, #4]
 806 006a 0A44     		add	r2, r2, r1
 807 006c 5A60     		str	r2, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 808              		.loc 1 53 2 is_stmt 1 view .LVU232
  53:Core/Src/Main/Interrupt.c **** }
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 23


 809              		.loc 1 53 31 is_stmt 0 view .LVU233
 810 006e 1A68     		ldr	r2, [r3]
  53:Core/Src/Main/Interrupt.c **** }
 811              		.loc 1 53 48 view .LVU234
 812 0070 5968     		ldr	r1, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 813              		.loc 1 53 37 view .LVU235
 814 0072 0A44     		add	r2, r2, r1
  53:Core/Src/Main/Interrupt.c **** }
 815              		.loc 1 53 19 view .LVU236
 816 0074 9A60     		str	r2, [r3, #8]
 817              	.LBE13:
 818              	.LBE12:
  60:Core/Src/Main/Interrupt.c **** 
 819              		.loc 1 60 2 is_stmt 1 view .LVU237
 820 0076 424D     		ldr	r5, .L27+24
 821 0078 4249     		ldr	r1, .L27+28
 822 007a 2846     		mov	r0, r5
 823 007c FFF7FEFF 		bl	Update_IMU
 824              	.LVL56:
  62:Core/Src/Main/Interrupt.c **** 	static int count=0;
 825              		.loc 1 62 2 view .LVU238
  63:Core/Src/Main/Interrupt.c **** 	float output[2] ={
 826              		.loc 1 63 2 view .LVU239
  64:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
 827              		.loc 1 64 2 view .LVU240
  65:Core/Src/Main/Interrupt.c **** 		AngularV
 828              		.loc 1 65 18 is_stmt 0 view .LVU241
 829 0080 A368     		ldr	r3, [r4, #8]	@ float
  64:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
 830              		.loc 1 64 8 view .LVU242
 831 0082 0293     		str	r3, [sp, #8]	@ float
 832 0084 2B68     		ldr	r3, [r5]	@ float
 833 0086 0393     		str	r3, [sp, #12]	@ float
  68:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
 834              		.loc 1 68 2 is_stmt 1 view .LVU243
  68:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
 835              		.loc 1 68 8 is_stmt 0 view .LVU244
 836 0088 0023     		movs	r3, #0
 837 008a 0093     		str	r3, [sp]
 838 008c 0193     		str	r3, [sp, #4]
  69:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 839              		.loc 1 69 2 is_stmt 1 view .LVU245
  69:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 840              		.loc 1 69 34 is_stmt 0 view .LVU246
 841 008e FFF7FEFF 		bl	getIdentifyMode
 842              	.LVL57:
 843 0092 0446     		mov	r4, r0
 844              	.LVL58:
  70:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
 845              		.loc 1 70 2 is_stmt 1 view .LVU247
  70:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
 846              		.loc 1 70 26 is_stmt 0 view .LVU248
 847 0094 9FED3C1A 		vldr.32	s2, .L27+32
 848 0098 DFED3C0A 		vldr.32	s1, .L27+36
 849 009c B0EE080A 		vmov.f32	s0, #3.0e+0
 850 00a0 3B4B     		ldr	r3, .L27+40
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 24


 851 00a2 9868     		ldr	r0, [r3, #8]
 852 00a4 FFF7FEFF 		bl	ADCToBatteryVoltage
 853              	.LVL59:
  71:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 854              		.loc 1 71 2 is_stmt 1 view .LVU249
  71:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 855              		.loc 1 71 8 is_stmt 0 view .LVU250
 856 00a8 DFED3A7A 		vldr.32	s15, .L27+44
 857 00ac 87EE808A 		vdiv.f32	s16, s15, s0
 858              	.LVL60:
  71:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 859              		.loc 1 71 53 is_stmt 1 view .LVU251
  72:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 860              		.loc 1 72 2 view .LVU252
  72:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 861              		.loc 1 72 5 is_stmt 0 view .LVU253
 862 00b0 3948     		ldr	r0, .L27+48
 863 00b2 00EB0410 		add	r0, r0, r4, lsl #4
 864 00b6 FFF7FEFF 		bl	getLoggerFlag
 865              	.LVL61:
  72:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 866              		.loc 1 72 4 view .LVU254
 867 00ba 0028     		cmp	r0, #0
 868 00bc 4CD0     		beq	.L20
  73:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
 869              		.loc 1 73 3 is_stmt 1 view .LVU255
  73:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
 870              		.loc 1 73 13 is_stmt 0 view .LVU256
 871 00be 374B     		ldr	r3, .L27+52
 872 00c0 1A68     		ldr	r2, [r3]
 873 00c2 3749     		ldr	r1, .L27+56
 874 00c4 81FB0231 		smull	r3, r1, r1, r2
 875 00c8 D317     		asrs	r3, r2, #31
 876 00ca C3EBE103 		rsb	r3, r3, r1, asr #3
 877 00ce 03EB8303 		add	r3, r3, r3, lsl #2
  73:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
 878              		.loc 1 73 5 view .LVU257
 879 00d2 B2EB830F 		cmp	r2, r3, lsl #2
 880 00d6 14D0     		beq	.L25
 881              	.L21:
  76:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 882              		.loc 1 76 3 is_stmt 1 view .LVU258
  76:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 883              		.loc 1 76 13 is_stmt 0 view .LVU259
 884 00d8 304B     		ldr	r3, .L27+52
 885 00da 1A68     		ldr	r2, [r3]
 886 00dc 3049     		ldr	r1, .L27+56
 887 00de 81FB0231 		smull	r3, r1, r1, r2
 888 00e2 D317     		asrs	r3, r2, #31
 889 00e4 C3EB2113 		rsb	r3, r3, r1, asr #4
 890 00e8 03EB8303 		add	r3, r3, r3, lsl #2
  76:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 891              		.loc 1 76 5 view .LVU260
 892 00ec B2EBC30F 		cmp	r2, r3, lsl #3
 893 00f0 12D0     		beq	.L26
 894              	.LVL62:
 895              	.L22:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 25


  84:Core/Src/Main/Interrupt.c **** 	}
 896              		.loc 1 84 3 is_stmt 1 view .LVU261
  84:Core/Src/Main/Interrupt.c **** 	}
 897              		.loc 1 84 8 is_stmt 0 view .LVU262
 898 00f2 2A4A     		ldr	r2, .L27+52
 899 00f4 1368     		ldr	r3, [r2]
 900 00f6 0133     		adds	r3, r3, #1
 901 00f8 1360     		str	r3, [r2]
 902              	.L19:
  91:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
 903              		.loc 1 91 1 view .LVU263
 904 00fa 05B0     		add	sp, sp, #20
 905              	.LCFI8:
 906              		.cfi_remember_state
 907              		.cfi_def_cfa_offset 20
 908              		@ sp needed
 909 00fc BDEC028B 		vldm	sp!, {d8}
 910              	.LCFI9:
 911              		.cfi_restore 80
 912              		.cfi_restore 81
 913              		.cfi_def_cfa_offset 12
 914 0100 30BD     		pop	{r4, r5, pc}
 915              	.LVL63:
 916              	.L25:
 917              	.LCFI10:
 918              		.cfi_restore_state
  74:Core/Src/Main/Interrupt.c **** 		}
 919              		.loc 1 74 4 is_stmt 1 view .LVU264
 920 0102 04AB     		add	r3, sp, #16
 921 0104 03EB8403 		add	r3, r3, r4, lsl #2
 922 0108 13ED020A 		vldr.32	s0, [r3, #-8]
 923 010c 2248     		ldr	r0, .L27+48
 924 010e 00EB0410 		add	r0, r0, r4, lsl #4
 925 0112 FFF7FEFF 		bl	getFloatLog
 926              	.LVL64:
 927 0116 DFE7     		b	.L21
 928              	.L26:
  77:Core/Src/Main/Interrupt.c **** 			input[0] *= convert_to_reg_counter;
 929              		.loc 1 77 4 view .LVU265
 930 0118 224D     		ldr	r5, .L27+60
 931 011a 2246     		mov	r2, r4
 932 011c 6946     		mov	r1, sp
 933 011e 2868     		ldr	r0, [r5]
 934 0120 FFF7FEFF 		bl	getIdentifyInputCount
 935              	.LVL65:
  78:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
 936              		.loc 1 78 4 view .LVU266
  78:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
 937              		.loc 1 78 13 is_stmt 0 view .LVU267
 938 0124 DDED007A 		vldr.32	s15, [sp]
 939 0128 68EE277A 		vmul.f32	s15, s16, s15
 940 012c CDED007A 		vstr.32	s15, [sp]
  79:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 941              		.loc 1 79 4 is_stmt 1 view .LVU268
  79:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 942              		.loc 1 79 13 is_stmt 0 view .LVU269
 943 0130 9DED017A 		vldr.32	s14, [sp, #4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 26


 944 0134 28EE078A 		vmul.f32	s16, s16, s14
 945              	.LVL66:
  79:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 946              		.loc 1 79 13 view .LVU270
 947 0138 8DED018A 		vstr.32	s16, [sp, #4]
  80:Core/Src/Main/Interrupt.c **** 			identify_count++;
 948              		.loc 1 80 4 is_stmt 1 view .LVU271
 949 013c BDEEC87A 		vcvt.s32.f32	s14, s16
 950 0140 17EE101A 		vmov	r1, s14	@ int
 951 0144 FDEEE77A 		vcvt.s32.f32	s15, s15
 952 0148 17EE900A 		vmov	r0, s15	@ int
 953 014c FFF7FEFF 		bl	Motor_Switch
 954              	.LVL67:
  81:Core/Src/Main/Interrupt.c **** 			
 955              		.loc 1 81 4 view .LVU272
  81:Core/Src/Main/Interrupt.c **** 			
 956              		.loc 1 81 18 is_stmt 0 view .LVU273
 957 0150 2B68     		ldr	r3, [r5]
 958 0152 0133     		adds	r3, r3, #1
 959 0154 2B60     		str	r3, [r5]
 960 0156 CCE7     		b	.L22
 961              	.LVL68:
 962              	.L20:
  87:Core/Src/Main/Interrupt.c **** 		count = 0;
 963              		.loc 1 87 3 is_stmt 1 view .LVU274
 964 0158 0021     		movs	r1, #0
 965 015a 0846     		mov	r0, r1
 966 015c FFF7FEFF 		bl	Motor_Switch
 967              	.LVL69:
  88:Core/Src/Main/Interrupt.c **** 	}
 968              		.loc 1 88 3 view .LVU275
  88:Core/Src/Main/Interrupt.c **** 	}
 969              		.loc 1 88 9 is_stmt 0 view .LVU276
 970 0160 0E4B     		ldr	r3, .L27+52
 971 0162 0022     		movs	r2, #0
 972 0164 1A60     		str	r2, [r3]
  91:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
 973              		.loc 1 91 1 view .LVU277
 974 0166 C8E7     		b	.L19
 975              	.L28:
 976              		.align	2
 977              	.L27:
 978 0168 00040040 		.word	1073742848
 979 016c 00000000 		.word	PulseDisplacement
 980 0170 00080040 		.word	1073743872
 981 0174 CD77813F 		.word	1065449421
 982 0178 00000000 		.word	CurrentVelocity
 983 017c 00000000 		.word	TotalPulse
 984 0180 00000000 		.word	AngularV
 985 0184 00000000 		.word	Angle
 986 0188 00008045 		.word	1166016512
 987 018c 33335340 		.word	1079194419
 988 0190 00000000 		.word	adc1
 989 0194 00005244 		.word	1146224640
 990 0198 00000000 		.word	.LANCHOR0
 991 019c 00000000 		.word	.LANCHOR1
 992 01a0 67666666 		.word	1717986919
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 27


 993 01a4 00000000 		.word	.LANCHOR2
 994              		.cfi_endproc
 995              	.LFE239:
 997              		.global	__aeabi_dadd
 998              		.section	.text.WritingFree_IT,"ax",%progbits
 999              		.align	1
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	WritingFree_IT:
 1005              	.LFB242:
 271:Core/Src/Main/Interrupt.c **** static void WritingFree_IT()
 272:Core/Src/Main/Interrupt.c **** {
 1006              		.loc 1 272 1 is_stmt 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1011              	.LCFI11:
 1012              		.cfi_def_cfa_offset 24
 1013              		.cfi_offset 3, -24
 1014              		.cfi_offset 4, -20
 1015              		.cfi_offset 5, -16
 1016              		.cfi_offset 6, -12
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 2DED028B 		vpush.64	{d8}
 1020              	.LCFI12:
 1021              		.cfi_def_cfa_offset 32
 1022              		.cfi_offset 80, -32
 1023              		.cfi_offset 81, -28
 273:Core/Src/Main/Interrupt.c **** 	calcVelocity();
 1024              		.loc 1 273 2 view .LVU279
 1025              	.LBB16:
 1026              	.LBI16:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 1027              		.loc 1 39 13 view .LVU280
 1028              	.LBB17:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1029              		.loc 1 40 2 view .LVU281
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1030              		.loc 1 40 35 is_stmt 0 view .LVU282
 1031 0006 6A4A     		ldr	r2, .L31+16
 1032 0008 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1033              		.loc 1 40 28 view .LVU283
 1034 000a 47F22F53 		movw	r3, #29999
 1035 000e 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1036              		.loc 1 40 26 view .LVU284
 1037 0010 684C     		ldr	r4, .L31+20
 1038 0012 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 1039              		.loc 1 41 2 is_stmt 1 view .LVU285
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 1040              		.loc 1 41 12 is_stmt 0 view .LVU286
 1041 0014 5362     		str	r3, [r2, #36]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 28


  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1042              		.loc 1 42 2 is_stmt 1 view .LVU287
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1043              		.loc 1 42 36 is_stmt 0 view .LVU288
 1044 0016 6848     		ldr	r0, .L31+24
 1045 0018 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1046              		.loc 1 42 29 view .LVU289
 1047 001a 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1048              		.loc 1 42 27 view .LVU290
 1049 001c 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 1050              		.loc 1 43 2 is_stmt 1 view .LVU291
  43:Core/Src/Main/Interrupt.c **** 
 1051              		.loc 1 43 12 is_stmt 0 view .LVU292
 1052 001e 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1053              		.loc 1 46 2 is_stmt 1 view .LVU293
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1054              		.loc 1 46 27 is_stmt 0 view .LVU294
 1055 0020 07EE901A 		vmov	s15, r1	@ int
 1056 0024 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1057              		.loc 1 46 58 view .LVU295
 1058 0028 DFED646A 		vldr.32	s13, .L31+28
 1059 002c 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1060              		.loc 1 46 24 view .LVU296
 1061 0030 634D     		ldr	r5, .L31+32
 1062 0032 85ED007A 		vstr.32	s14, [r5]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1063              		.loc 1 47 2 is_stmt 1 view .LVU297
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1064              		.loc 1 47 28 is_stmt 0 view .LVU298
 1065 0036 07EE902A 		vmov	s15, r2	@ int
 1066 003a F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1067              		.loc 1 47 60 view .LVU299
 1068 003e 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1069              		.loc 1 47 25 view .LVU300
 1070 0042 C5ED017A 		vstr.32	s15, [r5, #4]
  48:Core/Src/Main/Interrupt.c **** 
 1071              		.loc 1 48 2 is_stmt 1 view .LVU301
  48:Core/Src/Main/Interrupt.c **** 
 1072              		.loc 1 48 42 is_stmt 0 view .LVU302
 1073 0046 D5ED007A 		vldr.32	s15, [r5]
  48:Core/Src/Main/Interrupt.c **** 
 1074              		.loc 1 48 66 view .LVU303
 1075 004a 95ED017A 		vldr.32	s14, [r5, #4]
  48:Core/Src/Main/Interrupt.c **** 
 1076              		.loc 1 48 49 view .LVU304
 1077 004e 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 1078              		.loc 1 48 75 view .LVU305
 1079 0052 F6EE008A 		vmov.f32	s17, #5.0e-1
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 29


 1080 0056 67EEA87A 		vmul.f32	s15, s15, s17
  48:Core/Src/Main/Interrupt.c **** 
 1081              		.loc 1 48 24 view .LVU306
 1082 005a C5ED027A 		vstr.32	s15, [r5, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1083              		.loc 1 51 2 is_stmt 1 view .LVU307
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1084              		.loc 1 51 19 is_stmt 0 view .LVU308
 1085 005e 594B     		ldr	r3, .L31+36
 1086 0060 1868     		ldr	r0, [r3]
 1087 0062 0144     		add	r1, r1, r0
 1088 0064 1960     		str	r1, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1089              		.loc 1 52 2 is_stmt 1 view .LVU309
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1090              		.loc 1 52 20 is_stmt 0 view .LVU310
 1091 0066 5968     		ldr	r1, [r3, #4]
 1092 0068 0A44     		add	r2, r2, r1
 1093 006a 5A60     		str	r2, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 1094              		.loc 1 53 2 is_stmt 1 view .LVU311
  53:Core/Src/Main/Interrupt.c **** }
 1095              		.loc 1 53 31 is_stmt 0 view .LVU312
 1096 006c 1A68     		ldr	r2, [r3]
  53:Core/Src/Main/Interrupt.c **** }
 1097              		.loc 1 53 48 view .LVU313
 1098 006e 5968     		ldr	r1, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** }
 1099              		.loc 1 53 37 view .LVU314
 1100 0070 0A44     		add	r2, r2, r1
  53:Core/Src/Main/Interrupt.c **** }
 1101              		.loc 1 53 19 view .LVU315
 1102 0072 9A60     		str	r2, [r3, #8]
 1103              	.LBE17:
 1104              	.LBE16:
 274:Core/Src/Main/Interrupt.c **** 
 275:Core/Src/Main/Interrupt.c **** #if 0
 276:Core/Src/Main/Interrupt.c **** 	static int count=0;
 277:Core/Src/Main/Interrupt.c **** 
 278:Core/Src/Main/Interrupt.c **** 	if(count < 2000)
 279:Core/Src/Main/Interrupt.c **** 	{
 280:Core/Src/Main/Interrupt.c **** 		data[count] = CurrentVelocity[LEFT];
 281:Core/Src/Main/Interrupt.c **** 	}
 282:Core/Src/Main/Interrupt.c **** 	count ++;
 283:Core/Src/Main/Interrupt.c **** #endif
 284:Core/Src/Main/Interrupt.c **** 
 285:Core/Src/Main/Interrupt.c **** #if 1
 286:Core/Src/Main/Interrupt.c **** 
 287:Core/Src/Main/Interrupt.c **** 	static float zg_last=0;
 1105              		.loc 1 287 2 is_stmt 1 view .LVU316
 288:Core/Src/Main/Interrupt.c **** 	float zg_law;
 1106              		.loc 1 288 2 view .LVU317
 289:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 290:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 1107              		.loc 1 290 2 view .LVU318
 1108              		.loc 1 290 10 is_stmt 0 view .LVU319
 1109 0074 3821     		movs	r1, #56
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 30


 1110 0076 3720     		movs	r0, #55
 1111 0078 FFF7FEFF 		bl	ReadIMU
 1112              	.LVL70:
 1113              		.loc 1 290 8 view .LVU320
 1114 007c 524B     		ldr	r3, .L31+40
 1115 007e 83ED000A 		vstr.32	s0, [r3]
 291:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 1116              		.loc 1 291 5 is_stmt 1 view .LVU321
 1117              		.loc 1 291 23 is_stmt 0 view .LVU322
 1118 0082 93ED008A 		vldr.32	s16, [r3]
 1119 0086 514B     		ldr	r3, .L31+44
 1120 0088 D3ED007A 		vldr.32	s15, [r3]
 1121 008c 38EE678A 		vsub.f32	s16, s16, s15
 1122              		.loc 1 291 36 view .LVU323
 1123 0090 4F4B     		ldr	r3, .L31+48
 1124 0092 D3ED007A 		vldr.32	s15, [r3]
 1125              		.loc 1 291 12 view .LVU324
 1126 0096 28EE278A 		vmul.f32	s16, s16, s15
 1127              	.LVL71:
 292:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 1128              		.loc 1 292 5 is_stmt 1 view .LVU325
 1129              		.loc 1 292 23 is_stmt 0 view .LVU326
 1130 009a 18EE100A 		vmov	r0, s16
 1131 009e FFF7FEFF 		bl	__aeabi_f2d
 1132              	.LVL72:
 1133 00a2 3FA3     		adr	r3, .L31
 1134 00a4 D3E90023 		ldrd	r2, [r3]
 1135 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1136              	.LVL73:
 1137 00ac 0646     		mov	r6, r0
 1138 00ae 0F46     		mov	r7, r1
 1139              		.loc 1 292 40 view .LVU327
 1140 00b0 484C     		ldr	r4, .L31+52
 1141 00b2 2068     		ldr	r0, [r4]	@ float
 1142 00b4 FFF7FEFF 		bl	__aeabi_f2d
 1143              	.LVL74:
 1144 00b8 3BA3     		adr	r3, .L31+8
 1145 00ba D3E90023 		ldrd	r2, [r3]
 1146 00be FFF7FEFF 		bl	__aeabi_dmul
 1147              	.LVL75:
 1148 00c2 0246     		mov	r2, r0
 1149 00c4 0B46     		mov	r3, r1
 1150              		.loc 1 292 32 view .LVU328
 1151 00c6 3046     		mov	r0, r6
 1152 00c8 3946     		mov	r1, r7
 1153 00ca FFF7FEFF 		bl	__aeabi_dadd
 1154              	.LVL76:
 1155 00ce FFF7FEFF 		bl	__aeabi_d2f
 1156              	.LVL77:
 1157              		.loc 1 292 14 view .LVU329
 1158 00d2 07EE900A 		vmov	s15, r0
 1159 00d6 F1EE677A 		vneg.f32	s15, s15
 1160 00da 3F4B     		ldr	r3, .L31+56
 1161 00dc C3ED007A 		vstr.32	s15, [r3]
 293:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 1162              		.loc 1 293 5 is_stmt 1 view .LVU330
 1163              		.loc 1 293 13 is_stmt 0 view .LVU331
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 31


 1164 00e0 84ED008A 		vstr.32	s16, [r4]
 294:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 1165              		.loc 1 294 2 is_stmt 1 view .LVU332
 1166              		.loc 1 294 20 is_stmt 0 view .LVU333
 1167 00e4 D3ED007A 		vldr.32	s15, [r3]
 1168 00e8 9FED3C7A 		vldr.32	s14, .L31+60
 1169 00ec 27EE877A 		vmul.f32	s14, s15, s14
 1170              		.loc 1 294 8 view .LVU334
 1171 00f0 3B4B     		ldr	r3, .L31+64
 1172 00f2 D3ED007A 		vldr.32	s15, [r3]
 1173 00f6 77EE877A 		vadd.f32	s15, s15, s14
 1174 00fa C3ED007A 		vstr.32	s15, [r3]
 295:Core/Src/Main/Interrupt.c **** 
 296:Core/Src/Main/Interrupt.c **** #else
 297:Core/Src/Main/Interrupt.c **** 	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 298:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 299:Core/Src/Main/Interrupt.c **** 
 300:Core/Src/Main/Interrupt.c **** #endif
 301:Core/Src/Main/Interrupt.c **** 	AngularAcceleration += AngularLeapsity;
 1175              		.loc 1 301 2 is_stmt 1 view .LVU335
 1176              		.loc 1 301 22 is_stmt 0 view .LVU336
 1177 00fe 394B     		ldr	r3, .L31+68
 1178 0100 D3ED007A 		vldr.32	s15, [r3]
 1179 0104 384A     		ldr	r2, .L31+72
 1180 0106 92ED007A 		vldr.32	s14, [r2]
 1181 010a 77EE877A 		vadd.f32	s15, s15, s14
 1182 010e C3ED007A 		vstr.32	s15, [r3]
 302:Core/Src/Main/Interrupt.c **** 	TargetVelocity[BODY] += Acceleration;
 1183              		.loc 1 302 2 is_stmt 1 view .LVU337
 1184 0112 364A     		ldr	r2, .L31+76
 1185 0114 92ED007A 		vldr.32	s14, [r2]
 1186              		.loc 1 302 23 is_stmt 0 view .LVU338
 1187 0118 354C     		ldr	r4, .L31+80
 1188 011a D4ED027A 		vldr.32	s15, [r4, #8]
 1189 011e 77EE877A 		vadd.f32	s15, s15, s14
 1190 0122 C4ED027A 		vstr.32	s15, [r4, #8]
 303:Core/Src/Main/Interrupt.c **** 	TargetAngularV += AngularAcceleration;
 1191              		.loc 1 303 2 is_stmt 1 view .LVU339
 1192 0126 93ED007A 		vldr.32	s14, [r3]
 1193              		.loc 1 303 17 is_stmt 0 view .LVU340
 1194 012a 324B     		ldr	r3, .L31+84
 1195 012c D3ED007A 		vldr.32	s15, [r3]
 1196 0130 77EE877A 		vadd.f32	s15, s15, s14
 1197 0134 C3ED007A 		vstr.32	s15, [r3]
 304:Core/Src/Main/Interrupt.c **** 
 305:Core/Src/Main/Interrupt.c **** 	TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 1198              		.loc 1 305 2 is_stmt 1 view .LVU341
 1199              		.loc 1 305 42 is_stmt 0 view .LVU342
 1200 0138 D4ED026A 		vldr.32	s13, [r4, #8]
 1201              		.loc 1 305 66 view .LVU343
 1202 013c 93ED007A 		vldr.32	s14, [r3]
 1203 0140 9FED2D6A 		vldr.32	s12, .L31+88
 1204 0144 27EE067A 		vmul.f32	s14, s14, s12
 1205              		.loc 1 305 80 view .LVU344
 1206 0148 27EE287A 		vmul.f32	s14, s14, s17
 1207              		.loc 1 305 49 view .LVU345
 1208 014c 36EEC77A 		vsub.f32	s14, s13, s14
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 32


 1209              		.loc 1 305 24 view .LVU346
 1210 0150 84ED017A 		vstr.32	s14, [r4, #4]
 306:Core/Src/Main/Interrupt.c **** 	TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 1211              		.loc 1 306 2 is_stmt 1 view .LVU347
 1212              		.loc 1 306 42 is_stmt 0 view .LVU348
 1213 0154 D3ED007A 		vldr.32	s15, [r3]
 1214 0158 67EE867A 		vmul.f32	s15, s15, s12
 1215              		.loc 1 306 73 view .LVU349
 1216 015c 94ED017A 		vldr.32	s14, [r4, #4]
 1217              		.loc 1 306 57 view .LVU350
 1218 0160 77EE877A 		vadd.f32	s15, s15, s14
 1219              		.loc 1 306 23 view .LVU351
 1220 0164 C4ED007A 		vstr.32	s15, [r4]
 307:Core/Src/Main/Interrupt.c **** 
 308:Core/Src/Main/Interrupt.c **** 	VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVelocity[LEFT]);
 1221              		.loc 1 308 2 is_stmt 1 view .LVU352
 1222              		.loc 1 308 20 is_stmt 0 view .LVU353
 1223 0168 94ED000A 		vldr.32	s0, [r4]
 1224 016c D5ED000A 		vldr.32	s1, [r5]
 1225 0170 0420     		movs	r0, #4
 1226 0172 FFF7FEFF 		bl	PIDControl
 1227              	.LVL78:
 1228              		.loc 1 308 18 view .LVU354
 1229 0176 214E     		ldr	r6, .L31+92
 1230 0178 3060     		str	r0, [r6]
 309:Core/Src/Main/Interrupt.c **** 	VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelocity[RIGHT]);
 1231              		.loc 1 309 2 is_stmt 1 view .LVU355
 1232              		.loc 1 309 21 is_stmt 0 view .LVU356
 1233 017a 94ED010A 		vldr.32	s0, [r4, #4]
 1234 017e D5ED010A 		vldr.32	s1, [r5, #4]
 1235 0182 0520     		movs	r0, #5
 1236 0184 FFF7FEFF 		bl	PIDControl
 1237              	.LVL79:
 1238 0188 0146     		mov	r1, r0
 1239              		.loc 1 309 19 view .LVU357
 1240 018a 1D4B     		ldr	r3, .L31+96
 1241 018c 1860     		str	r0, [r3]
 310:Core/Src/Main/Interrupt.c **** 
 311:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 1242              		.loc 1 311 2 is_stmt 1 view .LVU358
 1243 018e 3068     		ldr	r0, [r6]
 1244 0190 FFF7FEFF 		bl	Motor_Switch
 1245              	.LVL80:
 312:Core/Src/Main/Interrupt.c **** }
 1246              		.loc 1 312 1 is_stmt 0 view .LVU359
 1247 0194 BDEC028B 		vldm	sp!, {d8}
 1248              	.LCFI13:
 1249              		.cfi_restore 80
 1250              		.cfi_restore 81
 1251              		.cfi_def_cfa_offset 24
 1252              	.LVL81:
 1253              		.loc 1 312 1 view .LVU360
 1254 0198 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1255              	.L32:
 1256 019a 00BFAFF3 		.align	3
 1256      0080
 1257              	.L31:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 33


 1258 01a0 7B14AE47 		.word	1202590843
 1259 01a4 E17A843F 		.word	1065646817
 1260 01a8 AE47E17A 		.word	2061584302
 1261 01ac 14AEEF3F 		.word	1072672276
 1262 01b0 00040040 		.word	1073742848
 1263 01b4 00000000 		.word	PulseDisplacement
 1264 01b8 00080040 		.word	1073743872
 1265 01bc CD77813F 		.word	1065449421
 1266 01c0 00000000 		.word	CurrentVelocity
 1267 01c4 00000000 		.word	TotalPulse
 1268 01c8 00000000 		.word	ZGyro
 1269 01cc 00000000 		.word	zg_offset
 1270 01d0 00000000 		.word	convert_to_imu_angv
 1271 01d4 00000000 		.word	.LANCHOR3
 1272 01d8 00000000 		.word	AngularV
 1273 01dc 6F12833A 		.word	981668463
 1274 01e0 00000000 		.word	Angle
 1275 01e4 00000000 		.word	AngularAcceleration
 1276 01e8 00000000 		.word	AngularLeapsity
 1277 01ec 00000000 		.word	Acceleration
 1278 01f0 00000000 		.word	TargetVelocity
 1279 01f4 00000000 		.word	TargetAngularV
 1280 01f8 9A990942 		.word	1107925402
 1281 01fc 00000000 		.word	VelocityLeftOut
 1282 0200 00000000 		.word	VelocityRightOut
 1283              		.cfi_endproc
 1284              	.LFE242:
 1286              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1287              		.align	1
 1288              		.global	HAL_TIM_PeriodElapsedCallback
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1293              	HAL_TIM_PeriodElapsedCallback:
 1294              	.LVL82:
 1295              	.LFB243:
 313:Core/Src/Main/Interrupt.c **** 
 314:Core/Src/Main/Interrupt.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 315:Core/Src/Main/Interrupt.c **** {
 1296              		.loc 1 315 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 16
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		.loc 1 315 1 is_stmt 0 view .LVU362
 1301 0000 70B5     		push	{r4, r5, r6, lr}
 1302              	.LCFI14:
 1303              		.cfi_def_cfa_offset 16
 1304              		.cfi_offset 4, -16
 1305              		.cfi_offset 5, -12
 1306              		.cfi_offset 6, -8
 1307              		.cfi_offset 14, -4
 1308 0002 84B0     		sub	sp, sp, #16
 1309              	.LCFI15:
 1310              		.cfi_def_cfa_offset 32
 1311 0004 0446     		mov	r4, r0
 316:Core/Src/Main/Interrupt.c **** 	if( htim == &htim1)
 1312              		.loc 1 316 2 is_stmt 1 view .LVU363
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 34


 1313              		.loc 1 316 4 is_stmt 0 view .LVU364
 1314 0006 334B     		ldr	r3, .L47
 1315 0008 9842     		cmp	r0, r3
 1316 000a 04D0     		beq	.L44
 1317              	.LVL83:
 1318              	.L34:
 317:Core/Src/Main/Interrupt.c **** 	{
 318:Core/Src/Main/Interrupt.c **** 
 319:Core/Src/Main/Interrupt.c **** 		switch(IT_mode){
 320:Core/Src/Main/Interrupt.c **** 		case IT_EXPLORE:
 321:Core/Src/Main/Interrupt.c **** 			Explore_IT();
 322:Core/Src/Main/Interrupt.c **** 			break;
 323:Core/Src/Main/Interrupt.c **** 		case IT_FREE:
 324:Core/Src/Main/Interrupt.c **** 			WritingFree_IT();
 325:Core/Src/Main/Interrupt.c **** 			break;
 326:Core/Src/Main/Interrupt.c **** 		case IT_IMU_TEST:
 327:Core/Src/Main/Interrupt.c **** 
 328:Core/Src/Main/Interrupt.c **** 			if(timer1 < 5000)
 329:Core/Src/Main/Interrupt.c **** 			{
 330:Core/Src/Main/Interrupt.c **** 
 331:Core/Src/Main/Interrupt.c **** 				Update_IMU(&AngularV, &Angle);
 332:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 333:Core/Src/Main/Interrupt.c **** 				timer1 += t;
 334:Core/Src/Main/Interrupt.c **** 			}
 335:Core/Src/Main/Interrupt.c **** 			else t = 0;
 336:Core/Src/Main/Interrupt.c **** 			break;
 337:Core/Src/Main/Interrupt.c **** 		case IT_IDENTIFY:
 338:Core/Src/Main/Interrupt.c **** 			SystemIdentify_IT();
 339:Core/Src/Main/Interrupt.c **** 			break;
 340:Core/Src/Main/Interrupt.c **** 		case IT_STEP_RESPONSE:
 341:Core/Src/Main/Interrupt.c **** 
 342:Core/Src/Main/Interrupt.c **** 			break;
 343:Core/Src/Main/Interrupt.c **** 		case IT_CONTROL_TEST:
 344:Core/Src/Main/Interrupt.c **** 			ControlTest_IT();
 345:Core/Src/Main/Interrupt.c **** 			break;
 346:Core/Src/Main/Interrupt.c **** 
 347:Core/Src/Main/Interrupt.c **** 		default :
 348:Core/Src/Main/Interrupt.c **** 			break;
 349:Core/Src/Main/Interrupt.c **** 		}
 350:Core/Src/Main/Interrupt.c **** 	}
 351:Core/Src/Main/Interrupt.c **** 
 352:Core/Src/Main/Interrupt.c **** 	if( htim == &htim8)
 1319              		.loc 1 352 2 is_stmt 1 view .LVU365
 1320              		.loc 1 352 4 is_stmt 0 view .LVU366
 1321 000c 324B     		ldr	r3, .L47+4
 1322 000e 9C42     		cmp	r4, r3
 1323 0010 35D0     		beq	.L45
 1324              	.LVL84:
 1325              	.L33:
 353:Core/Src/Main/Interrupt.c **** 	{
 354:Core/Src/Main/Interrupt.c **** 		//timer8 += t;
 355:Core/Src/Main/Interrupt.c **** 
 356:Core/Src/Main/Interrupt.c **** 		//Â£Å„Çª„É≥„Çµ„Éá„Éº„Çø„ÅÆÊõ¥Êñ∞
 357:Core/Src/Main/Interrupt.c **** 		Photo[FL] = GetWallDataAverage(10, adc1[0], FL);	//adc1_IN10
 358:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 359:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 360:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 35


 361:Core/Src/Main/Interrupt.c **** 		#if 1
 362:Core/Src/Main/Interrupt.c **** 			uint32_t sample[4]={
 363:Core/Src/Main/Interrupt.c **** 				adc2[0],
 364:Core/Src/Main/Interrupt.c **** 				adc1[0],
 365:Core/Src/Main/Interrupt.c **** 				adc2[1],
 366:Core/Src/Main/Interrupt.c **** 				adc1[1]
 367:Core/Src/Main/Interrupt.c **** 			};
 368:Core/Src/Main/Interrupt.c **** 			getPhotoSampleValue_uint32(&sample[0]);
 369:Core/Src/Main/Interrupt.c **** 		#else
 370:Core/Src/Main/Interrupt.c **** 			getPhotoSampleValue_float(&Photo[0]);
 371:Core/Src/Main/Interrupt.c **** 		#endif
 372:Core/Src/Main/Interrupt.c **** 	}
 373:Core/Src/Main/Interrupt.c **** }
 1326              		.loc 1 373 1 view .LVU367
 1327 0012 04B0     		add	sp, sp, #16
 1328              	.LCFI16:
 1329              		.cfi_remember_state
 1330              		.cfi_def_cfa_offset 16
 1331              		@ sp needed
 1332 0014 70BD     		pop	{r4, r5, r6, pc}
 1333              	.LVL85:
 1334              	.L44:
 1335              	.LCFI17:
 1336              		.cfi_restore_state
 319:Core/Src/Main/Interrupt.c **** 		case IT_EXPLORE:
 1337              		.loc 1 319 3 is_stmt 1 view .LVU368
 1338 0016 314B     		ldr	r3, .L47+8
 1339 0018 1B68     		ldr	r3, [r3]
 1340 001a 052B     		cmp	r3, #5
 1341 001c F6D8     		bhi	.L34
 1342 001e 01A2     		adr	r2, .L36
 1343 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1344              		.p2align 2
 1345              	.L36:
 1346 0024 3D000000 		.word	.L40+1
 1347 0028 43000000 		.word	.L39+1
 1348 002c 49000000 		.word	.L38+1
 1349 0030 73000000 		.word	.L37+1
 1350 0034 0D000000 		.word	.L34+1
 1351 0038 79000000 		.word	.L35+1
 1352              		.p2align 1
 1353              	.L40:
 321:Core/Src/Main/Interrupt.c **** 			break;
 1354              		.loc 1 321 4 view .LVU369
 1355 003c FFF7FEFF 		bl	Explore_IT
 1356              	.LVL86:
 322:Core/Src/Main/Interrupt.c **** 		case IT_FREE:
 1357              		.loc 1 322 4 view .LVU370
 1358 0040 E4E7     		b	.L34
 1359              	.LVL87:
 1360              	.L39:
 324:Core/Src/Main/Interrupt.c **** 			break;
 1361              		.loc 1 324 4 view .LVU371
 1362 0042 FFF7FEFF 		bl	WritingFree_IT
 1363              	.LVL88:
 325:Core/Src/Main/Interrupt.c **** 		case IT_IMU_TEST:
 1364              		.loc 1 325 4 view .LVU372
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 36


 1365 0046 E1E7     		b	.L34
 1366              	.LVL89:
 1367              	.L38:
 328:Core/Src/Main/Interrupt.c **** 			{
 1368              		.loc 1 328 4 view .LVU373
 328:Core/Src/Main/Interrupt.c **** 			{
 1369              		.loc 1 328 14 is_stmt 0 view .LVU374
 1370 0048 254B     		ldr	r3, .L47+12
 1371 004a 1A68     		ldr	r2, [r3]
 328:Core/Src/Main/Interrupt.c **** 			{
 1372              		.loc 1 328 6 view .LVU375
 1373 004c 41F28733 		movw	r3, #4999
 1374 0050 9A42     		cmp	r2, r3
 1375 0052 03DD     		ble	.L46
 335:Core/Src/Main/Interrupt.c **** 			break;
 1376              		.loc 1 335 9 is_stmt 1 view .LVU376
 335:Core/Src/Main/Interrupt.c **** 			break;
 1377              		.loc 1 335 11 is_stmt 0 view .LVU377
 1378 0054 234B     		ldr	r3, .L47+16
 1379 0056 0022     		movs	r2, #0
 1380 0058 1A60     		str	r2, [r3]
 1381 005a D7E7     		b	.L34
 1382              	.L46:
 331:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 1383              		.loc 1 331 5 is_stmt 1 view .LVU378
 1384 005c 2249     		ldr	r1, .L47+20
 1385 005e 2348     		ldr	r0, .L47+24
 1386              	.LVL90:
 331:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 1387              		.loc 1 331 5 is_stmt 0 view .LVU379
 1388 0060 FFF7FEFF 		bl	Update_IMU
 1389              	.LVL91:
 333:Core/Src/Main/Interrupt.c **** 			}
 1390              		.loc 1 333 5 is_stmt 1 view .LVU380
 333:Core/Src/Main/Interrupt.c **** 			}
 1391              		.loc 1 333 12 is_stmt 0 view .LVU381
 1392 0064 1E4A     		ldr	r2, .L47+12
 1393 0066 1368     		ldr	r3, [r2]
 1394 0068 1E49     		ldr	r1, .L47+16
 1395 006a 0968     		ldr	r1, [r1]
 1396 006c 0B44     		add	r3, r3, r1
 1397 006e 1360     		str	r3, [r2]
 1398 0070 CCE7     		b	.L34
 1399              	.LVL92:
 1400              	.L37:
 338:Core/Src/Main/Interrupt.c **** 			break;
 1401              		.loc 1 338 4 is_stmt 1 view .LVU382
 1402 0072 FFF7FEFF 		bl	SystemIdentify_IT
 1403              	.LVL93:
 339:Core/Src/Main/Interrupt.c **** 		case IT_STEP_RESPONSE:
 1404              		.loc 1 339 4 view .LVU383
 1405 0076 C9E7     		b	.L34
 1406              	.LVL94:
 1407              	.L35:
 344:Core/Src/Main/Interrupt.c **** 			break;
 1408              		.loc 1 344 4 view .LVU384
 1409 0078 FFF7FEFF 		bl	ControlTest_IT
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 37


 1410              	.LVL95:
 345:Core/Src/Main/Interrupt.c **** 
 1411              		.loc 1 345 4 view .LVU385
 1412 007c C6E7     		b	.L34
 1413              	.L45:
 1414              	.LBB18:
 357:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1415              		.loc 1 357 3 view .LVU386
 357:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1416              		.loc 1 357 42 is_stmt 0 view .LVU387
 1417 007e 1C4C     		ldr	r4, .L47+28
 1418              	.LVL96:
 357:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1419              		.loc 1 357 15 view .LVU388
 1420 0080 0022     		movs	r2, #0
 1421 0082 2168     		ldr	r1, [r4]
 1422 0084 0A20     		movs	r0, #10
 1423 0086 FFF7FEFF 		bl	GetWallDataAverage
 1424              	.LVL97:
 357:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1425              		.loc 1 357 13 view .LVU389
 1426 008a 1A4E     		ldr	r6, .L47+32
 1427 008c 86ED000A 		vstr.32	s0, [r6]
 358:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1428              		.loc 1 358 3 is_stmt 1 view .LVU390
 358:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1429              		.loc 1 358 19 is_stmt 0 view .LVU391
 1430 0090 0122     		movs	r2, #1
 1431 0092 6168     		ldr	r1, [r4, #4]
 1432 0094 0A20     		movs	r0, #10
 1433 0096 FFF7FEFF 		bl	GetWallDataAverage
 1434              	.LVL98:
 358:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1435              		.loc 1 358 17 view .LVU392
 1436 009a 86ED010A 		vstr.32	s0, [r6, #4]
 359:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1437              		.loc 1 359 3 is_stmt 1 view .LVU393
 359:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1438              		.loc 1 359 42 is_stmt 0 view .LVU394
 1439 009e 164D     		ldr	r5, .L47+36
 359:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1440              		.loc 1 359 15 view .LVU395
 1441 00a0 0222     		movs	r2, #2
 1442 00a2 2968     		ldr	r1, [r5]
 1443 00a4 0A20     		movs	r0, #10
 1444 00a6 FFF7FEFF 		bl	GetWallDataAverage
 1445              	.LVL99:
 359:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1446              		.loc 1 359 13 view .LVU396
 1447 00aa 86ED020A 		vstr.32	s0, [r6, #8]
 360:Core/Src/Main/Interrupt.c **** 		#if 1
 1448              		.loc 1 360 3 is_stmt 1 view .LVU397
 360:Core/Src/Main/Interrupt.c **** 		#if 1
 1449              		.loc 1 360 15 is_stmt 0 view .LVU398
 1450 00ae 0322     		movs	r2, #3
 1451 00b0 6968     		ldr	r1, [r5, #4]
 1452 00b2 0A20     		movs	r0, #10
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 38


 1453 00b4 FFF7FEFF 		bl	GetWallDataAverage
 1454              	.LVL100:
 360:Core/Src/Main/Interrupt.c **** 		#if 1
 1455              		.loc 1 360 13 view .LVU399
 1456 00b8 86ED030A 		vstr.32	s0, [r6, #12]
 362:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1457              		.loc 1 362 4 is_stmt 1 view .LVU400
 363:Core/Src/Main/Interrupt.c **** 				adc1[0],
 1458              		.loc 1 363 9 is_stmt 0 view .LVU401
 1459 00bc 2B68     		ldr	r3, [r5]
 362:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1460              		.loc 1 362 13 view .LVU402
 1461 00be 0093     		str	r3, [sp]
 364:Core/Src/Main/Interrupt.c **** 				adc2[1],
 1462              		.loc 1 364 9 view .LVU403
 1463 00c0 2368     		ldr	r3, [r4]
 362:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1464              		.loc 1 362 13 view .LVU404
 1465 00c2 0193     		str	r3, [sp, #4]
 365:Core/Src/Main/Interrupt.c **** 				adc1[1]
 1466              		.loc 1 365 9 view .LVU405
 1467 00c4 6B68     		ldr	r3, [r5, #4]
 362:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1468              		.loc 1 362 13 view .LVU406
 1469 00c6 0293     		str	r3, [sp, #8]
 366:Core/Src/Main/Interrupt.c **** 			};
 1470              		.loc 1 366 9 view .LVU407
 1471 00c8 6368     		ldr	r3, [r4, #4]
 362:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1472              		.loc 1 362 13 view .LVU408
 1473 00ca 0393     		str	r3, [sp, #12]
 368:Core/Src/Main/Interrupt.c **** 		#else
 1474              		.loc 1 368 4 is_stmt 1 view .LVU409
 1475 00cc 6846     		mov	r0, sp
 1476 00ce FFF7FEFF 		bl	getPhotoSampleValue_uint32
 1477              	.LVL101:
 1478              	.LBE18:
 1479              		.loc 1 373 1 is_stmt 0 view .LVU410
 1480 00d2 9EE7     		b	.L33
 1481              	.L48:
 1482              		.align	2
 1483              	.L47:
 1484 00d4 00000000 		.word	htim1
 1485 00d8 00000000 		.word	htim8
 1486 00dc 00000000 		.word	.LANCHOR4
 1487 00e0 00000000 		.word	.LANCHOR5
 1488 00e4 00000000 		.word	.LANCHOR6
 1489 00e8 00000000 		.word	Angle
 1490 00ec 00000000 		.word	AngularV
 1491 00f0 00000000 		.word	adc1
 1492 00f4 00000000 		.word	Photo
 1493 00f8 00000000 		.word	adc2
 1494              		.cfi_endproc
 1495              	.LFE243:
 1497              		.global	log_velocity
 1498              		.global	convert_to_imu_yaccel
 1499              		.global	convert_to_angularv
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 39


 1500              		.global	convert_to_velocity
 1501              		.global	identify
 1502              		.global	dbc
 1503              		.global	velodebug_flag
 1504              		.global	IT_mode
 1505              		.global	t
 1506              		.global	timer8
 1507              		.global	timer1
 1508              		.section	.bss.IT_mode,"aw",%nobits
 1509              		.align	2
 1510              		.set	.LANCHOR4,. + 0
 1513              	IT_mode:
 1514 0000 00000000 		.space	4
 1515              		.section	.bss.count.1,"aw",%nobits
 1516              		.align	2
 1517              		.set	.LANCHOR1,. + 0
 1520              	count.1:
 1521 0000 00000000 		.space	4
 1522              		.section	.bss.dbc,"aw",%nobits
 1523              		.align	2
 1526              	dbc:
 1527 0000 00000000 		.space	4
 1528              		.section	.bss.identify,"aw",%nobits
 1529              		.align	2
 1530              		.set	.LANCHOR0,. + 0
 1533              	identify:
 1534 0000 00000000 		.space	32
 1534      00000000 
 1534      00000000 
 1534      00000000 
 1534      00000000 
 1535              		.section	.bss.identify_count.0,"aw",%nobits
 1536              		.align	2
 1537              		.set	.LANCHOR2,. + 0
 1540              	identify_count.0:
 1541 0000 00000000 		.space	4
 1542              		.section	.bss.log_velocity,"aw",%nobits
 1543              		.align	2
 1546              	log_velocity:
 1547 0000 00000000 		.space	16
 1547      00000000 
 1547      00000000 
 1547      00000000 
 1548              		.section	.bss.t,"aw",%nobits
 1549              		.align	2
 1550              		.set	.LANCHOR6,. + 0
 1553              	t:
 1554 0000 00000000 		.space	4
 1555              		.section	.bss.timer1,"aw",%nobits
 1556              		.align	2
 1557              		.set	.LANCHOR5,. + 0
 1560              	timer1:
 1561 0000 00000000 		.space	4
 1562              		.section	.bss.timer8,"aw",%nobits
 1563              		.align	2
 1566              	timer8:
 1567 0000 00000000 		.space	4
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 40


 1568              		.section	.bss.velodebug_flag,"aw",%nobits
 1569              		.align	2
 1572              	velodebug_flag:
 1573 0000 00000000 		.space	4
 1574              		.section	.bss.zg_last.2,"aw",%nobits
 1575              		.align	2
 1576              		.set	.LANCHOR3,. + 0
 1579              	zg_last.2:
 1580 0000 00000000 		.space	4
 1581              		.section	.rodata.convert_to_angularv,"a"
 1582              		.align	2
 1585              	convert_to_angularv:
 1586 0000 B823EE3C 		.word	1022239672
 1587              		.section	.rodata.convert_to_imu_yaccel,"a"
 1588              		.align	2
 1591              	convert_to_imu_yaccel:
 1592 0000 B02F9940 		.word	1083781040
 1593              		.section	.rodata.convert_to_velocity,"a"
 1594              		.align	2
 1597              	convert_to_velocity:
 1598 0000 CD77813F 		.word	1065449421
 1599              		.text
 1600              	.Letext0:
 1601              		.file 2 "c:\\tools\\gcc-arm-none-eabi-10_2021.10\\arm-none-eabi\\include\\machine\\_default_types.
 1602              		.file 3 "c:\\tools\\gcc-arm-none-eabi-10_2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1603              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1604              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1605              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1606              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1607              		.file 8 "Core/Inc/Tools/Sampling.h"
 1608              		.file 9 "Core/Inc/Main/Interrupt.h"
 1609              		.file 10 "Core/Inc/Main/MicroMouse.h"
 1610              		.file 11 "Core/Inc/Tools/PID_Control.h"
 1611              		.file 12 "Core/Inc/HardWare/mouse_ADC.h"
 1612              		.file 13 "Core/Inc/HardWare/ICM_20648.h"
 1613              		.file 14 "Core/Inc/Tools/Convert.h"
 1614              		.file 15 "Core/Inc/HardWare/Motor_Driver.h"
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 Interrupt.c
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:24     .text.Explore_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:29     .text.Explore_IT:00000000 Explore_IT
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:464    .text.Explore_IT:000002c8 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:496    .text.ControlTest_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:501    .text.ControlTest_IT:00000000 ControlTest_IT
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:693    .text.ControlTest_IT:00000118 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:713    .text.SystemIdentify_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:718    .text.SystemIdentify_IT:00000000 SystemIdentify_IT
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:978    .text.SystemIdentify_IT:00000168 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:999    .text.WritingFree_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1004   .text.WritingFree_IT:00000000 WritingFree_IT
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1258   .text.WritingFree_IT:000001a0 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1287   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1293   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1346   .text.HAL_TIM_PeriodElapsedCallback:00000024 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1352   .text.HAL_TIM_PeriodElapsedCallback:0000003c $t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1484   .text.HAL_TIM_PeriodElapsedCallback:000000d4 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1546   .bss.log_velocity:00000000 log_velocity
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1591   .rodata.convert_to_imu_yaccel:00000000 convert_to_imu_yaccel
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1585   .rodata.convert_to_angularv:00000000 convert_to_angularv
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1597   .rodata.convert_to_velocity:00000000 convert_to_velocity
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1533   .bss.identify:00000000 identify
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1526   .bss.dbc:00000000 dbc
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1572   .bss.velodebug_flag:00000000 velodebug_flag
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1513   .bss.IT_mode:00000000 IT_mode
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1553   .bss.t:00000000 t
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1566   .bss.timer8:00000000 timer8
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1560   .bss.timer1:00000000 timer1
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1509   .bss.IT_mode:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1516   .bss.count.1:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1520   .bss.count.1:00000000 count.1
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1523   .bss.dbc:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1529   .bss.identify:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1536   .bss.identify_count.0:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1540   .bss.identify_count.0:00000000 identify_count.0
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1543   .bss.log_velocity:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1549   .bss.t:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1556   .bss.timer1:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1563   .bss.timer8:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1569   .bss.velodebug_flag:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1575   .bss.zg_last.2:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1579   .bss.zg_last.2:00000000 zg_last.2
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1582   .rodata.convert_to_angularv:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1588   .rodata.convert_to_imu_yaccel:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s:1594   .rodata.convert_to_velocity:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
Update_IMU
ADCToBatteryVoltage
PIDControl
Motor_Switch
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc4n7UMm.s 			page 42


PulseDisplacement
CurrentVelocity
TotalPulse
Angle
AngularV
Pid
Acceleration
TargetVelocity
AngularAcceleration
TargetAngularV
adc1
VelocityLeftOut
VelocityRightOut
TargetAngle
Photo
PhotoDiff
TargetPhoto
getIdentifyMode
getLoggerFlag
getFloatLog
getIdentifyInputCount
__aeabi_dadd
ReadIMU
ZGyro
zg_offset
convert_to_imu_angv
AngularLeapsity
GetWallDataAverage
getPhotoSampleValue_uint32
htim1
htim8
adc2
