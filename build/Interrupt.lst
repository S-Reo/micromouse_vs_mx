ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Interrupt.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_d2f
  22              		.global	__aeabi_ddiv
  23              		.section	.text.Explore_IT,"ax",%progbits
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	Explore_IT:
  30              	.LFB241:
  31              		.file 1 "Core/Src/Main/Interrupt.c"
   1:Core/Src/Main/Interrupt.c **** /*
   2:Core/Src/Main/Interrupt.c ****  * Interrupt.c
   3:Core/Src/Main/Interrupt.c ****  *
   4:Core/Src/Main/Interrupt.c ****  *  Created on: 2022/02/15
   5:Core/Src/Main/Interrupt.c ****  *      Author: leopi
   6:Core/Src/Main/Interrupt.c ****  */
   7:Core/Src/Main/Interrupt.c **** #include "Interrupt.h"
   8:Core/Src/Main/Interrupt.c **** 
   9:Core/Src/Main/Interrupt.c **** #include "Action.h"
  10:Core/Src/Main/Interrupt.c **** #include "MicroMouse.h"
  11:Core/Src/Main/Interrupt.c **** 
  12:Core/Src/Main/Interrupt.c **** #include <math.h>
  13:Core/Src/Main/Interrupt.c **** // #include "Convert.h"
  14:Core/Src/Main/Interrupt.c **** #include "UI.h"
  15:Core/Src/Main/Interrupt.c **** #include "PID_Control.h"
  16:Core/Src/Main/Interrupt.c **** 
  17:Core/Src/Main/Interrupt.c **** #include "mouse_ADC.h"
  18:Core/Src/Main/Interrupt.c **** //#include "LED_Driver.h"
  19:Core/Src/Main/Interrupt.c **** #include "IR_Emitter.h"
  20:Core/Src/Main/Interrupt.c **** #include "Motor_Driver.h"
  21:Core/Src/Main/Interrupt.c **** #include "ICM_20648.h"
  22:Core/Src/Main/Interrupt.c **** #include "Mode.h"
  23:Core/Src/Main/Interrupt.c **** // #include "Sampling.h"
  24:Core/Src/Main/Interrupt.c **** 
  25:Core/Src/Main/Interrupt.c **** int timer1,timer8, t;
  26:Core/Src/Main/Interrupt.c **** int IT_mode;
  27:Core/Src/Main/Interrupt.c **** int velodebug_flag=0;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 2


  28:Core/Src/Main/Interrupt.c **** int dbc = 0;
  29:Core/Src/Main/Interrupt.c **** logger_f identify[2];
  30:Core/Src/Main/Interrupt.c **** 
  31:Core/Src/Main/Interrupt.c **** const float convert_to_velocity = MM_PER_PULSE/T1;
  32:Core/Src/Main/Interrupt.c **** const float convert_to_angularv = 1/TREAD_WIDTH;
  33:Core/Src/Main/Interrupt.c **** //const float convert_to_imu_angv = M_PI/(16.4f*180.0f);
  34:Core/Src/Main/Interrupt.c **** const float convert_to_imu_yaccel = 1000*9.80392157f / 2048.0f; //1000*„Å™„Çì„Å°„ÇÉ„Çâg√ó9.80392157
  35:Core/Src/Main/Interrupt.c **** // const float maintain_output_valtage = 1/(BATTERY_MAX;
  36:Core/Src/Main/Interrupt.c **** // PID„ÅßË®àÁÆó„Åó„ÅüÂÄ§ = ÈõªÂúßÂÄ§„ÄÅ„Çí„ÄÅ„Ç´„Ç¶„É≥„ÇøÂÄ§„Å´Â§âÊèõ„Åô„ÇãÂá¶ÁêÜ„ÅåË¶Å„Çã
  37:Core/Src/Main/Interrupt.c **** 
  38:Core/Src/Main/Interrupt.c **** logger_f log_velocity;
  39:Core/Src/Main/Interrupt.c **** inline void calcVelocity(){
  40:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
  41:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  42:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
  43:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  44:Core/Src/Main/Interrupt.c **** 
  45:Core/Src/Main/Interrupt.c **** 	//ÈÄüÂ∫¶ mm/s
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[LEFT] =  (float)PulseDisplacement[LEFT] * convert_to_velocity;
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  48:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  49:Core/Src/Main/Interrupt.c **** 
  50:Core/Src/Main/Interrupt.c **** 	//ÁßªÂãïÈáè mm/ms„ÇíÁ©çÁÆó
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
  56:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
  57:Core/Src/Main/Interrupt.c **** }
  58:Core/Src/Main/Interrupt.c **** 
  59:Core/Src/Main/Interrupt.c **** static void SystemIdentify_IT(){
  60:Core/Src/Main/Interrupt.c **** 	
  61:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  62:Core/Src/Main/Interrupt.c **** 
  63:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle);
  64:Core/Src/Main/Interrupt.c **** 
  65:Core/Src/Main/Interrupt.c **** 	static int identify_count=0;
  66:Core/Src/Main/Interrupt.c **** 	static int count=0;
  67:Core/Src/Main/Interrupt.c **** 	float output[2] ={
  68:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
  69:Core/Src/Main/Interrupt.c **** 		AngularV
  70:Core/Src/Main/Interrupt.c **** 	};
  71:Core/Src/Main/Interrupt.c **** 	float input[2]={0};
  72:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
  73:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
  74:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
  75:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
  76:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
  77:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
  78:Core/Src/Main/Interrupt.c **** 		}
  79:Core/Src/Main/Interrupt.c **** 		if( (count%40) == 0 ){ //15„Çí„ÅÑ„Åò„Çå„Çã„Çà„ÅÜ„Å´„Åô„Çã
  80:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
  81:Core/Src/Main/Interrupt.c **** 			input[0] *= convert_to_reg_counter;
  82:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
  83:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
  84:Core/Src/Main/Interrupt.c **** 			identify_count++;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 3


  85:Core/Src/Main/Interrupt.c **** 			
  86:Core/Src/Main/Interrupt.c **** 		}
  87:Core/Src/Main/Interrupt.c **** 		count++;
  88:Core/Src/Main/Interrupt.c **** 	}
  89:Core/Src/Main/Interrupt.c **** 	else{
  90:Core/Src/Main/Interrupt.c **** 		Motor_Switch(0,0);
  91:Core/Src/Main/Interrupt.c **** 		count = 0;
  92:Core/Src/Main/Interrupt.c **** 	}
  93:Core/Src/Main/Interrupt.c **** 	
  94:Core/Src/Main/Interrupt.c **** }
  95:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
  96:Core/Src/Main/Interrupt.c **** 
  97:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  98:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
  99:Core/Src/Main/Interrupt.c **** 	
 100:Core/Src/Main/Interrupt.c **** 	
 101:Core/Src/Main/Interrupt.c **** 	//ËßíÈÄüÂ∫¶ rad/s
 102:Core/Src/Main/Interrupt.c **** 
 103:Core/Src/Main/Interrupt.c **** #if 0
 104:Core/Src/Main/Interrupt.c **** 	//static float angle=0;
 105:Core/Src/Main/Interrupt.c **** 	volatile static float zg_last=0;
 106:Core/Src/Main/Interrupt.c **** 	volatile float zg_law;
 107:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 108:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 109:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 110:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 111:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 112:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 113:Core/Src/Main/Interrupt.c **** 
 114:Core/Src/Main/Interrupt.c **** #else
 115:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle); //„É°„Éá„Ç£„Ç¢„É≥„Éï„Ç£„É´„Çø„Å®„Ç™„Éï„Çª„ÉÉ„Éà„Å†„Åë„Åß‰Ωï„Å®„Åã„Å
 116:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 117:Core/Src/Main/Interrupt.c **** //	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 118:Core/Src/Main/Interrupt.c **** //	Angle += AngularV * T1;
 119:Core/Src/Main/Interrupt.c **** 
 120:Core/Src/Main/Interrupt.c **** #endif
 121:Core/Src/Main/Interrupt.c **** 	int wall_d =0,wall_l =0,wall_r =0, wall_f=0;
 122:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 123:Core/Src/Main/Interrupt.c **** 
 124:Core/Src/Main/Interrupt.c **** 
 125:Core/Src/Main/Interrupt.c **** 	// if( PIDGetFlag(A_VELO_PID) == true )
 126:Core/Src/Main/Interrupt.c **** 	// {
 127:Core/Src/Main/Interrupt.c **** 		// ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 128:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 129:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngularV, AngularV); //ÈõªÂúßÂÄ§
 130:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 131:Core/Src/Main/Interrupt.c **** 	// }
 132:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[BODY] += Acceleration;
 133:Core/Src/Main/Interrupt.c **** 	// TargetAngularV += AngularAcceleration;
 134:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 135:Core/Src/Main/Interrupt.c **** 	// TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 136:Core/Src/Main/Interrupt.c **** 
 137:Core/Src/Main/Interrupt.c **** 	#if 0
 138:Core/Src/Main/Interrupt.c **** 			// VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[BODY], CurrentVelocity[LEFT]);
 139:Core/Src/Main/Interrupt.c **** 			// VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 140:Core/Src/Main/Interrupt.c **** 
 141:Core/Src/Main/Interrupt.c **** 			float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 4


 142:Core/Src/Main/Interrupt.c **** 			float duty = 1/ battery_voltage;
 143:Core/Src/Main/Interrupt.c **** 
 144:Core/Src/Main/Interrupt.c **** 			VelocityLeftOut = (((float)ang_out)) * 840*duty;
 145:Core/Src/Main/Interrupt.c **** 			VelocityRightOut = (((float)ang_out))* 840 *duty * (-1);
 146:Core/Src/Main/Interrupt.c **** 	#else
 147:Core/Src/Main/Interrupt.c **** 		VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[BODY], CurrentVelocity[LEFT]);
 148:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 149:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 150:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 151:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 152:Core/Src/Main/Interrupt.c **** 		// VelocityRightOut = voltage_maintainer * PIDControl( R_VELO_PID, TargetVelocity[RIGHT], Current
 153:Core/Src/Main/Interrupt.c **** 		VelocityLeftOut = ((float)(VelocityLeftOut + ang_out)) * 840 * duty;
 154:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 155:Core/Src/Main/Interrupt.c **** 
 156:Core/Src/Main/Interrupt.c **** 	#endif
 157:Core/Src/Main/Interrupt.c **** 	//„É¢„Éº„Çø„Å´Âá∫Âäõ
 158:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 159:Core/Src/Main/Interrupt.c **** }
 160:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 161:Core/Src/Main/Interrupt.c **** {
  32              		.loc 1 161 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43 0002 2DED028B 		vpush.64	{d8}
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 24
  46              		.cfi_offset 80, -24
  47              		.cfi_offset 81, -20
 162:Core/Src/Main/Interrupt.c **** 	calcVelocity();
  48              		.loc 1 162 2 view .LVU1
  49              	.LBB4:
  50              	.LBI4:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
  51              		.loc 1 39 13 view .LVU2
  52              	.LBB5:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  53              		.loc 1 40 2 view .LVU3
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  54              		.loc 1 40 35 is_stmt 0 view .LVU4
  55 0006 B84A     		ldr	r2, .L13+16
  56 0008 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  57              		.loc 1 40 28 view .LVU5
  58 000a 47F22F53 		movw	r3, #29999
  59 000e 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
  60              		.loc 1 40 26 view .LVU6
  61 0010 B64C     		ldr	r4, .L13+20
  62 0012 2160     		str	r1, [r4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 5


  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
  63              		.loc 1 41 2 is_stmt 1 view .LVU7
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
  64              		.loc 1 41 12 is_stmt 0 view .LVU8
  65 0014 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  66              		.loc 1 42 2 is_stmt 1 view .LVU9
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  67              		.loc 1 42 36 is_stmt 0 view .LVU10
  68 0016 B648     		ldr	r0, .L13+24
  69 0018 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  70              		.loc 1 42 29 view .LVU11
  71 001a 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
  72              		.loc 1 42 27 view .LVU12
  73 001c 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
  74              		.loc 1 43 2 is_stmt 1 view .LVU13
  43:Core/Src/Main/Interrupt.c **** 
  75              		.loc 1 43 12 is_stmt 0 view .LVU14
  76 001e 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  77              		.loc 1 46 2 is_stmt 1 view .LVU15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  78              		.loc 1 46 27 is_stmt 0 view .LVU16
  79 0020 07EE901A 		vmov	s15, r1	@ int
  80 0024 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  81              		.loc 1 46 58 view .LVU17
  82 0028 DFEDB26A 		vldr.32	s13, .L13+28
  83 002c 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
  84              		.loc 1 46 24 view .LVU18
  85 0030 B14B     		ldr	r3, .L13+32
  86 0032 83ED007A 		vstr.32	s14, [r3]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  87              		.loc 1 47 2 is_stmt 1 view .LVU19
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  88              		.loc 1 47 28 is_stmt 0 view .LVU20
  89 0036 07EE902A 		vmov	s15, r2	@ int
  90 003a F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  91              		.loc 1 47 60 view .LVU21
  92 003e 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
  93              		.loc 1 47 25 view .LVU22
  94 0042 C3ED017A 		vstr.32	s15, [r3, #4]
  48:Core/Src/Main/Interrupt.c **** 
  95              		.loc 1 48 2 is_stmt 1 view .LVU23
  48:Core/Src/Main/Interrupt.c **** 
  96              		.loc 1 48 42 is_stmt 0 view .LVU24
  97 0046 D3ED007A 		vldr.32	s15, [r3]
  48:Core/Src/Main/Interrupt.c **** 
  98              		.loc 1 48 66 view .LVU25
  99 004a 93ED017A 		vldr.32	s14, [r3, #4]
  48:Core/Src/Main/Interrupt.c **** 
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 6


 100              		.loc 1 48 49 view .LVU26
 101 004e 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 102              		.loc 1 48 75 view .LVU27
 103 0052 B6EE007A 		vmov.f32	s14, #5.0e-1
 104 0056 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 105              		.loc 1 48 24 view .LVU28
 106 005a C3ED027A 		vstr.32	s15, [r3, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 107              		.loc 1 51 2 is_stmt 1 view .LVU29
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 108              		.loc 1 51 19 is_stmt 0 view .LVU30
 109 005e A74B     		ldr	r3, .L13+36
 110 0060 1868     		ldr	r0, [r3]
 111 0062 0844     		add	r0, r0, r1
 112 0064 1860     		str	r0, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 113              		.loc 1 52 2 is_stmt 1 view .LVU31
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 114              		.loc 1 52 20 is_stmt 0 view .LVU32
 115 0066 5868     		ldr	r0, [r3, #4]
 116 0068 1044     		add	r0, r0, r2
 117 006a 5860     		str	r0, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 118              		.loc 1 53 2 is_stmt 1 view .LVU33
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 119              		.loc 1 53 31 is_stmt 0 view .LVU34
 120 006c 1868     		ldr	r0, [r3]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 121              		.loc 1 53 48 view .LVU35
 122 006e 5C68     		ldr	r4, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 123              		.loc 1 53 37 view .LVU36
 124 0070 2044     		add	r0, r0, r4
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 125              		.loc 1 53 19 view .LVU37
 126 0072 9860     		str	r0, [r3, #8]
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 127              		.loc 1 54 2 is_stmt 1 view .LVU38
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 128              		.loc 1 54 19 is_stmt 0 view .LVU39
 129 0074 1868     		ldr	r0, [r3]
 130 0076 0144     		add	r1, r1, r0
 131 0078 1960     		str	r1, [r3]
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 132              		.loc 1 55 2 is_stmt 1 view .LVU40
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 133              		.loc 1 55 20 is_stmt 0 view .LVU41
 134 007a 5968     		ldr	r1, [r3, #4]
 135 007c 0A44     		add	r2, r2, r1
 136 007e 5A60     		str	r2, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 137              		.loc 1 56 2 is_stmt 1 view .LVU42
  56:Core/Src/Main/Interrupt.c **** }
 138              		.loc 1 56 31 is_stmt 0 view .LVU43
 139 0080 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 7


  56:Core/Src/Main/Interrupt.c **** }
 140              		.loc 1 56 48 view .LVU44
 141 0082 5968     		ldr	r1, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 142              		.loc 1 56 37 view .LVU45
 143 0084 0A44     		add	r2, r2, r1
  56:Core/Src/Main/Interrupt.c **** }
 144              		.loc 1 56 19 view .LVU46
 145 0086 9A60     		str	r2, [r3, #8]
 146              	.LBE5:
 147              	.LBE4:
 163:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
 164:Core/Src/Main/Interrupt.c **** 	
 165:Core/Src/Main/Interrupt.c **** 	//ÁßªÂãïÈáè mm/ms„ÇíÁ©çÁÆó
 166:Core/Src/Main/Interrupt.c **** 
 167:Core/Src/Main/Interrupt.c **** 
 168:Core/Src/Main/Interrupt.c **** 	//ËßíÈÄüÂ∫¶ rad/s
 169:Core/Src/Main/Interrupt.c **** 
 170:Core/Src/Main/Interrupt.c **** #if 0
 171:Core/Src/Main/Interrupt.c **** 	//static float angle=0;
 172:Core/Src/Main/Interrupt.c **** 	volatile static float zg_last=0;
 173:Core/Src/Main/Interrupt.c **** 	volatile float zg_law;
 174:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 175:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 176:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 177:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 178:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 179:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 180:Core/Src/Main/Interrupt.c **** 
 181:Core/Src/Main/Interrupt.c **** #else
 182:Core/Src/Main/Interrupt.c **** 	Update_IMU(&AngularV, &Angle); //„É°„Éá„Ç£„Ç¢„É≥„Éï„Ç£„É´„Çø„Å®„Ç™„Éï„Çª„ÉÉ„Éà„Å†„Åë„Åß‰Ωï„Å®„Åã„Å
 148              		.loc 1 182 2 is_stmt 1 view .LVU47
 149 0088 9D49     		ldr	r1, .L13+40
 150 008a 9E48     		ldr	r0, .L13+44
 151 008c FFF7FEFF 		bl	Update_IMU
 152              	.LVL0:
 183:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 184:Core/Src/Main/Interrupt.c **** //	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 185:Core/Src/Main/Interrupt.c **** //	Angle += AngularV * T1;
 186:Core/Src/Main/Interrupt.c **** 
 187:Core/Src/Main/Interrupt.c **** #endif
 188:Core/Src/Main/Interrupt.c **** 	int wall_d =0,wall_l =0,wall_r =0, wall_f=0;
 153              		.loc 1 188 2 view .LVU48
 189:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 154              		.loc 1 189 3 view .LVU49
 190:Core/Src/Main/Interrupt.c **** #if 1
 191:Core/Src/Main/Interrupt.c **** 
 192:Core/Src/Main/Interrupt.c **** 	if( Pid[A_VELO_PID].flag == 1 )
 155              		.loc 1 192 2 view .LVU50
 156              		.loc 1 192 21 is_stmt 0 view .LVU51
 157 0090 9D4B     		ldr	r3, .L13+48
 158 0092 9B6A     		ldr	r3, [r3, #40]
 159              		.loc 1 192 4 view .LVU52
 160 0094 012B     		cmp	r3, #1
 161 0096 00F08B80 		beq	.L8
 193:Core/Src/Main/Interrupt.c **** 	{
 194:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 8


 195:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 196:Core/Src/Main/Interrupt.c **** 	}
 197:Core/Src/Main/Interrupt.c **** 	else if( Pid[D_WALL_PID].flag == 1 )
 162              		.loc 1 197 7 is_stmt 1 view .LVU53
 163              		.loc 1 197 26 is_stmt 0 view .LVU54
 164 009a 9B4B     		ldr	r3, .L13+48
 165 009c 5B6D     		ldr	r3, [r3, #84]
 166              		.loc 1 197 9 view .LVU55
 167 009e 012B     		cmp	r3, #1
 168 00a0 00F09780 		beq	.L9
 198:Core/Src/Main/Interrupt.c **** 	{
 199:Core/Src/Main/Interrupt.c **** 		wall_d = PIDControl( D_WALL_PID, Photo[SL], Photo[SIDE_R]+PhotoDiff);
 200:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 201:Core/Src/Main/Interrupt.c **** 	}
 202:Core/Src/Main/Interrupt.c **** 	else if( Pid[L_WALL_PID].flag == 1 )
 169              		.loc 1 202 7 is_stmt 1 view .LVU56
 170              		.loc 1 202 26 is_stmt 0 view .LVU57
 171 00a4 984B     		ldr	r3, .L13+48
 172 00a6 D3F88030 		ldr	r3, [r3, #128]
 173              		.loc 1 202 9 view .LVU58
 174 00aa 012B     		cmp	r3, #1
 175 00ac 00F0B080 		beq	.L10
 203:Core/Src/Main/Interrupt.c **** 	{
 204:Core/Src/Main/Interrupt.c **** 		wall_l = PIDControl( L_WALL_PID,  Photo[SL], TargetPhoto[SL]);
 205:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 206:Core/Src/Main/Interrupt.c **** 	}
 207:Core/Src/Main/Interrupt.c **** 	else if( Pid[R_WALL_PID].flag == 1 )
 176              		.loc 1 207 7 is_stmt 1 view .LVU59
 177              		.loc 1 207 26 is_stmt 0 view .LVU60
 178 00b0 954B     		ldr	r3, .L13+48
 179 00b2 D3F8AC30 		ldr	r3, [r3, #172]
 180              		.loc 1 207 9 view .LVU61
 181 00b6 012B     		cmp	r3, #1
 182 00b8 00F0C580 		beq	.L11
 208:Core/Src/Main/Interrupt.c **** 	{
 209:Core/Src/Main/Interrupt.c **** 		wall_r = PIDControl( R_WALL_PID,  TargetPhoto[SIDE_R], Photo[SIDE_R]);
 210:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 211:Core/Src/Main/Interrupt.c **** 	}
 212:Core/Src/Main/Interrupt.c **** 	else if( Pid[F_WALL_PID].flag == 1)
 183              		.loc 1 212 7 is_stmt 1 view .LVU62
 184              		.loc 1 212 26 is_stmt 0 view .LVU63
 185 00bc 924B     		ldr	r3, .L13+48
 186 00be D3F88831 		ldr	r3, [r3, #392]
 187              		.loc 1 212 9 view .LVU64
 188 00c2 012B     		cmp	r3, #1
 189 00c4 00F0DA80 		beq	.L12
 190              	.LVL1:
 191              	.L3:
 213:Core/Src/Main/Interrupt.c **** 	{
 214:Core/Src/Main/Interrupt.c **** 		wall_f = PIDControl( F_WALL_PID,   3800, (	(Photo[FR]+Photo[FL])));
 215:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 216:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 217:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 218:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 219:Core/Src/Main/Interrupt.c **** 	}
 220:Core/Src/Main/Interrupt.c **** #else
 221:Core/Src/Main/Interrupt.c **** 	switch(Control_Mode)
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 9


 222:Core/Src/Main/Interrupt.c **** 	{
 223:Core/Src/Main/Interrupt.c **** 	case A_VELO_PID:
 224:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( Control_Mode,  TargetAngle, Angle);
 225:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;	//„Å≤„Å®„Åæ„Åö„Åì„ÅÆËæ∫„ÅÆÂÄ§„ÅÆÂæÆË™øÊï¥„ÅØÁΩÆ„ÅÑ„Å¶„Åä„Åè„ÄÇÂà
 226:Core/Src/Main/Interrupt.c **** 		ChangeLED(7);
 227:Core/Src/Main/Interrupt.c **** 		break;
 228:Core/Src/Main/Interrupt.c **** 	case D_WALL_PID:
 229:Core/Src/Main/Interrupt.c **** 		wall_d = PIDControl( Control_Mode, Photo[SL], Photo[SIDE_R]+PhotoDiff);	//Â∑¶„Å´ÂØÑ„Å£„Å¶„Åü„Çâ+‚
 230:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 231:Core/Src/Main/Interrupt.c **** 		ChangeLED(5);
 232:Core/Src/Main/Interrupt.c **** 		break;
 233:Core/Src/Main/Interrupt.c **** 	case L_WALL_PID:
 234:Core/Src/Main/Interrupt.c **** 		wall_l = PIDControl( Control_Mode,  Photo[SL], TargetPhoto[SL]);
 235:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 236:Core/Src/Main/Interrupt.c **** 		ChangeLED(4);
 237:Core/Src/Main/Interrupt.c **** 		break;
 238:Core/Src/Main/Interrupt.c **** 	case R_WALL_PID :
 239:Core/Src/Main/Interrupt.c **** 		wall_r = PIDControl( Control_Mode,  TargetPhoto[SIDE_R], Photo[SIDE_R]);			//Âè≥„Å´ÂØÑ„Å£„Å¶„Åü„Ç
 240:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;//0.002 „Å†„Å®ÈÄü„Åï„ÅØ„Å°„Çá„ÅÜ„Å©„ÅÑ„ÅÑ„Åë„Å©Á¥∞„Åã„Åï„ÅåË
 241:Core/Src/Main/Interrupt.c **** 		ChangeLED(1);
 242:Core/Src/Main/Interrupt.c **** 		break;
 243:Core/Src/Main/Interrupt.c **** 	case F_WALL_PID : //ÂâçÂ£ÅË£úÊ≠£„ÅÆ„Åü„ÇÅ„ÅÆÂà∂Âæ°. „Éü„ÉÉ„ÇØ„Çπ„ÅØ„Çà„Åè„Å™„ÅÑ.
 244:Core/Src/Main/Interrupt.c **** 		wall_f = PIDControl( Control_Mode,   3500, (	(Photo[FR]+Photo[FL])));
 245:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 246:Core/Src/Main/Interrupt.c **** 		ChangeLED(2);
 247:Core/Src/Main/Interrupt.c **** 
 248:Core/Src/Main/Interrupt.c **** 		break;
 249:Core/Src/Main/Interrupt.c **** 	case NOT_CTRL_PID:
 250:Core/Src/Main/Interrupt.c **** 		break;
 251:Core/Src/Main/Interrupt.c **** 	default :
 252:Core/Src/Main/Interrupt.c **** 		break;
 253:Core/Src/Main/Interrupt.c **** 	}
 254:Core/Src/Main/Interrupt.c **** #endif
 255:Core/Src/Main/Interrupt.c **** 	TargetVelocity[BODY] += Acceleration;
 192              		.loc 1 255 2 is_stmt 1 view .LVU65
 193 00c8 904B     		ldr	r3, .L13+52
 194 00ca 93ED007A 		vldr.32	s14, [r3]
 195              		.loc 1 255 23 is_stmt 0 view .LVU66
 196 00ce 904C     		ldr	r4, .L13+56
 197 00d0 D4ED027A 		vldr.32	s15, [r4, #8]
 198 00d4 77EE877A 		vadd.f32	s15, s15, s14
 199 00d8 C4ED027A 		vstr.32	s15, [r4, #8]
 256:Core/Src/Main/Interrupt.c **** 	//AngularAcceleration += AngularLeapsity;
 257:Core/Src/Main/Interrupt.c **** 	TargetAngularV += AngularAcceleration;
 200              		.loc 1 257 2 is_stmt 1 view .LVU67
 201 00dc 8D4B     		ldr	r3, .L13+60
 202 00de 93ED007A 		vldr.32	s14, [r3]
 203              		.loc 1 257 17 is_stmt 0 view .LVU68
 204 00e2 8D4B     		ldr	r3, .L13+64
 205 00e4 D3ED007A 		vldr.32	s15, [r3]
 206 00e8 77EE877A 		vadd.f32	s15, s15, s14
 207 00ec C3ED007A 		vstr.32	s15, [r3]
 258:Core/Src/Main/Interrupt.c **** 	//TargetAngularV += AngularAcceleration;
 259:Core/Src/Main/Interrupt.c **** 	TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 208              		.loc 1 259 2 is_stmt 1 view .LVU69
 209              		.loc 1 259 42 is_stmt 0 view .LVU70
 210 00f0 D4ED026A 		vldr.32	s13, [r4, #8]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 10


 211              		.loc 1 259 66 view .LVU71
 212 00f4 93ED007A 		vldr.32	s14, [r3]
 213 00f8 9FED886A 		vldr.32	s12, .L13+68
 214 00fc 27EE067A 		vmul.f32	s14, s14, s12
 215              		.loc 1 259 80 view .LVU72
 216 0100 F6EE007A 		vmov.f32	s15, #5.0e-1
 217 0104 27EE277A 		vmul.f32	s14, s14, s15
 218              		.loc 1 259 49 view .LVU73
 219 0108 36EEC77A 		vsub.f32	s14, s13, s14
 220              		.loc 1 259 24 view .LVU74
 221 010c 84ED017A 		vstr.32	s14, [r4, #4]
 260:Core/Src/Main/Interrupt.c **** 	TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 222              		.loc 1 260 2 is_stmt 1 view .LVU75
 223              		.loc 1 260 42 is_stmt 0 view .LVU76
 224 0110 D3ED007A 		vldr.32	s15, [r3]
 225 0114 67EE867A 		vmul.f32	s15, s15, s12
 226              		.loc 1 260 73 view .LVU77
 227 0118 94ED017A 		vldr.32	s14, [r4, #4]
 228              		.loc 1 260 57 view .LVU78
 229 011c 77EE877A 		vadd.f32	s15, s15, s14
 230              		.loc 1 260 23 view .LVU79
 231 0120 C4ED007A 		vstr.32	s15, [r4]
 261:Core/Src/Main/Interrupt.c **** 
 262:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 232              		.loc 1 262 2 is_stmt 1 view .LVU80
 233              		.loc 1 262 26 is_stmt 0 view .LVU81
 234 0124 9FED7E1A 		vldr.32	s2, .L13+72
 235 0128 DFED7E0A 		vldr.32	s1, .L13+76
 236 012c B0EE080A 		vmov.f32	s0, #3.0e+0
 237 0130 7D4B     		ldr	r3, .L13+80
 238 0132 9868     		ldr	r0, [r3, #8]
 239 0134 FFF7FEFF 		bl	ADCToBatteryVoltage
 240              	.LVL2:
 241 0138 10EE100A 		vmov	r0, s0
 242              	.LVL3:
 263:Core/Src/Main/Interrupt.c **** 	float voltage_maintainer = BATTERY_MAX/battery_voltage;
 243              		.loc 1 263 2 is_stmt 1 view .LVU82
 244              		.loc 1 263 40 is_stmt 0 view .LVU83
 245 013c FFF7FEFF 		bl	__aeabi_f2d
 246              	.LVL4:
 247              		.loc 1 263 40 view .LVU84
 248 0140 0246     		mov	r2, r0
 249 0142 0B46     		mov	r3, r1
 250 0144 64A1     		adr	r1, .L13
 251 0146 D1E90001 		ldrd	r0, [r1]
 252 014a FFF7FEFF 		bl	__aeabi_ddiv
 253              	.LVL5:
 254              		.loc 1 263 8 view .LVU85
 255 014e FFF7FEFF 		bl	__aeabi_d2f
 256              	.LVL6:
 257 0152 08EE100A 		vmov	s16, r0
 258              	.LVL7:
 264:Core/Src/Main/Interrupt.c **** 	
 265:Core/Src/Main/Interrupt.c **** 	VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVeloci
 259              		.loc 1 265 2 is_stmt 1 view .LVU86
 260              		.loc 1 265 41 is_stmt 0 view .LVU87
 261 0156 94ED000A 		vldr.32	s0, [r4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 11


 262 015a 674E     		ldr	r6, .L13+32
 263 015c D6ED000A 		vldr.32	s1, [r6]
 264 0160 0420     		movs	r0, #4
 265              	.LVL8:
 266              		.loc 1 265 41 view .LVU88
 267 0162 FFF7FEFF 		bl	PIDControl
 268              	.LVL9:
 269 0166 07EE900A 		vmov	s15, r0	@ int
 270              		.loc 1 265 39 view .LVU89
 271 016a F8EEE77A 		vcvt.f32.s32	s15, s15
 272 016e 67EE887A 		vmul.f32	s15, s15, s16
 273              		.loc 1 265 18 view .LVU90
 274 0172 6E4D     		ldr	r5, .L13+84
 275 0174 FDEEE77A 		vcvt.s32.f32	s15, s15
 276 0178 C5ED007A 		vstr.32	s15, [r5]	@ int
 266:Core/Src/Main/Interrupt.c **** 	VelocityRightOut = voltage_maintainer * PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelo
 277              		.loc 1 266 2 is_stmt 1 view .LVU91
 278              		.loc 1 266 42 is_stmt 0 view .LVU92
 279 017c 94ED010A 		vldr.32	s0, [r4, #4]
 280 0180 D6ED010A 		vldr.32	s1, [r6, #4]
 281 0184 0520     		movs	r0, #5
 282 0186 FFF7FEFF 		bl	PIDControl
 283              	.LVL10:
 284 018a 07EE900A 		vmov	s15, r0	@ int
 285              		.loc 1 266 40 view .LVU93
 286 018e F8EEE77A 		vcvt.f32.s32	s15, s15
 287 0192 67EE887A 		vmul.f32	s15, s15, s16
 288              		.loc 1 266 19 view .LVU94
 289 0196 FDEEE77A 		vcvt.s32.f32	s15, s15
 290 019a 17EE901A 		vmov	r1, s15	@ int
 291 019e 644B     		ldr	r3, .L13+88
 292 01a0 C3ED007A 		vstr.32	s15, [r3]	@ int
 267:Core/Src/Main/Interrupt.c **** 	// VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVelocity[LEFT]);
 268:Core/Src/Main/Interrupt.c **** 	// VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelocity[RIGHT]);
 269:Core/Src/Main/Interrupt.c **** 
 270:Core/Src/Main/Interrupt.c **** 	
 271:Core/Src/Main/Interrupt.c **** 	//„É¢„Éº„Çø„Å´Âá∫Âäõ
 272:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 293              		.loc 1 272 2 is_stmt 1 view .LVU95
 294 01a4 2868     		ldr	r0, [r5]
 295 01a6 FFF7FEFF 		bl	Motor_Switch
 296              	.LVL11:
 273:Core/Src/Main/Interrupt.c **** }
 297              		.loc 1 273 1 is_stmt 0 view .LVU96
 298 01aa BDEC028B 		vldm	sp!, {d8}
 299              	.LCFI2:
 300              		.cfi_remember_state
 301              		.cfi_restore 80
 302              		.cfi_restore 81
 303              		.cfi_def_cfa_offset 16
 304              	.LVL12:
 305              		.loc 1 273 1 view .LVU97
 306 01ae 70BD     		pop	{r4, r5, r6, pc}
 307              	.LVL13:
 308              	.L8:
 309              	.LCFI3:
 310              		.cfi_restore_state
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 12


 194:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 311              		.loc 1 194 3 is_stmt 1 view .LVU98
 194:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 312              		.loc 1 194 13 is_stmt 0 view .LVU99
 313 01b0 604B     		ldr	r3, .L13+92
 314 01b2 93ED000A 		vldr.32	s0, [r3]
 315 01b6 524B     		ldr	r3, .L13+40
 316 01b8 D3ED000A 		vldr.32	s1, [r3]
 317 01bc 0020     		movs	r0, #0
 318 01be FFF7FEFF 		bl	PIDControl
 319              	.LVL14:
 320 01c2 07EE900A 		vmov	s15, r0	@ int
 321              	.LVL15:
 195:Core/Src/Main/Interrupt.c **** 	}
 322              		.loc 1 195 3 is_stmt 1 view .LVU100
 195:Core/Src/Main/Interrupt.c **** 	}
 323              		.loc 1 195 20 is_stmt 0 view .LVU101
 324 01c6 F8EEE77A 		vcvt.f32.s32	s15, s15
 195:Core/Src/Main/Interrupt.c **** 	}
 325              		.loc 1 195 18 view .LVU102
 326 01ca 534B     		ldr	r3, .L13+64
 327 01cc C3ED007A 		vstr.32	s15, [r3]
 328 01d0 7AE7     		b	.L3
 329              	.LVL16:
 330              	.L9:
 199:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 331              		.loc 1 199 3 is_stmt 1 view .LVU103
 199:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 332              		.loc 1 199 52 is_stmt 0 view .LVU104
 333 01d2 594B     		ldr	r3, .L13+96
 334 01d4 D3ED010A 		vldr.32	s1, [r3, #4]
 199:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_d*0.001;
 335              		.loc 1 199 12 view .LVU105
 336 01d8 584A     		ldr	r2, .L13+100
 337 01da D2ED007A 		vldr.32	s15, [r2]
 338 01de 70EEA70A 		vadd.f32	s1, s1, s15
 339 01e2 93ED020A 		vldr.32	s0, [r3, #8]
 340 01e6 0120     		movs	r0, #1
 341 01e8 FFF7FEFF 		bl	PIDControl
 342              	.LVL17:
 343 01ec 07EE900A 		vmov	s15, r0	@ int
 344              	.LVL18:
 200:Core/Src/Main/Interrupt.c **** 	}
 345              		.loc 1 200 3 is_stmt 1 view .LVU106
 200:Core/Src/Main/Interrupt.c **** 	}
 346              		.loc 1 200 20 is_stmt 0 view .LVU107
 347 01f0 F8EEE77A 		vcvt.f32.s32	s15, s15
 348 01f4 17EE900A 		vmov	r0, s15
 349              	.LVL19:
 200:Core/Src/Main/Interrupt.c **** 	}
 350              		.loc 1 200 20 view .LVU108
 351 01f8 FFF7FEFF 		bl	__aeabi_f2d
 352              	.LVL20:
 200:Core/Src/Main/Interrupt.c **** 	}
 353              		.loc 1 200 33 view .LVU109
 354 01fc 38A3     		adr	r3, .L13+8
 355 01fe D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 13


 356 0202 FFF7FEFF 		bl	__aeabi_dmul
 357              	.LVL21:
 358 0206 FFF7FEFF 		bl	__aeabi_d2f
 359              	.LVL22:
 200:Core/Src/Main/Interrupt.c **** 	}
 360              		.loc 1 200 18 view .LVU110
 361 020a 434B     		ldr	r3, .L13+64
 362 020c 1860     		str	r0, [r3]	@ float
 363 020e 5BE7     		b	.L3
 364              	.LVL23:
 365              	.L10:
 204:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 366              		.loc 1 204 3 is_stmt 1 view .LVU111
 204:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_l*0.001;
 367              		.loc 1 204 12 is_stmt 0 view .LVU112
 368 0210 4B4B     		ldr	r3, .L13+104
 369 0212 D3ED020A 		vldr.32	s1, [r3, #8]
 370 0216 484B     		ldr	r3, .L13+96
 371 0218 93ED020A 		vldr.32	s0, [r3, #8]
 372 021c 0220     		movs	r0, #2
 373 021e FFF7FEFF 		bl	PIDControl
 374              	.LVL24:
 375 0222 07EE900A 		vmov	s15, r0	@ int
 376              	.LVL25:
 205:Core/Src/Main/Interrupt.c **** 	}
 377              		.loc 1 205 3 is_stmt 1 view .LVU113
 205:Core/Src/Main/Interrupt.c **** 	}
 378              		.loc 1 205 20 is_stmt 0 view .LVU114
 379 0226 F8EEE77A 		vcvt.f32.s32	s15, s15
 380 022a 17EE900A 		vmov	r0, s15
 381              	.LVL26:
 205:Core/Src/Main/Interrupt.c **** 	}
 382              		.loc 1 205 20 view .LVU115
 383 022e FFF7FEFF 		bl	__aeabi_f2d
 384              	.LVL27:
 205:Core/Src/Main/Interrupt.c **** 	}
 385              		.loc 1 205 33 view .LVU116
 386 0232 2BA3     		adr	r3, .L13+8
 387 0234 D3E90023 		ldrd	r2, [r3]
 388 0238 FFF7FEFF 		bl	__aeabi_dmul
 389              	.LVL28:
 390 023c FFF7FEFF 		bl	__aeabi_d2f
 391              	.LVL29:
 205:Core/Src/Main/Interrupt.c **** 	}
 392              		.loc 1 205 18 view .LVU117
 393 0240 354B     		ldr	r3, .L13+64
 394 0242 1860     		str	r0, [r3]	@ float
 395 0244 40E7     		b	.L3
 396              	.LVL30:
 397              	.L11:
 209:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 398              		.loc 1 209 3 is_stmt 1 view .LVU118
 209:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)wall_r*0.001;
 399              		.loc 1 209 12 is_stmt 0 view .LVU119
 400 0246 3E4B     		ldr	r3, .L13+104
 401 0248 93ED010A 		vldr.32	s0, [r3, #4]
 402 024c 3A4B     		ldr	r3, .L13+96
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 14


 403 024e D3ED010A 		vldr.32	s1, [r3, #4]
 404 0252 0320     		movs	r0, #3
 405 0254 FFF7FEFF 		bl	PIDControl
 406              	.LVL31:
 407 0258 07EE900A 		vmov	s15, r0	@ int
 408              	.LVL32:
 210:Core/Src/Main/Interrupt.c **** 	}
 409              		.loc 1 210 3 is_stmt 1 view .LVU120
 210:Core/Src/Main/Interrupt.c **** 	}
 410              		.loc 1 210 20 is_stmt 0 view .LVU121
 411 025c F8EEE77A 		vcvt.f32.s32	s15, s15
 412 0260 17EE900A 		vmov	r0, s15
 413              	.LVL33:
 210:Core/Src/Main/Interrupt.c **** 	}
 414              		.loc 1 210 20 view .LVU122
 415 0264 FFF7FEFF 		bl	__aeabi_f2d
 416              	.LVL34:
 210:Core/Src/Main/Interrupt.c **** 	}
 417              		.loc 1 210 33 view .LVU123
 418 0268 1DA3     		adr	r3, .L13+8
 419 026a D3E90023 		ldrd	r2, [r3]
 420 026e FFF7FEFF 		bl	__aeabi_dmul
 421              	.LVL35:
 422 0272 FFF7FEFF 		bl	__aeabi_d2f
 423              	.LVL36:
 210:Core/Src/Main/Interrupt.c **** 	}
 424              		.loc 1 210 18 view .LVU124
 425 0276 284B     		ldr	r3, .L13+64
 426 0278 1860     		str	r0, [r3]	@ float
 427 027a 25E7     		b	.L3
 428              	.LVL37:
 429              	.L12:
 214:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 430              		.loc 1 214 3 is_stmt 1 view .LVU125
 214:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 431              		.loc 1 214 52 is_stmt 0 view .LVU126
 432 027c 2E4B     		ldr	r3, .L13+96
 433 027e D3ED030A 		vldr.32	s1, [r3, #12]
 214:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 434              		.loc 1 214 62 view .LVU127
 435 0282 D3ED007A 		vldr.32	s15, [r3]
 214:Core/Src/Main/Interrupt.c **** 		TargetVelocity[BODY] = (float)wall_f*0.001;
 436              		.loc 1 214 12 view .LVU128
 437 0286 70EEA70A 		vadd.f32	s1, s1, s15
 438 028a 9FED2E0A 		vldr.32	s0, .L13+108
 439 028e 0820     		movs	r0, #8
 440 0290 FFF7FEFF 		bl	PIDControl
 441              	.LVL38:
 442 0294 07EE900A 		vmov	s15, r0	@ int
 443              	.LVL39:
 215:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 444              		.loc 1 215 3 is_stmt 1 view .LVU129
 215:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 445              		.loc 1 215 26 is_stmt 0 view .LVU130
 446 0298 F8EEE77A 		vcvt.f32.s32	s15, s15
 447 029c 17EE900A 		vmov	r0, s15
 448              	.LVL40:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 15


 215:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 449              		.loc 1 215 26 view .LVU131
 450 02a0 FFF7FEFF 		bl	__aeabi_f2d
 451              	.LVL41:
 215:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 452              		.loc 1 215 39 view .LVU132
 453 02a4 0EA3     		adr	r3, .L13+8
 454 02a6 D3E90023 		ldrd	r2, [r3]
 455 02aa FFF7FEFF 		bl	__aeabi_dmul
 456              	.LVL42:
 457 02ae FFF7FEFF 		bl	__aeabi_d2f
 458              	.LVL43:
 215:Core/Src/Main/Interrupt.c **** 		ang_out = PIDControl( A_VELO_PID,  TargetAngle, Angle);
 459              		.loc 1 215 24 view .LVU133
 460 02b2 174B     		ldr	r3, .L13+56
 461 02b4 9860     		str	r0, [r3, #8]	@ float
 216:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 462              		.loc 1 216 3 is_stmt 1 view .LVU134
 216:Core/Src/Main/Interrupt.c **** 		TargetAngularV = (float)ang_out;
 463              		.loc 1 216 13 is_stmt 0 view .LVU135
 464 02b6 1F4B     		ldr	r3, .L13+92
 465 02b8 93ED000A 		vldr.32	s0, [r3]
 466 02bc 104B     		ldr	r3, .L13+40
 467 02be D3ED000A 		vldr.32	s1, [r3]
 468 02c2 0020     		movs	r0, #0
 469 02c4 FFF7FEFF 		bl	PIDControl
 470              	.LVL44:
 471 02c8 07EE900A 		vmov	s15, r0	@ int
 472              	.LVL45:
 217:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 473              		.loc 1 217 3 is_stmt 1 view .LVU136
 217:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 474              		.loc 1 217 20 is_stmt 0 view .LVU137
 475 02cc F8EEE77A 		vcvt.f32.s32	s15, s15
 217:Core/Src/Main/Interrupt.c **** 		//TargetVelocity[BODY] = 0.1*PIDControl( FD_WALL_PID,   Photo[FR]+Photo[FL],4000);
 476              		.loc 1 217 18 view .LVU138
 477 02d0 114B     		ldr	r3, .L13+64
 478 02d2 C3ED007A 		vstr.32	s15, [r3]
 479 02d6 F7E6     		b	.L3
 480              	.L14:
 481              		.align	3
 482              	.L13:
 483 02d8 CDCCCCCC 		.word	-858993459
 484 02dc CCCC2040 		.word	1075891404
 485 02e0 FCA9F1D2 		.word	-755914244
 486 02e4 4D62503F 		.word	1062232653
 487 02e8 00040040 		.word	1073742848
 488 02ec 00000000 		.word	PulseDisplacement
 489 02f0 00080040 		.word	1073743872
 490 02f4 CD77813F 		.word	1065449421
 491 02f8 00000000 		.word	CurrentVelocity
 492 02fc 00000000 		.word	TotalPulse
 493 0300 00000000 		.word	Angle
 494 0304 00000000 		.word	AngularV
 495 0308 00000000 		.word	Pid
 496 030c 00000000 		.word	Acceleration
 497 0310 00000000 		.word	TargetVelocity
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 16


 498 0314 00000000 		.word	AngularAcceleration
 499 0318 00000000 		.word	TargetAngularV
 500 031c 9A990942 		.word	1107925402
 501 0320 00008045 		.word	1166016512
 502 0324 33335340 		.word	1079194419
 503 0328 00000000 		.word	adc1
 504 032c 00000000 		.word	VelocityLeftOut
 505 0330 00000000 		.word	VelocityRightOut
 506 0334 00000000 		.word	TargetAngle
 507 0338 00000000 		.word	Photo
 508 033c 00000000 		.word	PhotoDiff
 509 0340 00000000 		.word	TargetPhoto
 510 0344 00806D45 		.word	1164804096
 511              		.cfi_endproc
 512              	.LFE241:
 514              		.section	.text.ControlTest_IT,"ax",%progbits
 515              		.align	1
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 520              	ControlTest_IT:
 521              	.LFB240:
  95:Core/Src/Main/Interrupt.c **** 
 522              		.loc 1 95 29 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 527              	.LCFI4:
 528              		.cfi_def_cfa_offset 24
 529              		.cfi_offset 3, -24
 530              		.cfi_offset 4, -20
 531              		.cfi_offset 5, -16
 532              		.cfi_offset 6, -12
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
  97:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, CurrentVelocity[BODY]);
 535              		.loc 1 97 2 view .LVU140
 536              	.LBB8:
 537              	.LBI8:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 538              		.loc 1 39 13 view .LVU141
 539              	.LBB9:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 540              		.loc 1 40 2 view .LVU142
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 541              		.loc 1 40 35 is_stmt 0 view .LVU143
 542 0002 4A4A     		ldr	r2, .L17
 543 0004 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 544              		.loc 1 40 28 view .LVU144
 545 0006 47F22F53 		movw	r3, #29999
 546 000a 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 547              		.loc 1 40 26 view .LVU145
 548 000c 484C     		ldr	r4, .L17+4
 549 000e 2160     		str	r1, [r4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 17


  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 550              		.loc 1 41 2 is_stmt 1 view .LVU146
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 551              		.loc 1 41 12 is_stmt 0 view .LVU147
 552 0010 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 553              		.loc 1 42 2 is_stmt 1 view .LVU148
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 554              		.loc 1 42 36 is_stmt 0 view .LVU149
 555 0012 4848     		ldr	r0, .L17+8
 556 0014 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 557              		.loc 1 42 29 view .LVU150
 558 0016 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 559              		.loc 1 42 27 view .LVU151
 560 0018 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 561              		.loc 1 43 2 is_stmt 1 view .LVU152
  43:Core/Src/Main/Interrupt.c **** 
 562              		.loc 1 43 12 is_stmt 0 view .LVU153
 563 001a 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 564              		.loc 1 46 2 is_stmt 1 view .LVU154
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 565              		.loc 1 46 27 is_stmt 0 view .LVU155
 566 001c 07EE901A 		vmov	s15, r1	@ int
 567 0020 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 568              		.loc 1 46 58 view .LVU156
 569 0024 DFED446A 		vldr.32	s13, .L17+12
 570 0028 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 571              		.loc 1 46 24 view .LVU157
 572 002c 434C     		ldr	r4, .L17+16
 573 002e 84ED007A 		vstr.32	s14, [r4]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 574              		.loc 1 47 2 is_stmt 1 view .LVU158
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 575              		.loc 1 47 28 is_stmt 0 view .LVU159
 576 0032 07EE902A 		vmov	s15, r2	@ int
 577 0036 F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 578              		.loc 1 47 60 view .LVU160
 579 003a 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 580              		.loc 1 47 25 view .LVU161
 581 003e C4ED017A 		vstr.32	s15, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 582              		.loc 1 48 2 is_stmt 1 view .LVU162
  48:Core/Src/Main/Interrupt.c **** 
 583              		.loc 1 48 42 is_stmt 0 view .LVU163
 584 0042 D4ED007A 		vldr.32	s15, [r4]
  48:Core/Src/Main/Interrupt.c **** 
 585              		.loc 1 48 66 view .LVU164
 586 0046 94ED017A 		vldr.32	s14, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 18


 587              		.loc 1 48 49 view .LVU165
 588 004a 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 589              		.loc 1 48 75 view .LVU166
 590 004e B6EE007A 		vmov.f32	s14, #5.0e-1
 591 0052 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 592              		.loc 1 48 24 view .LVU167
 593 0056 C4ED027A 		vstr.32	s15, [r4, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 594              		.loc 1 51 2 is_stmt 1 view .LVU168
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 595              		.loc 1 51 19 is_stmt 0 view .LVU169
 596 005a 394B     		ldr	r3, .L17+20
 597 005c 1868     		ldr	r0, [r3]
 598 005e 0844     		add	r0, r0, r1
 599 0060 1860     		str	r0, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 600              		.loc 1 52 2 is_stmt 1 view .LVU170
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 601              		.loc 1 52 20 is_stmt 0 view .LVU171
 602 0062 5868     		ldr	r0, [r3, #4]
 603 0064 1044     		add	r0, r0, r2
 604 0066 5860     		str	r0, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 605              		.loc 1 53 2 is_stmt 1 view .LVU172
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 606              		.loc 1 53 31 is_stmt 0 view .LVU173
 607 0068 1868     		ldr	r0, [r3]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 608              		.loc 1 53 48 view .LVU174
 609 006a 5D68     		ldr	r5, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 610              		.loc 1 53 37 view .LVU175
 611 006c 2844     		add	r0, r0, r5
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 612              		.loc 1 53 19 view .LVU176
 613 006e 9860     		str	r0, [r3, #8]
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 614              		.loc 1 54 2 is_stmt 1 view .LVU177
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 615              		.loc 1 54 19 is_stmt 0 view .LVU178
 616 0070 1868     		ldr	r0, [r3]
 617 0072 0144     		add	r1, r1, r0
 618 0074 1960     		str	r1, [r3]
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 619              		.loc 1 55 2 is_stmt 1 view .LVU179
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 620              		.loc 1 55 20 is_stmt 0 view .LVU180
 621 0076 5968     		ldr	r1, [r3, #4]
 622 0078 0A44     		add	r2, r2, r1
 623 007a 5A60     		str	r2, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 624              		.loc 1 56 2 is_stmt 1 view .LVU181
  56:Core/Src/Main/Interrupt.c **** }
 625              		.loc 1 56 31 is_stmt 0 view .LVU182
 626 007c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 19


  56:Core/Src/Main/Interrupt.c **** }
 627              		.loc 1 56 48 view .LVU183
 628 007e 5968     		ldr	r1, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 629              		.loc 1 56 37 view .LVU184
 630 0080 0A44     		add	r2, r2, r1
  56:Core/Src/Main/Interrupt.c **** }
 631              		.loc 1 56 19 view .LVU185
 632 0082 9A60     		str	r2, [r3, #8]
 633              	.LBE9:
 634              	.LBE8:
 115:Core/Src/Main/Interrupt.c **** 	// getFloatLog(&log_velocity, AngularV);
 635              		.loc 1 115 2 is_stmt 1 view .LVU186
 636 0084 2F4D     		ldr	r5, .L17+24
 637 0086 3049     		ldr	r1, .L17+28
 638 0088 2846     		mov	r0, r5
 639 008a FFF7FEFF 		bl	Update_IMU
 640              	.LVL46:
 121:Core/Src/Main/Interrupt.c **** 		int ang_out=0;
 641              		.loc 1 121 2 view .LVU187
 122:Core/Src/Main/Interrupt.c **** 
 642              		.loc 1 122 3 view .LVU188
 129:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 643              		.loc 1 129 3 view .LVU189
 129:Core/Src/Main/Interrupt.c **** 		// TargetAngularV = (float)ang_out;
 644              		.loc 1 129 13 is_stmt 0 view .LVU190
 645 008e 2F4B     		ldr	r3, .L17+32
 646 0090 93ED000A 		vldr.32	s0, [r3]
 647 0094 D5ED000A 		vldr.32	s1, [r5]
 648 0098 0020     		movs	r0, #0
 649 009a FFF7FEFF 		bl	PIDControl
 650              	.LVL47:
 651 009e 0546     		mov	r5, r0
 652              	.LVL48:
 147:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 653              		.loc 1 147 3 is_stmt 1 view .LVU191
 147:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 654              		.loc 1 147 21 is_stmt 0 view .LVU192
 655 00a0 2B4F     		ldr	r7, .L17+36
 656 00a2 97ED020A 		vldr.32	s0, [r7, #8]
 657 00a6 D4ED000A 		vldr.32	s1, [r4]
 658 00aa 0420     		movs	r0, #4
 659              	.LVL49:
 147:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 660              		.loc 1 147 21 view .LVU193
 661 00ac FFF7FEFF 		bl	PIDControl
 662              	.LVL50:
 147:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[BODY], CurrentVelocity[RIGHT]);
 663              		.loc 1 147 19 view .LVU194
 664 00b0 284E     		ldr	r6, .L17+40
 665 00b2 3060     		str	r0, [r6]
 148:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 666              		.loc 1 148 3 is_stmt 1 view .LVU195
 148:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 667              		.loc 1 148 22 is_stmt 0 view .LVU196
 668 00b4 97ED020A 		vldr.32	s0, [r7, #8]
 669 00b8 D4ED010A 		vldr.32	s1, [r4, #4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 20


 670 00bc 0520     		movs	r0, #5
 671 00be FFF7FEFF 		bl	PIDControl
 672              	.LVL51:
 148:Core/Src/Main/Interrupt.c **** 		float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 673              		.loc 1 148 20 view .LVU197
 674 00c2 254C     		ldr	r4, .L17+44
 675 00c4 2060     		str	r0, [r4]
 149:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 676              		.loc 1 149 3 is_stmt 1 view .LVU198
 149:Core/Src/Main/Interrupt.c **** 		float duty = 1/ battery_voltage;
 677              		.loc 1 149 27 is_stmt 0 view .LVU199
 678 00c6 9FED251A 		vldr.32	s2, .L17+48
 679 00ca DFED250A 		vldr.32	s1, .L17+52
 680 00ce B0EE080A 		vmov.f32	s0, #3.0e+0
 681 00d2 244B     		ldr	r3, .L17+56
 682 00d4 9868     		ldr	r0, [r3, #8]
 683 00d6 FFF7FEFF 		bl	ADCToBatteryVoltage
 684              	.LVL52:
 150:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 685              		.loc 1 150 3 is_stmt 1 view .LVU200
 150:Core/Src/Main/Interrupt.c **** 		// VelocityLeftOut = voltage_maintainer * PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVe
 686              		.loc 1 150 9 is_stmt 0 view .LVU201
 687 00da F7EE007A 		vmov.f32	s15, #1.0e+0
 688 00de 87EE807A 		vdiv.f32	s14, s15, s0
 689              	.LVL53:
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 690              		.loc 1 153 3 is_stmt 1 view .LVU202
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 691              		.loc 1 153 46 is_stmt 0 view .LVU203
 692 00e2 3368     		ldr	r3, [r6]
 693 00e4 EB18     		adds	r3, r5, r3
 694 00e6 07EE903A 		vmov	s15, r3	@ int
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 695              		.loc 1 153 22 view .LVU204
 696 00ea F8EEE77A 		vcvt.f32.s32	s15, s15
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 697              		.loc 1 153 58 view .LVU205
 698 00ee DFED1E6A 		vldr.32	s13, .L17+60
 699 00f2 67EEA67A 		vmul.f32	s15, s15, s13
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 700              		.loc 1 153 64 view .LVU206
 701 00f6 67EE877A 		vmul.f32	s15, s15, s14
 153:Core/Src/Main/Interrupt.c **** 		VelocityRightOut = ((float)(VelocityRightOut+ (ang_out* (-1)) ))* 840 * duty;
 702              		.loc 1 153 19 view .LVU207
 703 00fa FDEEE77A 		vcvt.s32.f32	s15, s15
 704 00fe 17EE900A 		vmov	r0, s15	@ int
 705 0102 C6ED007A 		vstr.32	s15, [r6]	@ int
 154:Core/Src/Main/Interrupt.c **** 
 706              		.loc 1 154 3 is_stmt 1 view .LVU208
 154:Core/Src/Main/Interrupt.c **** 
 707              		.loc 1 154 47 is_stmt 0 view .LVU209
 708 0106 2368     		ldr	r3, [r4]
 709 0108 5B1B     		subs	r3, r3, r5
 710 010a 07EE903A 		vmov	s15, r3	@ int
 154:Core/Src/Main/Interrupt.c **** 
 711              		.loc 1 154 23 view .LVU210
 712 010e F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 21


 154:Core/Src/Main/Interrupt.c **** 
 713              		.loc 1 154 67 view .LVU211
 714 0112 67EEA67A 		vmul.f32	s15, s15, s13
 154:Core/Src/Main/Interrupt.c **** 
 715              		.loc 1 154 73 view .LVU212
 716 0116 67EE877A 		vmul.f32	s15, s15, s14
 154:Core/Src/Main/Interrupt.c **** 
 717              		.loc 1 154 20 view .LVU213
 718 011a FDEEE77A 		vcvt.s32.f32	s15, s15
 719 011e 17EE901A 		vmov	r1, s15	@ int
 720 0122 C4ED007A 		vstr.32	s15, [r4]	@ int
 158:Core/Src/Main/Interrupt.c **** }
 721              		.loc 1 158 2 is_stmt 1 view .LVU214
 722 0126 FFF7FEFF 		bl	Motor_Switch
 723              	.LVL54:
 159:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 724              		.loc 1 159 1 is_stmt 0 view .LVU215
 725 012a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 726              	.LVL55:
 727              	.L18:
 159:Core/Src/Main/Interrupt.c **** static void Explore_IT()
 728              		.loc 1 159 1 view .LVU216
 729              		.align	2
 730              	.L17:
 731 012c 00040040 		.word	1073742848
 732 0130 00000000 		.word	PulseDisplacement
 733 0134 00080040 		.word	1073743872
 734 0138 CD77813F 		.word	1065449421
 735 013c 00000000 		.word	CurrentVelocity
 736 0140 00000000 		.word	TotalPulse
 737 0144 00000000 		.word	AngularV
 738 0148 00000000 		.word	Angle
 739 014c 00000000 		.word	TargetAngularV
 740 0150 00000000 		.word	TargetVelocity
 741 0154 00000000 		.word	VelocityLeftOut
 742 0158 00000000 		.word	VelocityRightOut
 743 015c 00008045 		.word	1166016512
 744 0160 33335340 		.word	1079194419
 745 0164 00000000 		.word	adc1
 746 0168 00005244 		.word	1146224640
 747              		.cfi_endproc
 748              	.LFE240:
 750              		.section	.text.SystemIdentify_IT,"ax",%progbits
 751              		.align	1
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	SystemIdentify_IT:
 757              	.LFB239:
  59:Core/Src/Main/Interrupt.c **** 	
 758              		.loc 1 59 32 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 16
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 30B5     		push	{r4, r5, lr}
 763              	.LCFI5:
 764              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 22


 765              		.cfi_offset 4, -12
 766              		.cfi_offset 5, -8
 767              		.cfi_offset 14, -4
 768 0002 2DED028B 		vpush.64	{d8}
 769              	.LCFI6:
 770              		.cfi_def_cfa_offset 20
 771              		.cfi_offset 80, -20
 772              		.cfi_offset 81, -16
 773 0006 85B0     		sub	sp, sp, #20
 774              	.LCFI7:
 775              		.cfi_def_cfa_offset 40
  61:Core/Src/Main/Interrupt.c **** 
 776              		.loc 1 61 2 view .LVU218
 777              	.LBB12:
 778              	.LBI12:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 779              		.loc 1 39 13 view .LVU219
 780              	.LBB13:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 781              		.loc 1 40 2 view .LVU220
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 782              		.loc 1 40 35 is_stmt 0 view .LVU221
 783 0008 5C4A     		ldr	r2, .L27
 784 000a 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 785              		.loc 1 40 28 view .LVU222
 786 000c 47F22F53 		movw	r3, #29999
 787 0010 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 788              		.loc 1 40 26 view .LVU223
 789 0012 5B4C     		ldr	r4, .L27+4
 790 0014 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 791              		.loc 1 41 2 is_stmt 1 view .LVU224
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 792              		.loc 1 41 12 is_stmt 0 view .LVU225
 793 0016 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 794              		.loc 1 42 2 is_stmt 1 view .LVU226
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 795              		.loc 1 42 36 is_stmt 0 view .LVU227
 796 0018 5A48     		ldr	r0, .L27+8
 797 001a 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 798              		.loc 1 42 29 view .LVU228
 799 001c 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 800              		.loc 1 42 27 view .LVU229
 801 001e 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 802              		.loc 1 43 2 is_stmt 1 view .LVU230
  43:Core/Src/Main/Interrupt.c **** 
 803              		.loc 1 43 12 is_stmt 0 view .LVU231
 804 0020 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 805              		.loc 1 46 2 is_stmt 1 view .LVU232
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 23


 806              		.loc 1 46 27 is_stmt 0 view .LVU233
 807 0022 07EE901A 		vmov	s15, r1	@ int
 808 0026 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 809              		.loc 1 46 58 view .LVU234
 810 002a DFED576A 		vldr.32	s13, .L27+12
 811 002e 27EE267A 		vmul.f32	s14, s14, s13
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 812              		.loc 1 46 24 view .LVU235
 813 0032 564C     		ldr	r4, .L27+16
 814 0034 84ED007A 		vstr.32	s14, [r4]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 815              		.loc 1 47 2 is_stmt 1 view .LVU236
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 816              		.loc 1 47 28 is_stmt 0 view .LVU237
 817 0038 07EE902A 		vmov	s15, r2	@ int
 818 003c F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 819              		.loc 1 47 60 view .LVU238
 820 0040 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 821              		.loc 1 47 25 view .LVU239
 822 0044 C4ED017A 		vstr.32	s15, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 823              		.loc 1 48 2 is_stmt 1 view .LVU240
  48:Core/Src/Main/Interrupt.c **** 
 824              		.loc 1 48 42 is_stmt 0 view .LVU241
 825 0048 D4ED007A 		vldr.32	s15, [r4]
  48:Core/Src/Main/Interrupt.c **** 
 826              		.loc 1 48 66 view .LVU242
 827 004c 94ED017A 		vldr.32	s14, [r4, #4]
  48:Core/Src/Main/Interrupt.c **** 
 828              		.loc 1 48 49 view .LVU243
 829 0050 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 830              		.loc 1 48 75 view .LVU244
 831 0054 B6EE007A 		vmov.f32	s14, #5.0e-1
 832 0058 67EE877A 		vmul.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 833              		.loc 1 48 24 view .LVU245
 834 005c C4ED027A 		vstr.32	s15, [r4, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 835              		.loc 1 51 2 is_stmt 1 view .LVU246
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 836              		.loc 1 51 19 is_stmt 0 view .LVU247
 837 0060 4B4B     		ldr	r3, .L27+20
 838 0062 1868     		ldr	r0, [r3]
 839 0064 0844     		add	r0, r0, r1
 840 0066 1860     		str	r0, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 841              		.loc 1 52 2 is_stmt 1 view .LVU248
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 842              		.loc 1 52 20 is_stmt 0 view .LVU249
 843 0068 5868     		ldr	r0, [r3, #4]
 844 006a 1044     		add	r0, r0, r2
 845 006c 5860     		str	r0, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 24


 846              		.loc 1 53 2 is_stmt 1 view .LVU250
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 847              		.loc 1 53 31 is_stmt 0 view .LVU251
 848 006e 1868     		ldr	r0, [r3]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 849              		.loc 1 53 48 view .LVU252
 850 0070 5D68     		ldr	r5, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 851              		.loc 1 53 37 view .LVU253
 852 0072 2844     		add	r0, r0, r5
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 853              		.loc 1 53 19 view .LVU254
 854 0074 9860     		str	r0, [r3, #8]
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 855              		.loc 1 54 2 is_stmt 1 view .LVU255
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 856              		.loc 1 54 19 is_stmt 0 view .LVU256
 857 0076 1868     		ldr	r0, [r3]
 858 0078 0144     		add	r1, r1, r0
 859 007a 1960     		str	r1, [r3]
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 860              		.loc 1 55 2 is_stmt 1 view .LVU257
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 861              		.loc 1 55 20 is_stmt 0 view .LVU258
 862 007c 5968     		ldr	r1, [r3, #4]
 863 007e 0A44     		add	r2, r2, r1
 864 0080 5A60     		str	r2, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 865              		.loc 1 56 2 is_stmt 1 view .LVU259
  56:Core/Src/Main/Interrupt.c **** }
 866              		.loc 1 56 31 is_stmt 0 view .LVU260
 867 0082 1A68     		ldr	r2, [r3]
  56:Core/Src/Main/Interrupt.c **** }
 868              		.loc 1 56 48 view .LVU261
 869 0084 5968     		ldr	r1, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 870              		.loc 1 56 37 view .LVU262
 871 0086 0A44     		add	r2, r2, r1
  56:Core/Src/Main/Interrupt.c **** }
 872              		.loc 1 56 19 view .LVU263
 873 0088 9A60     		str	r2, [r3, #8]
 874              	.LBE13:
 875              	.LBE12:
  63:Core/Src/Main/Interrupt.c **** 
 876              		.loc 1 63 2 is_stmt 1 view .LVU264
 877 008a 424D     		ldr	r5, .L27+24
 878 008c 4249     		ldr	r1, .L27+28
 879 008e 2846     		mov	r0, r5
 880 0090 FFF7FEFF 		bl	Update_IMU
 881              	.LVL56:
  65:Core/Src/Main/Interrupt.c **** 	static int count=0;
 882              		.loc 1 65 2 view .LVU265
  66:Core/Src/Main/Interrupt.c **** 	float output[2] ={
 883              		.loc 1 66 2 view .LVU266
  67:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
 884              		.loc 1 67 2 view .LVU267
  68:Core/Src/Main/Interrupt.c **** 		AngularV
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 25


 885              		.loc 1 68 18 is_stmt 0 view .LVU268
 886 0094 A368     		ldr	r3, [r4, #8]	@ float
  67:Core/Src/Main/Interrupt.c **** 		CurrentVelocity[BODY],
 887              		.loc 1 67 8 view .LVU269
 888 0096 0293     		str	r3, [sp, #8]	@ float
 889 0098 2B68     		ldr	r3, [r5]	@ float
 890 009a 0393     		str	r3, [sp, #12]	@ float
  71:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
 891              		.loc 1 71 2 is_stmt 1 view .LVU270
  71:Core/Src/Main/Interrupt.c **** 	_Bool identify_mode_v_or_angv = getIdentifyMode();
 892              		.loc 1 71 8 is_stmt 0 view .LVU271
 893 009c 0023     		movs	r3, #0
 894 009e 0093     		str	r3, [sp]
 895 00a0 0193     		str	r3, [sp, #4]
  72:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 896              		.loc 1 72 2 is_stmt 1 view .LVU272
  72:Core/Src/Main/Interrupt.c **** 	float battery_voltage = ADCToBatteryVoltage( adc1[2], V_SPLIT_NUM, PIN_V_MAX ,ADC_RESOLUTION );
 897              		.loc 1 72 34 is_stmt 0 view .LVU273
 898 00a2 FFF7FEFF 		bl	getIdentifyMode
 899              	.LVL57:
 900 00a6 0446     		mov	r4, r0
 901              	.LVL58:
  73:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
 902              		.loc 1 73 2 is_stmt 1 view .LVU274
  73:Core/Src/Main/Interrupt.c **** 	float convert_to_reg_counter = 840/battery_voltage;;
 903              		.loc 1 73 26 is_stmt 0 view .LVU275
 904 00a8 9FED3C1A 		vldr.32	s2, .L27+32
 905 00ac DFED3C0A 		vldr.32	s1, .L27+36
 906 00b0 B0EE080A 		vmov.f32	s0, #3.0e+0
 907 00b4 3B4B     		ldr	r3, .L27+40
 908 00b6 9868     		ldr	r0, [r3, #8]
 909 00b8 FFF7FEFF 		bl	ADCToBatteryVoltage
 910              	.LVL59:
  74:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 911              		.loc 1 74 2 is_stmt 1 view .LVU276
  74:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 912              		.loc 1 74 8 is_stmt 0 view .LVU277
 913 00bc DFED3A7A 		vldr.32	s15, .L27+44
 914 00c0 87EE808A 		vdiv.f32	s16, s15, s0
 915              	.LVL60:
  74:Core/Src/Main/Interrupt.c **** 	if(getLoggerFlag(&(identify[identify_mode_v_or_angv].f)) == true){
 916              		.loc 1 74 53 is_stmt 1 view .LVU278
  75:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 917              		.loc 1 75 2 view .LVU279
  75:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 918              		.loc 1 75 5 is_stmt 0 view .LVU280
 919 00c4 3948     		ldr	r0, .L27+48
 920 00c6 00EB0410 		add	r0, r0, r4, lsl #4
 921 00ca FFF7FEFF 		bl	getLoggerFlag
 922              	.LVL61:
  75:Core/Src/Main/Interrupt.c **** 		if( (count%20) == 0 ){
 923              		.loc 1 75 4 view .LVU281
 924 00ce 0028     		cmp	r0, #0
 925 00d0 4CD0     		beq	.L20
  76:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
 926              		.loc 1 76 3 is_stmt 1 view .LVU282
  76:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 26


 927              		.loc 1 76 13 is_stmt 0 view .LVU283
 928 00d2 374B     		ldr	r3, .L27+52
 929 00d4 1A68     		ldr	r2, [r3]
 930 00d6 3749     		ldr	r1, .L27+56
 931 00d8 81FB0231 		smull	r3, r1, r1, r2
 932 00dc D317     		asrs	r3, r2, #31
 933 00de C3EBE103 		rsb	r3, r3, r1, asr #3
 934 00e2 03EB8303 		add	r3, r3, r3, lsl #2
  76:Core/Src/Main/Interrupt.c **** 			getFloatLog(&identify[identify_mode_v_or_angv], output[identify_mode_v_or_angv]);
 935              		.loc 1 76 5 view .LVU284
 936 00e6 B2EB830F 		cmp	r2, r3, lsl #2
 937 00ea 14D0     		beq	.L25
 938              	.L21:
  79:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 939              		.loc 1 79 3 is_stmt 1 view .LVU285
  79:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 940              		.loc 1 79 13 is_stmt 0 view .LVU286
 941 00ec 304B     		ldr	r3, .L27+52
 942 00ee 1A68     		ldr	r2, [r3]
 943 00f0 3049     		ldr	r1, .L27+56
 944 00f2 81FB0231 		smull	r3, r1, r1, r2
 945 00f6 D317     		asrs	r3, r2, #31
 946 00f8 C3EB2113 		rsb	r3, r3, r1, asr #4
 947 00fc 03EB8303 		add	r3, r3, r3, lsl #2
  79:Core/Src/Main/Interrupt.c **** 			getIdentifyInputCount(identify_count, &input[0] ,identify_mode_v_or_angv);
 948              		.loc 1 79 5 view .LVU287
 949 0100 B2EBC30F 		cmp	r2, r3, lsl #3
 950 0104 12D0     		beq	.L26
 951              	.LVL62:
 952              	.L22:
  87:Core/Src/Main/Interrupt.c **** 	}
 953              		.loc 1 87 3 is_stmt 1 view .LVU288
  87:Core/Src/Main/Interrupt.c **** 	}
 954              		.loc 1 87 8 is_stmt 0 view .LVU289
 955 0106 2A4A     		ldr	r2, .L27+52
 956 0108 1368     		ldr	r3, [r2]
 957 010a 0133     		adds	r3, r3, #1
 958 010c 1360     		str	r3, [r2]
 959              	.L19:
  94:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
 960              		.loc 1 94 1 view .LVU290
 961 010e 05B0     		add	sp, sp, #20
 962              	.LCFI8:
 963              		.cfi_remember_state
 964              		.cfi_def_cfa_offset 20
 965              		@ sp needed
 966 0110 BDEC028B 		vldm	sp!, {d8}
 967              	.LCFI9:
 968              		.cfi_restore 80
 969              		.cfi_restore 81
 970              		.cfi_def_cfa_offset 12
 971 0114 30BD     		pop	{r4, r5, pc}
 972              	.LVL63:
 973              	.L25:
 974              	.LCFI10:
 975              		.cfi_restore_state
  77:Core/Src/Main/Interrupt.c **** 		}
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 27


 976              		.loc 1 77 4 is_stmt 1 view .LVU291
 977 0116 04AB     		add	r3, sp, #16
 978 0118 03EB8403 		add	r3, r3, r4, lsl #2
 979 011c 13ED020A 		vldr.32	s0, [r3, #-8]
 980 0120 2248     		ldr	r0, .L27+48
 981 0122 00EB0410 		add	r0, r0, r4, lsl #4
 982 0126 FFF7FEFF 		bl	getFloatLog
 983              	.LVL64:
 984 012a DFE7     		b	.L21
 985              	.L26:
  80:Core/Src/Main/Interrupt.c **** 			input[0] *= convert_to_reg_counter;
 986              		.loc 1 80 4 view .LVU292
 987 012c 224D     		ldr	r5, .L27+60
 988 012e 2246     		mov	r2, r4
 989 0130 6946     		mov	r1, sp
 990 0132 2868     		ldr	r0, [r5]
 991 0134 FFF7FEFF 		bl	getIdentifyInputCount
 992              	.LVL65:
  81:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
 993              		.loc 1 81 4 view .LVU293
  81:Core/Src/Main/Interrupt.c **** 			input[1] *= convert_to_reg_counter;
 994              		.loc 1 81 13 is_stmt 0 view .LVU294
 995 0138 DDED007A 		vldr.32	s15, [sp]
 996 013c 68EE277A 		vmul.f32	s15, s16, s15
 997 0140 CDED007A 		vstr.32	s15, [sp]
  82:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 998              		.loc 1 82 4 is_stmt 1 view .LVU295
  82:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 999              		.loc 1 82 13 is_stmt 0 view .LVU296
 1000 0144 9DED017A 		vldr.32	s14, [sp, #4]
 1001 0148 28EE078A 		vmul.f32	s16, s16, s14
 1002              	.LVL66:
  82:Core/Src/Main/Interrupt.c **** 			Motor_Switch(input[0], input[1]);
 1003              		.loc 1 82 13 view .LVU297
 1004 014c 8DED018A 		vstr.32	s16, [sp, #4]
  83:Core/Src/Main/Interrupt.c **** 			identify_count++;
 1005              		.loc 1 83 4 is_stmt 1 view .LVU298
 1006 0150 BDEEC87A 		vcvt.s32.f32	s14, s16
 1007 0154 17EE101A 		vmov	r1, s14	@ int
 1008 0158 FDEEE77A 		vcvt.s32.f32	s15, s15
 1009 015c 17EE900A 		vmov	r0, s15	@ int
 1010 0160 FFF7FEFF 		bl	Motor_Switch
 1011              	.LVL67:
  84:Core/Src/Main/Interrupt.c **** 			
 1012              		.loc 1 84 4 view .LVU299
  84:Core/Src/Main/Interrupt.c **** 			
 1013              		.loc 1 84 18 is_stmt 0 view .LVU300
 1014 0164 2B68     		ldr	r3, [r5]
 1015 0166 0133     		adds	r3, r3, #1
 1016 0168 2B60     		str	r3, [r5]
 1017 016a CCE7     		b	.L22
 1018              	.LVL68:
 1019              	.L20:
  90:Core/Src/Main/Interrupt.c **** 		count = 0;
 1020              		.loc 1 90 3 is_stmt 1 view .LVU301
 1021 016c 0021     		movs	r1, #0
 1022 016e 0846     		mov	r0, r1
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 28


 1023 0170 FFF7FEFF 		bl	Motor_Switch
 1024              	.LVL69:
  91:Core/Src/Main/Interrupt.c **** 	}
 1025              		.loc 1 91 3 view .LVU302
  91:Core/Src/Main/Interrupt.c **** 	}
 1026              		.loc 1 91 9 is_stmt 0 view .LVU303
 1027 0174 0E4B     		ldr	r3, .L27+52
 1028 0176 0022     		movs	r2, #0
 1029 0178 1A60     		str	r2, [r3]
  94:Core/Src/Main/Interrupt.c **** static void ControlTest_IT(){
 1030              		.loc 1 94 1 view .LVU304
 1031 017a C8E7     		b	.L19
 1032              	.L28:
 1033              		.align	2
 1034              	.L27:
 1035 017c 00040040 		.word	1073742848
 1036 0180 00000000 		.word	PulseDisplacement
 1037 0184 00080040 		.word	1073743872
 1038 0188 CD77813F 		.word	1065449421
 1039 018c 00000000 		.word	CurrentVelocity
 1040 0190 00000000 		.word	TotalPulse
 1041 0194 00000000 		.word	AngularV
 1042 0198 00000000 		.word	Angle
 1043 019c 00008045 		.word	1166016512
 1044 01a0 33335340 		.word	1079194419
 1045 01a4 00000000 		.word	adc1
 1046 01a8 00005244 		.word	1146224640
 1047 01ac 00000000 		.word	.LANCHOR0
 1048 01b0 00000000 		.word	.LANCHOR1
 1049 01b4 67666666 		.word	1717986919
 1050 01b8 00000000 		.word	.LANCHOR2
 1051              		.cfi_endproc
 1052              	.LFE239:
 1054              		.global	__aeabi_dadd
 1055              		.section	.text.WritingFree_IT,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1061              	WritingFree_IT:
 1062              	.LFB242:
 274:Core/Src/Main/Interrupt.c **** static void WritingFree_IT()
 275:Core/Src/Main/Interrupt.c **** {
 1063              		.loc 1 275 1 is_stmt 1 view -0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1068              	.LCFI11:
 1069              		.cfi_def_cfa_offset 24
 1070              		.cfi_offset 3, -24
 1071              		.cfi_offset 4, -20
 1072              		.cfi_offset 5, -16
 1073              		.cfi_offset 6, -12
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 2DED028B 		vpush.64	{d8}
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 29


 1077              	.LCFI12:
 1078              		.cfi_def_cfa_offset 32
 1079              		.cfi_offset 80, -32
 1080              		.cfi_offset 81, -28
 276:Core/Src/Main/Interrupt.c **** 	calcVelocity();
 1081              		.loc 1 276 2 view .LVU306
 1082              	.LBB16:
 1083              	.LBI16:
  39:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[LEFT] = - (TIM3->CNT - INITIAL_PULSE);
 1084              		.loc 1 39 13 view .LVU307
 1085              	.LBB17:
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1086              		.loc 1 40 2 view .LVU308
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1087              		.loc 1 40 35 is_stmt 0 view .LVU309
 1088 0006 6E4A     		ldr	r2, .L31+16
 1089 0008 516A     		ldr	r1, [r2, #36]
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1090              		.loc 1 40 28 view .LVU310
 1091 000a 47F22F53 		movw	r3, #29999
 1092 000e 591A     		subs	r1, r3, r1
  40:Core/Src/Main/Interrupt.c **** 	TIM3->CNT = INITIAL_PULSE;
 1093              		.loc 1 40 26 view .LVU311
 1094 0010 6C4C     		ldr	r4, .L31+20
 1095 0012 2160     		str	r1, [r4]
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 1096              		.loc 1 41 2 is_stmt 1 view .LVU312
  41:Core/Src/Main/Interrupt.c **** 	PulseDisplacement[RIGHT] = - (TIM4->CNT - INITIAL_PULSE);
 1097              		.loc 1 41 12 is_stmt 0 view .LVU313
 1098 0014 5362     		str	r3, [r2, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1099              		.loc 1 42 2 is_stmt 1 view .LVU314
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1100              		.loc 1 42 36 is_stmt 0 view .LVU315
 1101 0016 6C48     		ldr	r0, .L31+24
 1102 0018 426A     		ldr	r2, [r0, #36]
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1103              		.loc 1 42 29 view .LVU316
 1104 001a 9A1A     		subs	r2, r3, r2
  42:Core/Src/Main/Interrupt.c **** 	TIM4->CNT = INITIAL_PULSE;
 1105              		.loc 1 42 27 view .LVU317
 1106 001c 6260     		str	r2, [r4, #4]
  43:Core/Src/Main/Interrupt.c **** 
 1107              		.loc 1 43 2 is_stmt 1 view .LVU318
  43:Core/Src/Main/Interrupt.c **** 
 1108              		.loc 1 43 12 is_stmt 0 view .LVU319
 1109 001e 4362     		str	r3, [r0, #36]
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1110              		.loc 1 46 2 is_stmt 1 view .LVU320
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1111              		.loc 1 46 27 is_stmt 0 view .LVU321
 1112 0020 07EE901A 		vmov	s15, r1	@ int
 1113 0024 B8EEE77A 		vcvt.f32.s32	s14, s15
  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1114              		.loc 1 46 58 view .LVU322
 1115 0028 DFED686A 		vldr.32	s13, .L31+28
 1116 002c 27EE267A 		vmul.f32	s14, s14, s13
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 30


  46:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[RIGHT] =  (float)PulseDisplacement[RIGHT] * convert_to_velocity;
 1117              		.loc 1 46 24 view .LVU323
 1118 0030 674D     		ldr	r5, .L31+32
 1119 0032 85ED007A 		vstr.32	s14, [r5]
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1120              		.loc 1 47 2 is_stmt 1 view .LVU324
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1121              		.loc 1 47 28 is_stmt 0 view .LVU325
 1122 0036 07EE902A 		vmov	s15, r2	@ int
 1123 003a F8EEE77A 		vcvt.f32.s32	s15, s15
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1124              		.loc 1 47 60 view .LVU326
 1125 003e 67EEA67A 		vmul.f32	s15, s15, s13
  47:Core/Src/Main/Interrupt.c **** 	CurrentVelocity[BODY] = (CurrentVelocity[LEFT] + CurrentVelocity[RIGHT] )*0.5f;
 1126              		.loc 1 47 25 view .LVU327
 1127 0042 C5ED017A 		vstr.32	s15, [r5, #4]
  48:Core/Src/Main/Interrupt.c **** 
 1128              		.loc 1 48 2 is_stmt 1 view .LVU328
  48:Core/Src/Main/Interrupt.c **** 
 1129              		.loc 1 48 42 is_stmt 0 view .LVU329
 1130 0046 D5ED007A 		vldr.32	s15, [r5]
  48:Core/Src/Main/Interrupt.c **** 
 1131              		.loc 1 48 66 view .LVU330
 1132 004a 95ED017A 		vldr.32	s14, [r5, #4]
  48:Core/Src/Main/Interrupt.c **** 
 1133              		.loc 1 48 49 view .LVU331
 1134 004e 77EE877A 		vadd.f32	s15, s15, s14
  48:Core/Src/Main/Interrupt.c **** 
 1135              		.loc 1 48 75 view .LVU332
 1136 0052 F6EE008A 		vmov.f32	s17, #5.0e-1
 1137 0056 67EEA87A 		vmul.f32	s15, s15, s17
  48:Core/Src/Main/Interrupt.c **** 
 1138              		.loc 1 48 24 view .LVU333
 1139 005a C5ED027A 		vstr.32	s15, [r5, #8]
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1140              		.loc 1 51 2 is_stmt 1 view .LVU334
  51:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1141              		.loc 1 51 19 is_stmt 0 view .LVU335
 1142 005e 5D4B     		ldr	r3, .L31+36
 1143 0060 1868     		ldr	r0, [r3]
 1144 0062 0844     		add	r0, r0, r1
 1145 0064 1860     		str	r0, [r3]
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1146              		.loc 1 52 2 is_stmt 1 view .LVU336
  52:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1147              		.loc 1 52 20 is_stmt 0 view .LVU337
 1148 0066 5868     		ldr	r0, [r3, #4]
 1149 0068 1044     		add	r0, r0, r2
 1150 006a 5860     		str	r0, [r3, #4]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 1151              		.loc 1 53 2 is_stmt 1 view .LVU338
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 1152              		.loc 1 53 31 is_stmt 0 view .LVU339
 1153 006c 1868     		ldr	r0, [r3]
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 1154              		.loc 1 53 48 view .LVU340
 1155 006e 5C68     		ldr	r4, [r3, #4]
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 31


  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 1156              		.loc 1 53 37 view .LVU341
 1157 0070 2044     		add	r0, r0, r4
  53:Core/Src/Main/Interrupt.c **** 	TotalPulse[LEFT] += PulseDisplacement[LEFT];
 1158              		.loc 1 53 19 view .LVU342
 1159 0072 9860     		str	r0, [r3, #8]
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1160              		.loc 1 54 2 is_stmt 1 view .LVU343
  54:Core/Src/Main/Interrupt.c **** 	TotalPulse[RIGHT] += PulseDisplacement[RIGHT];
 1161              		.loc 1 54 19 is_stmt 0 view .LVU344
 1162 0074 1868     		ldr	r0, [r3]
 1163 0076 0144     		add	r1, r1, r0
 1164 0078 1960     		str	r1, [r3]
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1165              		.loc 1 55 2 is_stmt 1 view .LVU345
  55:Core/Src/Main/Interrupt.c **** 	TotalPulse[BODY] = TotalPulse[LEFT]+TotalPulse[RIGHT];
 1166              		.loc 1 55 20 is_stmt 0 view .LVU346
 1167 007a 5968     		ldr	r1, [r3, #4]
 1168 007c 0A44     		add	r2, r2, r1
 1169 007e 5A60     		str	r2, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 1170              		.loc 1 56 2 is_stmt 1 view .LVU347
  56:Core/Src/Main/Interrupt.c **** }
 1171              		.loc 1 56 31 is_stmt 0 view .LVU348
 1172 0080 1A68     		ldr	r2, [r3]
  56:Core/Src/Main/Interrupt.c **** }
 1173              		.loc 1 56 48 view .LVU349
 1174 0082 5968     		ldr	r1, [r3, #4]
  56:Core/Src/Main/Interrupt.c **** }
 1175              		.loc 1 56 37 view .LVU350
 1176 0084 0A44     		add	r2, r2, r1
  56:Core/Src/Main/Interrupt.c **** }
 1177              		.loc 1 56 19 view .LVU351
 1178 0086 9A60     		str	r2, [r3, #8]
 1179              	.LBE17:
 1180              	.LBE16:
 277:Core/Src/Main/Interrupt.c **** 
 278:Core/Src/Main/Interrupt.c **** #if 0
 279:Core/Src/Main/Interrupt.c **** 	static int count=0;
 280:Core/Src/Main/Interrupt.c **** 
 281:Core/Src/Main/Interrupt.c **** 	if(count < 2000)
 282:Core/Src/Main/Interrupt.c **** 	{
 283:Core/Src/Main/Interrupt.c **** 		data[count] = CurrentVelocity[LEFT];
 284:Core/Src/Main/Interrupt.c **** 	}
 285:Core/Src/Main/Interrupt.c **** 	count ++;
 286:Core/Src/Main/Interrupt.c **** #endif
 287:Core/Src/Main/Interrupt.c **** 
 288:Core/Src/Main/Interrupt.c **** #if 1
 289:Core/Src/Main/Interrupt.c **** 
 290:Core/Src/Main/Interrupt.c **** 	static float zg_last=0;
 1181              		.loc 1 290 2 is_stmt 1 view .LVU352
 291:Core/Src/Main/Interrupt.c **** 	float zg_law;
 1182              		.loc 1 291 2 view .LVU353
 292:Core/Src/Main/Interrupt.c **** 	//uint8_t zgb,zgf;
 293:Core/Src/Main/Interrupt.c **** 	ZGyro = ReadIMU(0x37, 0x38);
 1183              		.loc 1 293 2 view .LVU354
 1184              		.loc 1 293 10 is_stmt 0 view .LVU355
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 32


 1185 0088 3821     		movs	r1, #56
 1186 008a 3720     		movs	r0, #55
 1187 008c FFF7FEFF 		bl	ReadIMU
 1188              	.LVL70:
 1189              		.loc 1 293 8 view .LVU356
 1190 0090 514B     		ldr	r3, .L31+40
 1191 0092 83ED000A 		vstr.32	s0, [r3]
 294:Core/Src/Main/Interrupt.c ****     zg_law =  ( ZGyro - zg_offset )*convert_to_imu_angv;//16.4 * 180;//rad/s or rad/0.001s
 1192              		.loc 1 294 5 is_stmt 1 view .LVU357
 1193              		.loc 1 294 23 is_stmt 0 view .LVU358
 1194 0096 93ED008A 		vldr.32	s16, [r3]
 1195 009a 504B     		ldr	r3, .L31+44
 1196 009c D3ED007A 		vldr.32	s15, [r3]
 1197 00a0 38EE678A 		vsub.f32	s16, s16, s15
 1198              		.loc 1 294 36 view .LVU359
 1199 00a4 4E4B     		ldr	r3, .L31+48
 1200 00a6 D3ED007A 		vldr.32	s15, [r3]
 1201              		.loc 1 294 12 view .LVU360
 1202 00aa 28EE278A 		vmul.f32	s16, s16, s15
 1203              	.LVL71:
 295:Core/Src/Main/Interrupt.c ****     AngularV = -((0.01*zg_law) + (0.99)* (zg_last));
 1204              		.loc 1 295 5 is_stmt 1 view .LVU361
 1205              		.loc 1 295 23 is_stmt 0 view .LVU362
 1206 00ae 18EE100A 		vmov	r0, s16
 1207 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1208              	.LVL72:
 1209 00b6 3EA3     		adr	r3, .L31
 1210 00b8 D3E90023 		ldrd	r2, [r3]
 1211 00bc FFF7FEFF 		bl	__aeabi_dmul
 1212              	.LVL73:
 1213 00c0 0646     		mov	r6, r0
 1214 00c2 0F46     		mov	r7, r1
 1215              		.loc 1 295 40 view .LVU363
 1216 00c4 474C     		ldr	r4, .L31+52
 1217 00c6 2068     		ldr	r0, [r4]	@ float
 1218 00c8 FFF7FEFF 		bl	__aeabi_f2d
 1219              	.LVL74:
 1220 00cc 3AA3     		adr	r3, .L31+8
 1221 00ce D3E90023 		ldrd	r2, [r3]
 1222 00d2 FFF7FEFF 		bl	__aeabi_dmul
 1223              	.LVL75:
 1224 00d6 0246     		mov	r2, r0
 1225 00d8 0B46     		mov	r3, r1
 1226              		.loc 1 295 32 view .LVU364
 1227 00da 3046     		mov	r0, r6
 1228 00dc 3946     		mov	r1, r7
 1229 00de FFF7FEFF 		bl	__aeabi_dadd
 1230              	.LVL76:
 1231 00e2 FFF7FEFF 		bl	__aeabi_d2f
 1232              	.LVL77:
 1233              		.loc 1 295 14 view .LVU365
 1234 00e6 07EE900A 		vmov	s15, r0
 1235 00ea F1EE677A 		vneg.f32	s15, s15
 1236 00ee 3E4B     		ldr	r3, .L31+56
 1237 00f0 C3ED007A 		vstr.32	s15, [r3]
 296:Core/Src/Main/Interrupt.c ****     zg_last = zg_law;
 1238              		.loc 1 296 5 is_stmt 1 view .LVU366
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 33


 1239              		.loc 1 296 13 is_stmt 0 view .LVU367
 1240 00f4 84ED008A 		vstr.32	s16, [r4]
 297:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 1241              		.loc 1 297 2 is_stmt 1 view .LVU368
 1242              		.loc 1 297 20 is_stmt 0 view .LVU369
 1243 00f8 D3ED007A 		vldr.32	s15, [r3]
 1244 00fc 9FED3B7A 		vldr.32	s14, .L31+60
 1245 0100 27EE877A 		vmul.f32	s14, s15, s14
 1246              		.loc 1 297 8 view .LVU370
 1247 0104 3A4B     		ldr	r3, .L31+64
 1248 0106 D3ED007A 		vldr.32	s15, [r3]
 1249 010a 77EE877A 		vadd.f32	s15, s15, s14
 1250 010e C3ED007A 		vstr.32	s15, [r3]
 298:Core/Src/Main/Interrupt.c **** 
 299:Core/Src/Main/Interrupt.c **** #else
 300:Core/Src/Main/Interrupt.c **** 	AngularV = ( CurrentVelocity[LEFT] - CurrentVelocity[RIGHT] ) *convert_to_angularv;
 301:Core/Src/Main/Interrupt.c **** 	Angle += AngularV * T1;
 302:Core/Src/Main/Interrupt.c **** 
 303:Core/Src/Main/Interrupt.c **** #endif
 304:Core/Src/Main/Interrupt.c **** 	AngularAcceleration += AngularLeapsity;
 1251              		.loc 1 304 2 is_stmt 1 view .LVU371
 1252              		.loc 1 304 22 is_stmt 0 view .LVU372
 1253 0112 384B     		ldr	r3, .L31+68
 1254 0114 D3ED007A 		vldr.32	s15, [r3]
 1255 0118 374A     		ldr	r2, .L31+72
 1256 011a 92ED007A 		vldr.32	s14, [r2]
 1257 011e 77EE877A 		vadd.f32	s15, s15, s14
 1258 0122 C3ED007A 		vstr.32	s15, [r3]
 305:Core/Src/Main/Interrupt.c **** 	TargetVelocity[BODY] += Acceleration;
 1259              		.loc 1 305 2 is_stmt 1 view .LVU373
 1260 0126 354A     		ldr	r2, .L31+76
 1261 0128 92ED007A 		vldr.32	s14, [r2]
 1262              		.loc 1 305 23 is_stmt 0 view .LVU374
 1263 012c 344C     		ldr	r4, .L31+80
 1264 012e D4ED027A 		vldr.32	s15, [r4, #8]
 1265 0132 77EE877A 		vadd.f32	s15, s15, s14
 1266 0136 C4ED027A 		vstr.32	s15, [r4, #8]
 306:Core/Src/Main/Interrupt.c **** 	TargetAngularV += AngularAcceleration;
 1267              		.loc 1 306 2 is_stmt 1 view .LVU375
 1268 013a 93ED007A 		vldr.32	s14, [r3]
 1269              		.loc 1 306 17 is_stmt 0 view .LVU376
 1270 013e 314B     		ldr	r3, .L31+84
 1271 0140 D3ED007A 		vldr.32	s15, [r3]
 1272 0144 77EE877A 		vadd.f32	s15, s15, s14
 1273 0148 C3ED007A 		vstr.32	s15, [r3]
 307:Core/Src/Main/Interrupt.c **** 
 308:Core/Src/Main/Interrupt.c **** 	TargetVelocity[RIGHT] = ( TargetVelocity[BODY] - TargetAngularV * TREAD_WIDTH * 0.5f );
 1274              		.loc 1 308 2 is_stmt 1 view .LVU377
 1275              		.loc 1 308 42 is_stmt 0 view .LVU378
 1276 014c D4ED026A 		vldr.32	s13, [r4, #8]
 1277              		.loc 1 308 66 view .LVU379
 1278 0150 93ED007A 		vldr.32	s14, [r3]
 1279 0154 9FED2C6A 		vldr.32	s12, .L31+88
 1280 0158 27EE067A 		vmul.f32	s14, s14, s12
 1281              		.loc 1 308 80 view .LVU380
 1282 015c 27EE287A 		vmul.f32	s14, s14, s17
 1283              		.loc 1 308 49 view .LVU381
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 34


 1284 0160 36EEC77A 		vsub.f32	s14, s13, s14
 1285              		.loc 1 308 24 view .LVU382
 1286 0164 84ED017A 		vstr.32	s14, [r4, #4]
 309:Core/Src/Main/Interrupt.c **** 	TargetVelocity[LEFT] = ( TargetAngularV *TREAD_WIDTH ) + TargetVelocity[RIGHT];
 1287              		.loc 1 309 2 is_stmt 1 view .LVU383
 1288              		.loc 1 309 42 is_stmt 0 view .LVU384
 1289 0168 D3ED007A 		vldr.32	s15, [r3]
 1290 016c 67EE867A 		vmul.f32	s15, s15, s12
 1291              		.loc 1 309 73 view .LVU385
 1292 0170 94ED017A 		vldr.32	s14, [r4, #4]
 1293              		.loc 1 309 57 view .LVU386
 1294 0174 77EE877A 		vadd.f32	s15, s15, s14
 1295              		.loc 1 309 23 view .LVU387
 1296 0178 C4ED007A 		vstr.32	s15, [r4]
 310:Core/Src/Main/Interrupt.c **** 
 311:Core/Src/Main/Interrupt.c **** 	VelocityLeftOut = PIDControl( L_VELO_PID, TargetVelocity[LEFT], CurrentVelocity[LEFT]);
 1297              		.loc 1 311 2 is_stmt 1 view .LVU388
 1298              		.loc 1 311 20 is_stmt 0 view .LVU389
 1299 017c 94ED000A 		vldr.32	s0, [r4]
 1300 0180 D5ED000A 		vldr.32	s1, [r5]
 1301 0184 0420     		movs	r0, #4
 1302 0186 FFF7FEFF 		bl	PIDControl
 1303              	.LVL78:
 1304              		.loc 1 311 18 view .LVU390
 1305 018a 204E     		ldr	r6, .L31+92
 1306 018c 3060     		str	r0, [r6]
 312:Core/Src/Main/Interrupt.c **** 	VelocityRightOut = PIDControl( R_VELO_PID, TargetVelocity[RIGHT], CurrentVelocity[RIGHT]);
 1307              		.loc 1 312 2 is_stmt 1 view .LVU391
 1308              		.loc 1 312 21 is_stmt 0 view .LVU392
 1309 018e 94ED010A 		vldr.32	s0, [r4, #4]
 1310 0192 D5ED010A 		vldr.32	s1, [r5, #4]
 1311 0196 0520     		movs	r0, #5
 1312 0198 FFF7FEFF 		bl	PIDControl
 1313              	.LVL79:
 1314 019c 0146     		mov	r1, r0
 1315              		.loc 1 312 19 view .LVU393
 1316 019e 1C4B     		ldr	r3, .L31+96
 1317 01a0 1860     		str	r0, [r3]
 313:Core/Src/Main/Interrupt.c **** 
 314:Core/Src/Main/Interrupt.c **** 	Motor_Switch( VelocityLeftOut, VelocityRightOut );
 1318              		.loc 1 314 2 is_stmt 1 view .LVU394
 1319 01a2 3068     		ldr	r0, [r6]
 1320 01a4 FFF7FEFF 		bl	Motor_Switch
 1321              	.LVL80:
 315:Core/Src/Main/Interrupt.c **** }
 1322              		.loc 1 315 1 is_stmt 0 view .LVU395
 1323 01a8 BDEC028B 		vldm	sp!, {d8}
 1324              	.LCFI13:
 1325              		.cfi_restore 80
 1326              		.cfi_restore 81
 1327              		.cfi_def_cfa_offset 24
 1328              	.LVL81:
 1329              		.loc 1 315 1 view .LVU396
 1330 01ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1331              	.L32:
 1332 01ae 00BF     		.align	3
 1333              	.L31:
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 35


 1334 01b0 7B14AE47 		.word	1202590843
 1335 01b4 E17A843F 		.word	1065646817
 1336 01b8 AE47E17A 		.word	2061584302
 1337 01bc 14AEEF3F 		.word	1072672276
 1338 01c0 00040040 		.word	1073742848
 1339 01c4 00000000 		.word	PulseDisplacement
 1340 01c8 00080040 		.word	1073743872
 1341 01cc CD77813F 		.word	1065449421
 1342 01d0 00000000 		.word	CurrentVelocity
 1343 01d4 00000000 		.word	TotalPulse
 1344 01d8 00000000 		.word	ZGyro
 1345 01dc 00000000 		.word	zg_offset
 1346 01e0 00000000 		.word	convert_to_imu_angv
 1347 01e4 00000000 		.word	.LANCHOR3
 1348 01e8 00000000 		.word	AngularV
 1349 01ec 6F12833A 		.word	981668463
 1350 01f0 00000000 		.word	Angle
 1351 01f4 00000000 		.word	AngularAcceleration
 1352 01f8 00000000 		.word	AngularLeapsity
 1353 01fc 00000000 		.word	Acceleration
 1354 0200 00000000 		.word	TargetVelocity
 1355 0204 00000000 		.word	TargetAngularV
 1356 0208 9A990942 		.word	1107925402
 1357 020c 00000000 		.word	VelocityLeftOut
 1358 0210 00000000 		.word	VelocityRightOut
 1359              		.cfi_endproc
 1360              	.LFE242:
 1362              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1363              		.align	1
 1364              		.global	HAL_TIM_PeriodElapsedCallback
 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1369              	HAL_TIM_PeriodElapsedCallback:
 1370              	.LVL82:
 1371              	.LFB243:
 316:Core/Src/Main/Interrupt.c **** 
 317:Core/Src/Main/Interrupt.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 318:Core/Src/Main/Interrupt.c **** {
 1372              		.loc 1 318 1 is_stmt 1 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 16
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              		.loc 1 318 1 is_stmt 0 view .LVU398
 1377 0000 70B5     		push	{r4, r5, r6, lr}
 1378              	.LCFI14:
 1379              		.cfi_def_cfa_offset 16
 1380              		.cfi_offset 4, -16
 1381              		.cfi_offset 5, -12
 1382              		.cfi_offset 6, -8
 1383              		.cfi_offset 14, -4
 1384 0002 84B0     		sub	sp, sp, #16
 1385              	.LCFI15:
 1386              		.cfi_def_cfa_offset 32
 1387 0004 0446     		mov	r4, r0
 319:Core/Src/Main/Interrupt.c **** 	if( htim == &htim1)
 1388              		.loc 1 319 2 is_stmt 1 view .LVU399
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 36


 1389              		.loc 1 319 4 is_stmt 0 view .LVU400
 1390 0006 334B     		ldr	r3, .L47
 1391 0008 9842     		cmp	r0, r3
 1392 000a 04D0     		beq	.L44
 1393              	.LVL83:
 1394              	.L34:
 320:Core/Src/Main/Interrupt.c **** 	{
 321:Core/Src/Main/Interrupt.c **** 
 322:Core/Src/Main/Interrupt.c **** 		switch(IT_mode){
 323:Core/Src/Main/Interrupt.c **** 		case IT_EXPLORE:
 324:Core/Src/Main/Interrupt.c **** 			Explore_IT();
 325:Core/Src/Main/Interrupt.c **** 			break;
 326:Core/Src/Main/Interrupt.c **** 		case IT_FREE:
 327:Core/Src/Main/Interrupt.c **** 			WritingFree_IT();
 328:Core/Src/Main/Interrupt.c **** 			break;
 329:Core/Src/Main/Interrupt.c **** 		case IT_IMU_TEST:
 330:Core/Src/Main/Interrupt.c **** 
 331:Core/Src/Main/Interrupt.c **** 			if(timer1 < 5000)
 332:Core/Src/Main/Interrupt.c **** 			{
 333:Core/Src/Main/Interrupt.c **** 
 334:Core/Src/Main/Interrupt.c **** 				Update_IMU(&AngularV, &Angle);
 335:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 336:Core/Src/Main/Interrupt.c **** 				timer1 += t;
 337:Core/Src/Main/Interrupt.c **** 			}
 338:Core/Src/Main/Interrupt.c **** 			else t = 0;
 339:Core/Src/Main/Interrupt.c **** 			break;
 340:Core/Src/Main/Interrupt.c **** 		case IT_IDENTIFY:
 341:Core/Src/Main/Interrupt.c **** 			SystemIdentify_IT();
 342:Core/Src/Main/Interrupt.c **** 			break;
 343:Core/Src/Main/Interrupt.c **** 		case IT_STEP_RESPONSE:
 344:Core/Src/Main/Interrupt.c **** 
 345:Core/Src/Main/Interrupt.c **** 			break;
 346:Core/Src/Main/Interrupt.c **** 		case IT_CONTROL_TEST:
 347:Core/Src/Main/Interrupt.c **** 			ControlTest_IT();
 348:Core/Src/Main/Interrupt.c **** 			break;
 349:Core/Src/Main/Interrupt.c **** 
 350:Core/Src/Main/Interrupt.c **** 		default :
 351:Core/Src/Main/Interrupt.c **** 			break;
 352:Core/Src/Main/Interrupt.c **** 		}
 353:Core/Src/Main/Interrupt.c **** 	}
 354:Core/Src/Main/Interrupt.c **** 
 355:Core/Src/Main/Interrupt.c **** 	if( htim == &htim8)
 1395              		.loc 1 355 2 is_stmt 1 view .LVU401
 1396              		.loc 1 355 4 is_stmt 0 view .LVU402
 1397 000c 324B     		ldr	r3, .L47+4
 1398 000e 9C42     		cmp	r4, r3
 1399 0010 35D0     		beq	.L45
 1400              	.LVL84:
 1401              	.L33:
 356:Core/Src/Main/Interrupt.c **** 	{
 357:Core/Src/Main/Interrupt.c **** 		//timer8 += t;
 358:Core/Src/Main/Interrupt.c **** 
 359:Core/Src/Main/Interrupt.c **** 		//Â£Å„Çª„É≥„Çµ„Éá„Éº„Çø„ÅÆÊõ¥Êñ∞
 360:Core/Src/Main/Interrupt.c **** 		Photo[FL] = GetWallDataAverage(10, adc1[0], FL);	//adc1_IN10
 361:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 362:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 363:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 37


 364:Core/Src/Main/Interrupt.c **** 		#if 1
 365:Core/Src/Main/Interrupt.c **** 			uint32_t sample[4]={
 366:Core/Src/Main/Interrupt.c **** 				adc2[0],
 367:Core/Src/Main/Interrupt.c **** 				adc1[0],
 368:Core/Src/Main/Interrupt.c **** 				adc2[1],
 369:Core/Src/Main/Interrupt.c **** 				adc1[1]
 370:Core/Src/Main/Interrupt.c **** 			};
 371:Core/Src/Main/Interrupt.c **** 			getPhotoSampleValue_uint32(&sample[0]);
 372:Core/Src/Main/Interrupt.c **** 		#else
 373:Core/Src/Main/Interrupt.c **** 			getPhotoSampleValue_float(&Photo[0]);
 374:Core/Src/Main/Interrupt.c **** 		#endif
 375:Core/Src/Main/Interrupt.c **** 	}
 376:Core/Src/Main/Interrupt.c **** }
 1402              		.loc 1 376 1 view .LVU403
 1403 0012 04B0     		add	sp, sp, #16
 1404              	.LCFI16:
 1405              		.cfi_remember_state
 1406              		.cfi_def_cfa_offset 16
 1407              		@ sp needed
 1408 0014 70BD     		pop	{r4, r5, r6, pc}
 1409              	.LVL85:
 1410              	.L44:
 1411              	.LCFI17:
 1412              		.cfi_restore_state
 322:Core/Src/Main/Interrupt.c **** 		case IT_EXPLORE:
 1413              		.loc 1 322 3 is_stmt 1 view .LVU404
 1414 0016 314B     		ldr	r3, .L47+8
 1415 0018 1B68     		ldr	r3, [r3]
 1416 001a 052B     		cmp	r3, #5
 1417 001c F6D8     		bhi	.L34
 1418 001e 01A2     		adr	r2, .L36
 1419 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1420              		.p2align 2
 1421              	.L36:
 1422 0024 3D000000 		.word	.L40+1
 1423 0028 43000000 		.word	.L39+1
 1424 002c 49000000 		.word	.L38+1
 1425 0030 73000000 		.word	.L37+1
 1426 0034 0D000000 		.word	.L34+1
 1427 0038 79000000 		.word	.L35+1
 1428              		.p2align 1
 1429              	.L40:
 324:Core/Src/Main/Interrupt.c **** 			break;
 1430              		.loc 1 324 4 view .LVU405
 1431 003c FFF7FEFF 		bl	Explore_IT
 1432              	.LVL86:
 325:Core/Src/Main/Interrupt.c **** 		case IT_FREE:
 1433              		.loc 1 325 4 view .LVU406
 1434 0040 E4E7     		b	.L34
 1435              	.LVL87:
 1436              	.L39:
 327:Core/Src/Main/Interrupt.c **** 			break;
 1437              		.loc 1 327 4 view .LVU407
 1438 0042 FFF7FEFF 		bl	WritingFree_IT
 1439              	.LVL88:
 328:Core/Src/Main/Interrupt.c **** 		case IT_IMU_TEST:
 1440              		.loc 1 328 4 view .LVU408
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 38


 1441 0046 E1E7     		b	.L34
 1442              	.LVL89:
 1443              	.L38:
 331:Core/Src/Main/Interrupt.c **** 			{
 1444              		.loc 1 331 4 view .LVU409
 331:Core/Src/Main/Interrupt.c **** 			{
 1445              		.loc 1 331 14 is_stmt 0 view .LVU410
 1446 0048 254B     		ldr	r3, .L47+12
 1447 004a 1A68     		ldr	r2, [r3]
 331:Core/Src/Main/Interrupt.c **** 			{
 1448              		.loc 1 331 6 view .LVU411
 1449 004c 41F28733 		movw	r3, #4999
 1450 0050 9A42     		cmp	r2, r3
 1451 0052 03DD     		ble	.L46
 338:Core/Src/Main/Interrupt.c **** 			break;
 1452              		.loc 1 338 9 is_stmt 1 view .LVU412
 338:Core/Src/Main/Interrupt.c **** 			break;
 1453              		.loc 1 338 11 is_stmt 0 view .LVU413
 1454 0054 234B     		ldr	r3, .L47+16
 1455 0056 0022     		movs	r2, #0
 1456 0058 1A60     		str	r2, [r3]
 1457 005a D7E7     		b	.L34
 1458              	.L46:
 334:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 1459              		.loc 1 334 5 is_stmt 1 view .LVU414
 1460 005c 2249     		ldr	r1, .L47+20
 1461 005e 2348     		ldr	r0, .L47+24
 1462              	.LVL90:
 334:Core/Src/Main/Interrupt.c **** //				debugVL[timer1] = Angle;
 1463              		.loc 1 334 5 is_stmt 0 view .LVU415
 1464 0060 FFF7FEFF 		bl	Update_IMU
 1465              	.LVL91:
 336:Core/Src/Main/Interrupt.c **** 			}
 1466              		.loc 1 336 5 is_stmt 1 view .LVU416
 336:Core/Src/Main/Interrupt.c **** 			}
 1467              		.loc 1 336 12 is_stmt 0 view .LVU417
 1468 0064 1E4A     		ldr	r2, .L47+12
 1469 0066 1368     		ldr	r3, [r2]
 1470 0068 1E49     		ldr	r1, .L47+16
 1471 006a 0968     		ldr	r1, [r1]
 1472 006c 0B44     		add	r3, r3, r1
 1473 006e 1360     		str	r3, [r2]
 1474 0070 CCE7     		b	.L34
 1475              	.LVL92:
 1476              	.L37:
 341:Core/Src/Main/Interrupt.c **** 			break;
 1477              		.loc 1 341 4 is_stmt 1 view .LVU418
 1478 0072 FFF7FEFF 		bl	SystemIdentify_IT
 1479              	.LVL93:
 342:Core/Src/Main/Interrupt.c **** 		case IT_STEP_RESPONSE:
 1480              		.loc 1 342 4 view .LVU419
 1481 0076 C9E7     		b	.L34
 1482              	.LVL94:
 1483              	.L35:
 347:Core/Src/Main/Interrupt.c **** 			break;
 1484              		.loc 1 347 4 view .LVU420
 1485 0078 FFF7FEFF 		bl	ControlTest_IT
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 39


 1486              	.LVL95:
 348:Core/Src/Main/Interrupt.c **** 
 1487              		.loc 1 348 4 view .LVU421
 1488 007c C6E7     		b	.L34
 1489              	.L45:
 1490              	.LBB18:
 360:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1491              		.loc 1 360 3 view .LVU422
 360:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1492              		.loc 1 360 42 is_stmt 0 view .LVU423
 1493 007e 1C4C     		ldr	r4, .L47+28
 1494              	.LVL96:
 360:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1495              		.loc 1 360 15 view .LVU424
 1496 0080 0022     		movs	r2, #0
 1497 0082 2168     		ldr	r1, [r4]
 1498 0084 0A20     		movs	r0, #10
 1499 0086 FFF7FEFF 		bl	GetWallDataAverage
 1500              	.LVL97:
 360:Core/Src/Main/Interrupt.c **** 		Photo[SIDE_R] = GetWallDataAverage(10, adc1[1], SIDE_R);	//adc1_IN14
 1501              		.loc 1 360 13 view .LVU425
 1502 008a 1A4E     		ldr	r6, .L47+32
 1503 008c 86ED000A 		vstr.32	s0, [r6]
 361:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1504              		.loc 1 361 3 is_stmt 1 view .LVU426
 361:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1505              		.loc 1 361 19 is_stmt 0 view .LVU427
 1506 0090 0122     		movs	r2, #1
 1507 0092 6168     		ldr	r1, [r4, #4]
 1508 0094 0A20     		movs	r0, #10
 1509 0096 FFF7FEFF 		bl	GetWallDataAverage
 1510              	.LVL98:
 361:Core/Src/Main/Interrupt.c **** 		Photo[SL] = GetWallDataAverage(10, adc2[0], SL);	//adc2_IN11
 1511              		.loc 1 361 17 view .LVU428
 1512 009a 86ED010A 		vstr.32	s0, [r6, #4]
 362:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1513              		.loc 1 362 3 is_stmt 1 view .LVU429
 362:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1514              		.loc 1 362 42 is_stmt 0 view .LVU430
 1515 009e 164D     		ldr	r5, .L47+36
 362:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1516              		.loc 1 362 15 view .LVU431
 1517 00a0 0222     		movs	r2, #2
 1518 00a2 2968     		ldr	r1, [r5]
 1519 00a4 0A20     		movs	r0, #10
 1520 00a6 FFF7FEFF 		bl	GetWallDataAverage
 1521              	.LVL99:
 362:Core/Src/Main/Interrupt.c **** 		Photo[FR] = GetWallDataAverage(10, adc2[1], FR);	//adc2_IN15
 1522              		.loc 1 362 13 view .LVU432
 1523 00aa 86ED020A 		vstr.32	s0, [r6, #8]
 363:Core/Src/Main/Interrupt.c **** 		#if 1
 1524              		.loc 1 363 3 is_stmt 1 view .LVU433
 363:Core/Src/Main/Interrupt.c **** 		#if 1
 1525              		.loc 1 363 15 is_stmt 0 view .LVU434
 1526 00ae 0322     		movs	r2, #3
 1527 00b0 6968     		ldr	r1, [r5, #4]
 1528 00b2 0A20     		movs	r0, #10
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 40


 1529 00b4 FFF7FEFF 		bl	GetWallDataAverage
 1530              	.LVL100:
 363:Core/Src/Main/Interrupt.c **** 		#if 1
 1531              		.loc 1 363 13 view .LVU435
 1532 00b8 86ED030A 		vstr.32	s0, [r6, #12]
 365:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1533              		.loc 1 365 4 is_stmt 1 view .LVU436
 366:Core/Src/Main/Interrupt.c **** 				adc1[0],
 1534              		.loc 1 366 9 is_stmt 0 view .LVU437
 1535 00bc 2B68     		ldr	r3, [r5]
 365:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1536              		.loc 1 365 13 view .LVU438
 1537 00be 0093     		str	r3, [sp]
 367:Core/Src/Main/Interrupt.c **** 				adc2[1],
 1538              		.loc 1 367 9 view .LVU439
 1539 00c0 2368     		ldr	r3, [r4]
 365:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1540              		.loc 1 365 13 view .LVU440
 1541 00c2 0193     		str	r3, [sp, #4]
 368:Core/Src/Main/Interrupt.c **** 				adc1[1]
 1542              		.loc 1 368 9 view .LVU441
 1543 00c4 6B68     		ldr	r3, [r5, #4]
 365:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1544              		.loc 1 365 13 view .LVU442
 1545 00c6 0293     		str	r3, [sp, #8]
 369:Core/Src/Main/Interrupt.c **** 			};
 1546              		.loc 1 369 9 view .LVU443
 1547 00c8 6368     		ldr	r3, [r4, #4]
 365:Core/Src/Main/Interrupt.c **** 				adc2[0],
 1548              		.loc 1 365 13 view .LVU444
 1549 00ca 0393     		str	r3, [sp, #12]
 371:Core/Src/Main/Interrupt.c **** 		#else
 1550              		.loc 1 371 4 is_stmt 1 view .LVU445
 1551 00cc 6846     		mov	r0, sp
 1552 00ce FFF7FEFF 		bl	getPhotoSampleValue_uint32
 1553              	.LVL101:
 1554              	.LBE18:
 1555              		.loc 1 376 1 is_stmt 0 view .LVU446
 1556 00d2 9EE7     		b	.L33
 1557              	.L48:
 1558              		.align	2
 1559              	.L47:
 1560 00d4 00000000 		.word	htim1
 1561 00d8 00000000 		.word	htim8
 1562 00dc 00000000 		.word	.LANCHOR4
 1563 00e0 00000000 		.word	.LANCHOR5
 1564 00e4 00000000 		.word	.LANCHOR6
 1565 00e8 00000000 		.word	Angle
 1566 00ec 00000000 		.word	AngularV
 1567 00f0 00000000 		.word	adc1
 1568 00f4 00000000 		.word	Photo
 1569 00f8 00000000 		.word	adc2
 1570              		.cfi_endproc
 1571              	.LFE243:
 1573              		.global	log_velocity
 1574              		.global	convert_to_imu_yaccel
 1575              		.global	convert_to_angularv
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 41


 1576              		.global	convert_to_velocity
 1577              		.global	identify
 1578              		.global	dbc
 1579              		.global	velodebug_flag
 1580              		.global	IT_mode
 1581              		.global	t
 1582              		.global	timer8
 1583              		.global	timer1
 1584              		.section	.bss.IT_mode,"aw",%nobits
 1585              		.align	2
 1586              		.set	.LANCHOR4,. + 0
 1589              	IT_mode:
 1590 0000 00000000 		.space	4
 1591              		.section	.bss.count.1,"aw",%nobits
 1592              		.align	2
 1593              		.set	.LANCHOR1,. + 0
 1596              	count.1:
 1597 0000 00000000 		.space	4
 1598              		.section	.bss.dbc,"aw",%nobits
 1599              		.align	2
 1602              	dbc:
 1603 0000 00000000 		.space	4
 1604              		.section	.bss.identify,"aw",%nobits
 1605              		.align	2
 1606              		.set	.LANCHOR0,. + 0
 1609              	identify:
 1610 0000 00000000 		.space	32
 1610      00000000 
 1610      00000000 
 1610      00000000 
 1610      00000000 
 1611              		.section	.bss.identify_count.0,"aw",%nobits
 1612              		.align	2
 1613              		.set	.LANCHOR2,. + 0
 1616              	identify_count.0:
 1617 0000 00000000 		.space	4
 1618              		.section	.bss.log_velocity,"aw",%nobits
 1619              		.align	2
 1622              	log_velocity:
 1623 0000 00000000 		.space	16
 1623      00000000 
 1623      00000000 
 1623      00000000 
 1624              		.section	.bss.t,"aw",%nobits
 1625              		.align	2
 1626              		.set	.LANCHOR6,. + 0
 1629              	t:
 1630 0000 00000000 		.space	4
 1631              		.section	.bss.timer1,"aw",%nobits
 1632              		.align	2
 1633              		.set	.LANCHOR5,. + 0
 1636              	timer1:
 1637 0000 00000000 		.space	4
 1638              		.section	.bss.timer8,"aw",%nobits
 1639              		.align	2
 1642              	timer8:
 1643 0000 00000000 		.space	4
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 42


 1644              		.section	.bss.velodebug_flag,"aw",%nobits
 1645              		.align	2
 1648              	velodebug_flag:
 1649 0000 00000000 		.space	4
 1650              		.section	.bss.zg_last.2,"aw",%nobits
 1651              		.align	2
 1652              		.set	.LANCHOR3,. + 0
 1655              	zg_last.2:
 1656 0000 00000000 		.space	4
 1657              		.section	.rodata.convert_to_angularv,"a"
 1658              		.align	2
 1661              	convert_to_angularv:
 1662 0000 B823EE3C 		.word	1022239672
 1663              		.section	.rodata.convert_to_imu_yaccel,"a"
 1664              		.align	2
 1667              	convert_to_imu_yaccel:
 1668 0000 B02F9940 		.word	1083781040
 1669              		.section	.rodata.convert_to_velocity,"a"
 1670              		.align	2
 1673              	convert_to_velocity:
 1674 0000 CD77813F 		.word	1065449421
 1675              		.text
 1676              	.Letext0:
 1677              		.file 2 "c:\\tools\\gcc-arm-none-eabi-10_2021.10\\arm-none-eabi\\include\\machine\\_default_types.
 1678              		.file 3 "c:\\tools\\gcc-arm-none-eabi-10_2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1679              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1680              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1681              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1682              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1683              		.file 8 "Core/Inc/Tools/Sampling.h"
 1684              		.file 9 "Core/Inc/Main/Interrupt.h"
 1685              		.file 10 "Core/Inc/Main/MicroMouse.h"
 1686              		.file 11 "Core/Inc/Tools/PID_Control.h"
 1687              		.file 12 "Core/Inc/HardWare/mouse_ADC.h"
 1688              		.file 13 "Core/Inc/HardWare/ICM_20648.h"
 1689              		.file 14 "Core/Inc/Tools/Convert.h"
 1690              		.file 15 "Core/Inc/HardWare/Motor_Driver.h"
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 Interrupt.c
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:24     .text.Explore_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:29     .text.Explore_IT:00000000 Explore_IT
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:483    .text.Explore_IT:000002d8 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:515    .text.ControlTest_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:520    .text.ControlTest_IT:00000000 ControlTest_IT
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:731    .text.ControlTest_IT:0000012c $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:751    .text.SystemIdentify_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:756    .text.SystemIdentify_IT:00000000 SystemIdentify_IT
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1035   .text.SystemIdentify_IT:0000017c $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1056   .text.WritingFree_IT:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1061   .text.WritingFree_IT:00000000 WritingFree_IT
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1334   .text.WritingFree_IT:000001b0 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1363   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1369   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1422   .text.HAL_TIM_PeriodElapsedCallback:00000024 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1428   .text.HAL_TIM_PeriodElapsedCallback:0000003c $t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1560   .text.HAL_TIM_PeriodElapsedCallback:000000d4 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1622   .bss.log_velocity:00000000 log_velocity
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1667   .rodata.convert_to_imu_yaccel:00000000 convert_to_imu_yaccel
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1661   .rodata.convert_to_angularv:00000000 convert_to_angularv
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1673   .rodata.convert_to_velocity:00000000 convert_to_velocity
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1609   .bss.identify:00000000 identify
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1602   .bss.dbc:00000000 dbc
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1648   .bss.velodebug_flag:00000000 velodebug_flag
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1589   .bss.IT_mode:00000000 IT_mode
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1629   .bss.t:00000000 t
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1642   .bss.timer8:00000000 timer8
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1636   .bss.timer1:00000000 timer1
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1585   .bss.IT_mode:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1592   .bss.count.1:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1596   .bss.count.1:00000000 count.1
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1599   .bss.dbc:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1605   .bss.identify:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1612   .bss.identify_count.0:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1616   .bss.identify_count.0:00000000 identify_count.0
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1619   .bss.log_velocity:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1625   .bss.t:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1632   .bss.timer1:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1639   .bss.timer8:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1645   .bss.velodebug_flag:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1651   .bss.zg_last.2:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1655   .bss.zg_last.2:00000000 zg_last.2
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1658   .rodata.convert_to_angularv:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1664   .rodata.convert_to_imu_yaccel:00000000 $d
C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s:1670   .rodata.convert_to_velocity:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
Update_IMU
ADCToBatteryVoltage
PIDControl
Motor_Switch
ARM GAS  C:\Users\leopi\AppData\Local\Temp\cc72kpaj.s 			page 44


PulseDisplacement
CurrentVelocity
TotalPulse
Angle
AngularV
Pid
Acceleration
TargetVelocity
AngularAcceleration
TargetAngularV
adc1
VelocityLeftOut
VelocityRightOut
TargetAngle
Photo
PhotoDiff
TargetPhoto
getIdentifyMode
getLoggerFlag
getFloatLog
getIdentifyInputCount
__aeabi_dadd
ReadIMU
ZGyro
zg_offset
convert_to_imu_angv
AngularLeapsity
GetWallDataAverage
getPhotoSampleValue_uint32
htim1
htim8
adc2
